--TB3D 1.1.0.0.1.0 new 10/15/12, obinder
function my_ver() return "1.1.0.0.1.0" end
local force_obinder = TB3D_Modders.use_ce_obinder				--110010, calls into game binder (alife)
if force_binder == nil then force_binder = true end

-- -i -noprefetch -ltx user_andy.ltx -external -start server(andy_test_switch/single) client(localhost)
--client entity
class "ce_switcher" (CGameObject)

function ce_switcher:__init() super()
	self.m_state = 0
	--_printf("ce_switcher:__init() is called (%d)",self.m_state)
end

function ce_switcher:SetState(s)
	if self.m_state == s then
		return
	end
	local old = self.m_state
	self.m_state = s
	self:OnStateChanged(old, self.m_state)
end

function ce_switcher:GetState()
	return self.m_state
end

function ce_switcher:PlayAnim(anim_name)
	local visual = self:Visual()
	local ska = visual:dcast_PKinematicsAnimated()
	ska:PlayCycle(anim_name)
end

function ce_switcher:Load(section)
	if force_obinder then CGameObject.Load(self, section) end			--110010
end

function ce_switcher:shedule_Update(dt)
	if force_obinder then CGameObject.shedule_Update(self,dt) end			--110010
end

function ce_switcher:net_Export(packet)
	--_printf("ce_switcher:net_Export called")
	if force_obinder then CGameObject.net_Export(self, packet) end			--110010
	packet:w_u32(self.m_state)
	--_printf("ce_switcher:net_Export done")
end

function ce_switcher:net_Import(packet)
	--_printf("ce_switcher:net_Import called")
	if force_obinder then CGameObject.net_Import(self, packet) end			--110010
	self.m_state = packet:r_u32()
	--_printf("ce_switcher:net_Import done")
end

function ce_switcher:net_Spawn(se_object)
	--_printf("ce_switcher:net_Spawn called")
	if force_obinder then CGameObject.net_Spawn(self, se_object) end			--110010
	self.m_state = se_object.m_state
	local anm = se_object:getStartupAnimation()
	self:PlayAnim(anm)
	self:setVisible(1)
	self:setEnabled(1)
	--_printf("ce_switcher:net_Spawn done")
	return true;
end

function ce_switcher:net_Destroy()
	--TB3D_Services.packet_alert("ce switcher: net destroy")
	if TB3D_Modders.use_destroy_message then TB3D_Services.packet_alert("ce switcher: net destroy["..utils.to_str(self.object:name()).."] section["..self.object:section().."]") end
	if force_obinder then CGameObject.net_Destroy(self) end			--110010
	if TB3D_Modders.use_destroy_message then TB3D_Services.packet_alert("ce switcher: net destroy["..utils.to_str(self.object:name()).."] done") end
	--TB3D_Services.packet_alert("ce switcher: net destroy done")
end

function ce_switcher:OnStateChanged(old_state, new_state)
	if new_state==0 then
		self:PlayAnim("idle")
	end
	if new_state==1 then
		self:PlayAnim("idle_on")
	end
end

function ce_switcher:use(who)
	--printf("----ce_switcher used " )
	if self.m_state==0 then 
		self:SetState(1)
	else
		self:SetState(0)
	end
	return true;
end

/*
class "switcher_handler"

function switcher_handler:on_use(what,who)
	--printf("---- used by %s", who:name() )
	local state = self.o:GetState()
	if state==0 then 
		self.o:SetState(1)
	else
		self.o:SetState(0)
	end
end

function switcher_handler:__init()
end

function switcher_handler:init()
	self.o = level.object("trigger")
	if self.o==nil then 
		return
	end
	o:set_use_callback( self,"on_use")
end

function main()
	local sh = switcher_handler()
	sh:init()
	while true do
		wait(10000)
	end
end

*/