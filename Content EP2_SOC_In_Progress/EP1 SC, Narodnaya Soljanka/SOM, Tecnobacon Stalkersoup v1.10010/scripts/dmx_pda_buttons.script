-----<!-- TB3D 1.1.0.0.1.0, new pda buttons aleks1970, search for "-- aleks1970" text 
function my_ver() return "1.1.0.0.1.0" end
--[[-----------------------------------------------------------------------------------------------
 File         : dmx_pda_buttons.script
 Description  : Notepad and exit button
 Copyright    : DMX MOD
 Authors      : Charsi & Shadows
 Date         : 04.05.2011
 edit         : 24.05.2012
 Last update  : 11.03.2015 - aleks1970
--]]-----------------------------------------------------------------------------------------------

OrganizerMenu = nil
local PdaWindow, OwnerWindow
local initial = false
local win_x = winx
local win_y = winy

class "PdaMainWnd" (CUIScriptWnd)
function PdaMainWnd:__finalize() end
function PdaMainWnd:__init(owner) super()
	self.owner = owner
	self:Init(0,0,win_x,win_y)
	self.back = CUIStatic()
	self.back:Init(0,0,win_x,win_y)
	self.owner:AttachChild(self.back)
	self.ClickBtnExit = function() level.start_stop_menu(self.owner, true) end
	self.ClickBtnNotepad = function() OrganizerMenu = dmx_pda_notepad.OrganizerWnd(self.owner) level.start_stop_menu(OrganizerMenu, true) end
	local xml = CScriptXmlInit()
	xml:ParseFile("dmx_mod.xml")
	-- exit button
--	self:Register(xml:InitButton("btn_pda_exit", self.back), "btn_exit")
	self:Register(xml:Init3tButton("btn_pda_off", self.back), "btn_pda_off") -- aleks1970
--	self:AddCallback("btn_exit", ui_events.BUTTON_CLICKED, self.ClickBtnExit, self)
	self:AddCallback("btn_pda_off", ui_events.BUTTON_CLICKED, self.ClickBtnExit, self)
	-- options button
	self.btn_options = xml:Init3tButton("btn_pda_options", self.back)
	if device().width / device().height == 4 / 3 then
		self.btn_options:Init(673,40,50,25)
	elseif device().width / device().height == 5 / 4 then
		self.btn_options:Init(547,40,50,25)
	else
		self.btn_options:Init(660,40,50,25)
	end
	self:Register(self.btn_options, "btn_pda_options")
	self:AddCallback("btn_pda_options", ui_events.BUTTON_CLICKED, self.ClickBtnNotepad, self)
	-- separator
	--self.btn_separator = xml:InitStatic("btn_pda_separator", self.back)
	--if device().width / device().height == 4 / 3 then
		--self.btn_separator:Init(652,45,13,13)
	--elseif device().width / device().height == 5 / 4 then
		--self.btn_separator:Init(534,45,13,13)
	--else
		--self.btn_separator:Init(639,45,13,13)
	--end
	initial = true
end

function PdaMainWnd:ShowWnd()
	if initial and OwnerWindow.back then OwnerWindow.back:Show(true) end
end

function PdaMainWnd:DetachWnd()
	self.owner:DetachChild(self.back) initial = false
end

class "PdaNoiseWnd" (CUIScriptWnd)
function PdaNoiseWnd:__init() super()
	self:Init(0,0,win_x,win_y)
	self.ClickBtnExit = function() level.start_stop_menu(self, true) end
	local xml = CScriptXmlInit()
	xml:ParseFile("dmx_mod.xml")
	-- background
	self.back = CUIStatic()
	self.back:Init("ui\\ui_pda_interference",0,0,win_x,win_y)
	self.back:SetOriginalRect(0,0,win_x,win_y)
	self:AttachChild(self.back)
	-- exit button
--	self:Register(xml:InitButton("btn_pda_exit", self.back), "btn_exit")
	self:Register(xml:Init3tButton("btn_pda_intreference_off", self.back), "btn_pda_intreference_off") -- aleks1970
--	self:AddCallback("btn_exit", ui_events.BUTTON_DOWN, self.ClickBtnExit, self)
	self:AddCallback("btn_pda_intreference_off", ui_events.BUTTON_CLICKED, self.ClickBtnExit, self)
end

function PdaNoiseWnd:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self, dik, keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE or dik == DIK_keys.DIK_P or dik == DIK_keys.DIK_H or dik == DIK_keys.DIK_M then
			self:ClickBtnExit()
		end
	end
	return true
end

function on_info(info_id)
	if TB3D_Services.pda_is_blocked() == true then
		if info_id == "ui_pda" then
			level.start_stop_menu(level.main_input_receiver(), true)
		elseif info_id == "ui_pda_hide" then
			level.start_stop_menu(PdaNoiseWnd(), true)
		end
	else
		if info_id == "ui_pda" then
			PdaWindow = level.main_input_receiver()
			if not initial then	OwnerWindow = PdaMainWnd(level.main_input_receiver()) end
			if not OwnerWindow.back:IsShown() then OwnerWindow:ShowWnd() end
		elseif info_id == "ui_pda_hide" then
			if OwnerWindow then OwnerWindow:DetachWnd() end
		end
	end
end

function pda_turn_off()
	if PdaWindow and PdaWindow:IsShown() then
		level.start_stop_menu(PdaWindow, true)
	end
end
