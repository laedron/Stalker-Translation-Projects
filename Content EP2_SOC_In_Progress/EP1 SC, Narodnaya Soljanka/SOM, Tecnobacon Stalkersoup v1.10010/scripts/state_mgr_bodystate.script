--TB3D 1.0.9.9.1 
function my_ver() return "1.0.9.9.1" end

--' Compound state of the body
--' we are in need of state?
class "eva_state_mgr_bodystate" (property_evaluator)
function eva_state_mgr_bodystate:__init(name, st) super (nil, name)
	self.st = st
end
function eva_state_mgr_bodystate:evaluate()
	return (state_lib.states[self.st.target_state].bodystate == nil) or
		   (state_lib.states[self.st.target_state].bodystate == self.object:target_body_state())
end

--' Do we really need to switch to Crouch
class "eva_state_mgr_bodystate_crouch" (property_evaluator)
function eva_state_mgr_bodystate_crouch:__init(name, st) super (nil, name)
	self.st = st
end
function eva_state_mgr_bodystate_crouch:evaluate()
	return state_lib.states[self.st.target_state].bodystate == move.crouch
end

--' Do we really need to switch to the stand
class "eva_state_mgr_bodystate_standing" (property_evaluator)
function eva_state_mgr_bodystate_standing:__init(name, st) super (nil, name)
	self.st = st
end
function eva_state_mgr_bodystate_standing:evaluate()
	return state_lib.states[self.st.target_state].bodystate == move.standing
end

--' whether we are now in the Crouch
class "eva_state_mgr_bodystate_crouch_now" (property_evaluator)
function eva_state_mgr_bodystate_crouch_now:__init(name, st) super (nil, name)
	self.st = st
end
function eva_state_mgr_bodystate_crouch_now:evaluate()
	return  self.object:target_body_state() == move.crouch
end

--' whether we are now in the standings
class "eva_state_mgr_bodystate_standing_now" (property_evaluator)
function eva_state_mgr_bodystate_standing_now:__init(name, st) super (nil, name)
	self.st = st
end
function eva_state_mgr_bodystate_standing_now:evaluate()
	return  self.object:target_body_state() == move.standing
end

--' We turn to Crouch
class "act_state_mgr_bodystate_crouch" (action_base)
function act_state_mgr_bodystate_crouch:__init(name) super (nil, name)
end
function act_state_mgr_bodystate_crouch:initialize()
	action_base.initialize(self)
	self.object:set_body_state(move.crouch)
end
function act_state_mgr_bodystate_crouch:execute()
	action_base.execute(self)
end
function act_state_mgr_bodystate_crouch:finalize()
	action_base.finalize(self)
end

--' We proceed in standings
class "act_state_mgr_bodystate_standing" (action_base)
function act_state_mgr_bodystate_standing:__init(name) super (nil, name)
end
function act_state_mgr_bodystate_standing:initialize()
	action_base.initialize(self)
	self.object:set_body_state(move.standing)
end
function act_state_mgr_bodystate_standing:execute()
	action_base.execute(self)
end
function act_state_mgr_bodystate_standing:finalize()
	action_base.finalize(self)
end