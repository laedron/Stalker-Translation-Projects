--TB3D 1.1.0.0.0.5, translate and text color - aleks1970, L03u_agr_underground
function my_ver() return "1.1.0.0.0.5" end
-- Module Smart Handheld Teleport ... Spot (Shooter)
-- Features: 1) Not sovseh locations can teleport, 2) If you can not teleport to this location, you will receive a message from the List Sakharov location where you can teleport, and 3) to Use the teleport only when HS had already done some story assignments, 4) If you can not to Use it also will get a message ..
-- otrihtovano by sapsan
local math_random = math.random
local translate = game.translate_string
local text_color_system = TB3D_Services.get_text_color("system")

local tabl_changers_by_level = {-- flew! complement! no level - no teleport there!
	["l01_escape"] = {
		p_story_id = 99999,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 6306,	-- level_vertex_id   - identify the level at which to throw the player will level_changer
		p_dest_gv = 41,	-- game_vertex_id
		p_dest_pos = {-259.61,-13.98,-187.48},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l03_agroprom"] = {
		p_story_id = 99998,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 399163,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 419,	-- game_vertex_id
		p_dest_pos = {182.44876098633,9.1928939819336,-46.267429351807},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l03u_agr_underground"] = {
		p_story_id = 99997,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 4451,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 736,	-- game_vertex_id
		p_dest_pos = {-45.126068115234,-6.4571619033813,-37.66019821167},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l08_yantar"] = {
		p_story_id = 99996,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 53157,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 1480,	-- game_vertex_id
		p_dest_pos = {28.687835693359,-5.943422794342,-272.9033203125},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l05_bar"] = {
		p_story_id = 99995,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 68763,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 1274,	-- game_vertex_id
		p_dest_pos = {276.64755249023,0.055086404085159,-66.742523193359},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l10_radar"] = {
		p_story_id = 99994,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 14611,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 2013,	-- game_vertex_id
		p_dest_pos = {14.053562164307,-1.2424700260162,41.381050109863},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l04_darkvalley"] = {
		p_story_id = 99993,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 212105,	-- level_vertex_id   - identify the level at which to throw the player will level_changer
		p_dest_gv = 1025,	-- game_vertex_id
		p_dest_pos = {31.025503158569,-2.9186296463013,-18.474792480469},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l11_pripyat"] = {
		p_story_id = 99992,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 7817,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 2216,	-- game_vertex_id
		p_dest_pos = {-112.93630981445,2.8031325340271,97.108512878418},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l04u_labx18"] = {
		p_story_id = 99991,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 4086,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 1155,	-- game_vertex_id
		p_dest_pos = {5.0796270370483,-12.429841995239,15.65408706665},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l02_garbage"] = {
		p_story_id = 99990,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 272734,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 263,	-- game_vertex_id
		p_dest_pos = {108.47253417969,-2.2334003448486,-264.66119384766},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l07_military"] = {
		p_story_id = 99989,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 83694,	-- level_vertex_id   - identify the level at which to throw the player will level_changer
		p_dest_gv = 1852,	-- game_vertex_id
		p_dest_pos = {-243.89454650879,-0.28634393215179,435.28894042969},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	},
	["l06_rostok"] = {
		p_story_id = 99988,	-- STORY_ID new level_changer (We shall need later)
		p_dest_lv = 8119,	-- level_vertex_id   - identify the level at which to throw the player will level_changer 
		p_dest_gv = 1382,	-- game_vertex_id
		p_dest_pos = {-254.47462463379,-5.8917918205261,88.748420715332},	-- coordinates of the point at which the new level will be a player
		p_dest_dir = {0.0, 0.0, 0.0},	-- napravrenie view player
		p_silent = 1	-- should be set to 1 to suppress the issue of changing the level (automatic transfer)
	}
}


function hand_teleporter_use()
	amk.spawn_item_in_inv("hand_teleporter")
	if db.actor:character_rank() > 600 then
		local actor = db.actor:position()
		local actor_lvid = db.actor:level_vertex_id()
		local actor_gvid = db.actor:game_vertex_id()
		local level_name = level.name()
		if tabl_changers_by_level[level_name] then -- Strangely enough, this "to" limited and not "source"
			local tabl_levels = {} -- fill list IMET levels to be able to select them randomly
			for k,v in pairs(tabl_changers_by_level) do
				tabl_levels[#tabl_levels+1] = k
			end
				local random_level
				repeat
					random_level = math_random(1,#tabl_levels)
				until level_name ~= tabl_levels[random_level] -- exclude teleportation to the same level
				level_name = tabl_levels[random_level]
				local level_data = tabl_changers_by_level[level_name]
				dmx_mod.create_level_changer(level_data.p_story_id,
				actor,
				actor_lvid,
				actor_gvid,
				level_data.p_dest_lv, 
				level_data.p_dest_gv,
				vector():set(level_data.p_dest_pos[1],level_data.p_dest_pos[2],level_data.p_dest_pos[3]),
				vector():set(level_data.p_dest_dir[1], level_data.p_dest_dir[2], level_data.p_dest_dir[3]),
				level_name,
				level_data.p_silent,0)
		else
			soobj()
		end
	else
		noob()
	end
end

function soobj() -- Strangely enough, this "to" limited and not "source"
	local tabl_levels_name = {}
	local sim = alife();
	for k,v in pairs(tabl_changers_by_level) do
		tabl_levels_name[#tabl_levels_name+1] = translate(k)
	end
	local levels_name = table.concat(tabl_levels_name, ", ")
	local text = text_color_system..translate("not_teleport_out_0").." "..levels_name.."\\n"
	news_manager.send_tip_txt(db.actor, text, nil, nil, 10000)
end

function noob()
	local text = text_color_system..translate("not_quite_experienced_1")
	news_manager.send_tip_txt(db.actor, text, nil, nil, 10000)
end

function rem()
local sim = alife()
	local se_obj
	for k,v in pairs(tabl_changers_by_level) do
		se_obj = sim:story_object(v.p_story_id)
		if se_obj then
			sim:release(se_obj, true)
		end
	end
end
