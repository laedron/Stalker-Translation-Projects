-- TB3D 1.0.9.9.2.6 load/save reporting
function my_ver() return "1.0.9.9.2.6" end
--[[
Developed by AMK-Team
File: amkII_launcher. script
Copyright: © AMK-Team 2009
Author: Refresh

Since: 10.01.2009 20:17
	-- Write a class to run the functions through the update actor. Useful in slechayah when the actor is not yet available.
Since: 18.01.2009 23:09
	-- Added ability to set a timer to call functions.
Since: 22.01.2009 0:15
	-- The timer is stored in the storage actor.
	-- To save space, create a plate aFunctions. ["Comfortable us the name of the function"] = {"A short name for the storage", "string function call}
Since: 15.02.2009 1:05	
	-- Removed debug Old and corrected a little code.
]]--

local aFunctions = {}

--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
-- *			                    CAmkLauncher 		                           	       *
--* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

class "CAmkLauncher"
function CAmkLauncher:__init()
	self.aLauncher = {}
	self.iTblSize  = 0
	self.iPeriod   = 0
end

--[[
--	SaveData(oActor)
--	Saving the game. Saving variables.
--	@param	object	oActor	Object of an actor.
--]]	
function CAmkLauncher:SaveData(oActor)
    if TB3D_Modders.Global_Debug then TB3D_Services.packet_alert("AMKii Launcher: Savedata["..utils.to_str(oActor:name()).."]") end
	local iSizeData = 0
	local iVal
	for sName, aFunc in pairs(self.aLauncher) do
		if aFunctions[sName] then
			iVal = aFunc.oTime:diffSec(game.get_game_time())	
			xr_logic.pstor_store(oActor, aFunctions[sName][1], iVal)					
			--if dbug then
				iSizeData = (iSizeData + string.len(aFunctions[sName][1]) + 1) + 4
				--iSizeData = iSizeData + 4		
			--end
			if TB3D_Modders.Global_Debug then TB3D_Services.packet_alert("AMKii Launcher: Savedata var["..utils.to_str(aFunctions[sName][1]).."] = ["..utils.to_str(iVal).."]") end
		end
	end
    if TB3D_Modders.Global_Debug then TB3D_Services.info_alert("AMKii Launcher: SaveData done size["..utils.to_str(iSizeData).."]") end
end

--[[
--	LoadData(oActor)
--	Downloading a game. Loading the saved variables.
--	@param	object	oActor	Object of an actor.
--]]	
function CAmkLauncher:LoadData(oActor)
    if TB3D_Modders.Global_Debug then TB3D_Services.packet_alert("AMKii Launcher: LoadData["..utils.to_str(oActor:name()).."]") end
local iVal
local oIdle
	for sName, aFunc in pairs(aFunctions) do
		iVal = amk.load_variable(aFunc[1], nil)
		if iVal == nil then return end
	
		self.aLauncher[sName] = {}	
		self.aLauncher[sName].sValue = aFunc[2]
	
		oIdle = game.CTime()
		oIdle:setHMSms( 0, 0, iVal, 0)		
		self.aLauncher[sName].oTime = game.get_game_time() + oIdle
		
		self.iTblSize = self.iTblSize + 1
	end
    if TB3D_Modders.Global_Debug then TB3D_Services.info_alert("AMKii Launcher: LoadData done size["..utils.to_str(self.iTblSize).."]") end
end

--[[
--	UpdateFuncs()
--	Update on the function call.
--]]	
function CAmkLauncher:UpdateFuncs()
	if self.iTblSize < 1 or self.iPeriod > time_global() then return end	
	self.iPeriod = time_global() + 2000
	local oFunction
	for sName, aFnc in pairs(self.aLauncher) do
		if aFnc.oTime:diffSec(game.get_game_time()) < 1 then			
			self:DelFunc(sName)
			oFunction = loadstring(aFnc.sValue)
			oFunction() --exemple		
		end
	end	
end

--[[
--	AddFunc(sName, sValue, iSeconds)
--	Add a function to launcher.
--	@param	string	sName	The label features an arbitrary title.
--	@param	string	sValue	The label features an arbitrary title.
--	@param	integer	iSeconds	Time for a timer in the game seconds.	
--]]	
function CAmkLauncher:AddFunc(sName, sValue, iSeconds)
	if iSeconds == nil then
		iSeconds = 0
	end
	
	self.aLauncher[sName] = {}
	self.aLauncher[sName].sValue = sValue
	
	local oIdle = game.CTime()
	oIdle:setHMSms( 0, 0, iSeconds, 0)
	self.aLauncher[sName].oTime = game.get_game_time() + oIdle
	
	self.iTblSize = self.iTblSize + 1	
end

--[[
--	DelFunc(sName)
--	Removing functions from the launcher.
--	@param	string	sName	The label features an arbitrary title.		
--]]	
function CAmkLauncher:DelFunc(sName)
	if self.aLauncher[sName] then		
		self.aLauncher[sName] = nil
		self.iTblSize = self.iTblSize - 1
	end
end

--[[
--	HaveFunc(sName)
--	Checking for the presence of function in the launcher.
--	@param	string	sName	The label features an arbitrary title.	
--	@return	boolen			
--]]	
function CAmkLauncher:HaveFunc(sName)
	if self.aLauncher[sName] ~= nil then
		return true	
	end
	return false
end

