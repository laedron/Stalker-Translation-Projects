--TB3D 1.1.0.0.0.6 set <good_cond to <0.94 to include 0.95 in tests, fixed <good_threshold to >good_threshold, check_bad_weapons, good_eagle_m1_have, optimized, fixed locals, sig_m1
function my_ver() return "1.1.0.0.0.6" end

local nagrad = {
  level_1 = {
  "af_medusa",
  "af_cristall_flower",
  "af_night_star",
  "af_vyvert",
  "af_gravi",
  "af_gold_fish",
  "af_blood",
  "af_mincer_meat",
  "af_soul",
  "af_electra_sparkler",
  "af_electra_flash",
  "af_electra_moonlight",
  "af_rusty_thorn",
  "af_rusty_kristall",
  "af_rusty_sea_urchin"
     },
  level_2 = {
  "af_electra_moonlight",
  "af_rusty_thorn",
  "af_rusty_kristall",
  "af_rusty_sea_urchin",
  "af_ameba_slime",
  "af_ameba_slug",
  "af_ameba_mica",
  "af_drops",
  "af_fireball"
 },
  level_3 = {
  "af_dummy_glassbeads",
  "af_dummy_pellicle",
  "af_dummy_battery",
  "af_dummy_dummy",
  "af_dummy_spring",
  "af_fuzz_kolobok"
 },
  level_4 = {
  "af_spirit_1",
  "af_cry_1",
  "af_babka_1",
  "af_pudd_1",
  "af_dik_1",
  "af_kol_1",
  "af_armor_1"
   },
  level_5 = {
  "af_armor_2",
  "af_buliz",
  "af_cry_2"
 }
}

local good_threshold = TB3D_Modders.condition_threshold	or 0.9					--109960 localized condition check
function is_good_condition(item)
	local cond = db.actor:object(item):condition()
	if TB3D_Modders.use_info_message then
		TB3D_Services.packet_alert("wawka dialog: is_good_condition["..utils.to_str(item).."] condition["..utils.to_str(cond).."]")
	end
	if cond == nil then
		return true			--does not have a condition function
	elseif cond > good_threshold then
		return true
	end
	return false
end
function change_threshold(thrshld)
	good_threshold = thrshld
end

function na_hunters_toz(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local hunter_toz = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="hunters_toz" then
		hunter_toz=hunter_toz+1 end end, nil)
    if hunter_toz>=1 then
        return true
	else
        return false
	end
end
function vzyal_hunters_toz(first_speaker, second_speaker)
	local item = ""
	local count = math.random(2,4)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "hunters_toz", "out", 1)
    flamethrower.relocate_n_items_section(actor, item , "in", count)
end
function na_xm8_para_sk2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local xm8_para_sk2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_xm8_para_sk2" then         
        xm8_para_sk2 = xm8_para_sk2+1 end end, nil)
    if xm8_para_sk2>=1 then
        return true
	else
        return false
	end
end

function vzyal_xm8_para_sk2(first_speaker, second_speaker)
	local item = ""
	local count = math.random(2,3)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_xm8_para_sk2", "out", 1)
    flamethrower.relocate_n_items_section(actor, item , "in", count)
end

function na_ppsh(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local ppsh41_sk2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_ppsh41_sk2" then         
        ppsh41_sk2 = ppsh41_sk2+1 end end, nil)
    if ppsh41_sk2>=1 then
        return true
	else
        return false
	end
end

function vzyal_ppsh(first_speaker, second_speaker)
	local item = ""
	local count = math.random(2,4)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_ppsh41_sk2", "out", 1)
    flamethrower.relocate_n_items_section(actor, item , "in", count)
end

function na_hk417_sk1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local hk417_sk1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_hk417_sk1" then         
        hk417_sk1 = hk417_sk1+1 end end, nil)
    if hk417_sk1>=1 then
        return true
	else
        return false
	end
end

function vzyal_hk417_sk1(first_speaker, second_speaker)
	local item = ""
	local count = math.random(1,3)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_hk417_sk1", "out", 1)
    flamethrower.relocate_n_items_section(actor, item , "in", count)
end

function na_mosinka_optika(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local m1891_30_scope = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_m1891_30_scope" then
		m1891_30_scope=m1891_30_scope+1 end end, nil)
    if m1891_30_scope>=1 then
        return true
	else
        return false
	end
end

function vzyal_mosinka_optika(first_speaker, second_speaker)
	local item = ""
	local count = math.random(1,3)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_m1891_30_scope", "out", 1)
    flamethrower.relocate_n_items_section(actor, item , "in", count)
end

function na_ak74_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local ak74_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_ak74_m1" then
		ak74_m1=ak74_m1+1 end end, nil)
    if ak74_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_ak74_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_ak74_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_abakan_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local abakan_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_abakan_m1" then
		abakan_m1=abakan_m1+1 end end, nil)
    if abakan_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_abakan_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_abakan_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_fort_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local fort_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_fort_m1" then
		fort_m1=fort_m1+1 end end, nil)
    if fort_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_fort_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_fort_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_mp5_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local mp5_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_mp5_m1" then
		mp5_m1=mp5_m1+1 end end, nil)
    if mp5_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_mp5_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_mp5_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_groza_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local groza_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_groza_m1" then
		groza_m1=groza_m1+1 end end, nil)
    if groza_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_groza_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_groza_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_spas12_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local spas12_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_spas12_m1" then
		spas12_m1=spas12_m1+1 end end, nil)
    if spas12_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_spas12_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_spas12_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_winchester_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local winchester_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_winchester_m1" then
		winchester_m1=winchester_m1+1 end end, nil)
    if winchester_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_winchester_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_winchester_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_l85_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local l85_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_l85_m1" then
		l85_m1=l85_m1+1 end end, nil)
    if l85_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_l85_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_l85_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_lr300_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local lr300_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_lr300_m1" then
		lr300_m1=lr300_m1+1 end end, nil)
    if lr300_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_lr300_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_lr300_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_svd_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local svd_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_svd_m1" then
		svd_m1=svd_m1+1 end end, nil)
    if svd_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_svd_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_svd_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_sig_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local sig_m1 = 0			--110006, was wpn_sig_m1
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_sig_m1" then
		sig_m1=sig_m1+1 end end, nil)
    if sig_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_sig_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_sig_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_eagle_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local eagle_m1 = 0			--110006
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_eagle_m1" then
		eagle_m1=eagle_m1+1 end end, nil)
    if eagle_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_eagle_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_eagle_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_colt_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local colt_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_colt_m1" then
		colt_m1=colt_m1+1 end end, nil)
    if colt_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_colt_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_colt_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_val_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local val_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_val_m1" then
		val_m1=val_m1+1 end end, nil)
    if val_m1>=1 then
        return true
	else
        return false
	end
end

function vzyal_val_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_val_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_mp5_m2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local mp5_m2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_mp5_m2" then
		mp5_m2=mp5_m2+1 end end, nil)
    if mp5_m2>=1 then
        return true
	else
        return false
	end
end

function vzyal_mp5_m2(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_mp5_m2", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end

function na_abakan_m2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local abakan_m2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_abakan_m2" then
		abakan_m2=abakan_m2+1 end end, nil)
    if abakan_m2>=1 then
        return true
	else
        return false
	end
end

function vzyal_abakan_m2(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_abakan_m2", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_l85_m2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local l85_m2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_l85_m2" then
		l85_m2=l85_m2+1 end end, nil)
    if l85_m2>=1 then
        return true
	else
        return false
	end
end
function vzyal_l85_m2(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_l85_m2", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_ak74u_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local ak74u_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_ak74u_m1" then
		ak74u_m1=ak74u_m1+1 end end, nil)
    if ak74u_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_ak74u_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_ak74u_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_sig_m2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local sig_m2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_sig_m2" then
		sig_m2=sig_m2+1 end end, nil)
    if sig_m2>=1 then
        return true
	else
        return false
	end
end
function vzyal_sig_m2(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_sig_m2", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_g36_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local g36_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_g36_m1" then
		g36_m1=g36_m1+1 end end, nil)
    if g36_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_g36_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_g36_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_svu_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local svu_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_svu_m1" then
		svu_m1=svu_m1+1 end end, nil)
    if svu_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_svu_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_svu_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_beretta_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local beretta_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_beretta_m1" then
		beretta_m1=beretta_m1+1 end end, nil)
    if beretta_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_beretta_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_beretta_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_vintorez_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local vintorez_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_vintorez_m1" then
		vintorez_m1=vintorez_m1+1 end end, nil)
    if vintorez_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_vintorez_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_5[math.random(table.getn(nagrad.level_5))]
	flamethrower.relocate_n_items_section(trader, "wpn_vintorez_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_groza_m2(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local groza_m2 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_groza_m2" then
		groza_m2=groza_m2+1 end end, nil)
    if groza_m2>=1 then
        return true
	else
        return false
	end
end
function vzyal_groza_m2(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_groza_m2", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_rg6_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local rg6_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_rg6_m1" then
		rg6_m1=rg6_m1+1 end end, nil)
    if rg6_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_rg6_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_5[math.random(table.getn(nagrad.level_5))]
	flamethrower.relocate_n_items_section(trader, "wpn_rg6_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_walter_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local walther_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_walther_m1" then
		walther_m1=walther_m1+1 end end, nil)
    if walther_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_walter_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_walther_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_pm_m1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local pm_m1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_pm_m1" then
		pm_m1=pm_m1+1 end end, nil)
    if pm_m1>=1 then
        return true
	else
        return false
	end
end
function vzyal_pm_m1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_1[math.random(table.getn(nagrad.level_1))]
	flamethrower.relocate_n_items_section(trader, "wpn_pm_m1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_rpg7(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local rpg7 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_rpg7" then
		rpg7=rpg7+1 end end, nil)
    if rpg7>=1 then
        return true
	else
        return false
	end
end
function vzyal_rpg7(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_rpg7", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_sr25_mk11_mod0_sk1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local sr25_mk11_mod0_sk1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_sr25_mk11_mod0_sk1" then
		sr25_mk11_mod0_sk1=sr25_mk11_mod0_sk1+1 end end, nil)
    if sr25_mk11_mod0_sk1>=1 then
        return true
	else
        return false
	end
end
function vzyal_sr25_mk11_mod0_sk1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_3[math.random(table.getn(nagrad.level_3))]
	flamethrower.relocate_n_items_section(trader, "wpn_sr25_mk11_mod0_sk1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_famas_p3_sk1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local famas_p3_sk1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_famas_p3_sk1" then
		famas_p3_sk1=famas_p3_sk1+1 end end, nil)
    if famas_p3_sk1>=1 then
        return true
	else
        return false
	end
end
function vzyal_famas_p3_sk1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_famas_p3_sk1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_darkgauss(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local dark_gauss = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_dark_gauss" then
		dark_gauss=dark_gauss+1 end end, nil)
    if dark_gauss>=1 then
        return true
	else
        return false
	end
end
function vzyal_darkgauss(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_dark_gauss", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_aps_sk1(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local aps_sk1 = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_aps_sk1" then
		aps_sk1=aps_sk1+1 end end, nil)
    if aps_sk1>=1 then
        return true
	else
        return false
	end
end
function vzyal_aps_sk1(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_2[math.random(table.getn(nagrad.level_2))]
	flamethrower.relocate_n_items_section(trader, "wpn_aps_sk1", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end
function na_fn2000_sniper(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local fn2000_sniper = 0			--110005
	actor:iterate_inventory(function (dummy, item) if item:section()=="wpn_fn2000_sniper" then
		fn2000_sniper=fn2000_sniper+1 end end, nil)
    if fn2000_sniper>=1 then
        return true
	else
        return false
	end
end
function vzyal_fn2000_sniper(first_speaker, second_speaker)
	local item = ""
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	item = nagrad.level_4[math.random(table.getn(nagrad.level_4))]
	flamethrower.relocate_n_items_section(trader, "wpn_fn2000_sniper", "out", 1)
    dialogs.relocate_item_section(second_speaker, item , "in")
end


-- Check

function give_psevdo_tails(first_speaker, second_speaker)
	sak.out_item_namber("mutant_psevdodog_tail", 5)
end
function psevdo_tails_have()
	return amk_utils.inventory_search("mutant_psevdodog_tail",5) ~= false
end
function give_dog_tails(first_speaker, second_speaker)
	sak.out_item_namber("mutant_dog_tail", 10)
end
function dog_tails_have()
	return amk_utils.inventory_search("mutant_dog_tail",10) ~= false
end
function give_burer_hand(first_speaker, second_speaker)
	sak.out_item_namber("mutant_burer_hand", 4)
end
function burer_hand_have()
	return amk_utils.inventory_search("mutant_burer_hand",4) ~= false
end
function give_hand_kontroler(first_speaker, second_speaker)
	sak.out_item_namber("mutant_hand_kontroler", 2)
end
function hand_kontroler_have()
	return amk_utils.inventory_search("mutant_hand_kontroler",2) ~= false
end
function give_vodka5(first_speaker, second_speaker)
	sak.out_item_namber("vodka", 5)
end
function vodka5_have()
	return amk_utils.inventory_search("vodka",5) ~= false
end
function give_vodka10(first_speaker, second_speaker)
	sak.out_item_namber("vodka", 10)
end
function vodka10_have()
	return amk_utils.inventory_search("vodka",10) ~= false
end
function give_vodka20(first_speaker, second_speaker)
	sak.out_item_namber("vodka", 12)
end
function vodka20_have()
	return amk_utils.inventory_search("vodka",12) ~= false
end
function give_krysyk_pomer_goods()
	sak.out_item_namber("oceanic815",40)
end
function have_krysyk_pomer_goods()
  	return amk_utils.inventory_search("oceanic815",40) ~= false
end
function give_hunters_toz()
	sak.out_item_namber("hunters_toz",1)
end
function have_hunters_toz()
  	return amk_utils.inventory_search("hunters_toz",1) ~= false
end
function give_chemodan(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_01", 1)
end
function chemodan_have()
  	return amk_utils.inventory_search("inventory_sakbox_01",1) ~= false
end
function give_plan(first_speaker, second_speaker)
	sak.out_item_namber("travka", 1)
end
function plan_have()
  	return amk_utils.inventory_search("travka",1) ~= false
end
function give_pivo10()
	sak.out_item_namber("oceanic815",10)
end
function have_pivo10()
  	return amk_utils.inventory_search("oceanic815",10) ~= false
end
function give_wpn_bm16()
	sak.out_item_namber("wpn_bm16",1)
end
function have_wpn_bm16()
  	return amk_utils.inventory_search("wpn_bm16",1) ~= false
end

-- Exchange

function add_ammo_12x76_dart(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x76_dart",1)
	dialogs.relocate_item_section(first_speaker, "ammo_12x76_dart", "in")
end
function add_ammo_12x76_zhekan(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x76_zhekan",2)
	dialogs.relocate_item_section(first_speaker, "ammo_12x76_zhekan", "in")
end
function add_ammo_12x70_buck(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x70_buck",3)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in")
end
function add_ammo_9x39_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
end
function add_ammo_9x39_sp5(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_sp5",3)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_sp5", "in")
end
function add_ammo_9x39_pab9(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_pab9",4)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_pab9", "in")
end
function add_ammo_9x39_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
end
function add_ammo_9x39_pab9(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_pab9",3)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_pab9", "in")
end
function add_vodka20(first_speaker, second_speaker)
	sak.create_items(db.actor,"vodka",12)
	dialogs.relocate_item_section(first_speaker, "vodka", "in")
end
function add_medkit20(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit",19)
	dialogs.relocate_item_section(first_speaker, "medkit", "in")
end
function add_antirad30(first_speaker, second_speaker)
	sak.create_items(db.actor,"antirad",29)
	dialogs.relocate_item_section(first_speaker, "antirad", "in")
end

function add_wpn_bizon(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_bizon", "in")
end
function add_wpn_kriss(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_kriss_super_v", "in")
end
function add_wpn_mp7(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_mp7a3", "in")
end
function add_wpn_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_toz34", "in")
end
function add_wpn_ak47(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_m4_taktik", "in")
end
function add_wpn_saiga(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_saiga12c", "in")
end
function add_wpn_desert_eagle(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_desert_eagle", "in")
end
function add_wpn_bm16(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_bm16", "in")
end
function add_ammo_flame(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_flame", "in")
end
function add_amk_ballon(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "amk_ballon", "in")
end
function add_amk_kanistra(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "amk_kanistra", "in")
end
function add_svoboda_heavy_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit", "in")
end
function add_dolg_scientific_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit", "in")
end
function add_hunters_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "hunters_toz", "in")
end
function add_plan(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "travka", "in")
end

--Check Armour Condition

function bad_exo_have(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_bast") and is_good_condition("outfit_exo_m1_bast") == false then
			return true
		end
	end
	return false
end
function good_exo_have(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_bast") and is_good_condition("outfit_exo_m1_bast") then
			return true
		end
	end
	return false
end
function bad_strelok_have(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_blackwhiteplus") and is_good_condition("stalker_outfit_m3_blackwhiteplus") == false then
			return true
		end
	end
	return false
end
function good_strelok_have(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_blackwhiteplus") and is_good_condition("stalker_outfit_m3_blackwhiteplus") then
			return true
		end
	end
	return false
end
function bad_gravi_have(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit") and is_good_condition("soldier_outfit") == false then
			return true
		end
	end
	return false
end
function good_gravi_have(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit") and is_good_condition("soldier_outfit") then
			return true
		end
	end
	return false
end
function bad_skat_have(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_bast") and is_good_condition("militaryspec_outfit_bast") == false then
			return true
		end
	end
	return false
end
function good_skat_have(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_bast") and is_good_condition("militaryspec_outfit_bast") then
			return true
		end
	end
	return false
end

--Check the status of weapons

function bad_toz_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_toz34") and is_good_condition("wpn_toz34") == false then
				return true
			end
		end
	end
	return false
end
function good_toz_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_toz34") and is_good_condition("wpn_toz34") then
				return true
			end
		end
		return false
	end
	return true
end
function bad_mp5_m1_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_mp5_m1") and is_good_condition("wpn_mp5_m1") == false then
				return true
			end
		end
	end
	return false
end
function good_mp5_m1_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_mp5_m1") and is_good_condition("wpn_mp5_m1") then
				return true
			end
		end
		return false
	end
	return true
end
function bad_groza_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_groza") and is_good_condition("wpn_groza") == false then
				return true
			end
		end
	end
	return false
end
function good_groza_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_groza") and is_good_condition("wpn_groza")  then
				return true
			end
		end
		return false
	end
	return true
end
function bad_eagle_m1_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_eagle_m1") and is_good_condition("wpn_eagle_m1") == false then
				--TB3D_Services.info_alert("freeman eagle bad [true]")
				return true
			end
		end
	end
	--TB3D_Services.info_alert("freeman eagle bad [false]")
	return false
end
function good_eagle_m1_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_eagle_m1") and is_good_condition("wpn_eagle_m1")  then
				--TB3D_Services.info_alert("freeman eagle good [true]")
				return true
			end
		end
		return false
	end
	--TB3D_Services.info_alert("freeman eagle good [false]")
	return true
end
function bad_rg66_have(task, objective) --bar
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_rg6") and is_good_condition("wpn_rg6") == false then
				return true
			end
		end
	end
	return false
end
function good_rg66_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_rg6") and is_good_condition("wpn_rg6")  then
				return true
			end
		end
		return false
	end
	return true
end

function bad_gungauss_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_gungauss") and is_good_condition("wpn_gungauss") == false then
				return true
			end
		end
	end
	return false
end
function good_gungauss_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_gungauss") and is_good_condition("wpn_gungauss")  then
				return true
			end
		end
		return false
	end
	return true
end
function bad_rg6_have(task, objective) --ivancov
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_rg-6") and is_good_condition("wpn_rg-6") == false then
				return true
			end
		end
	end
	return false
end
function good_rg6_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_rg-6") and is_good_condition("wpn_rg-6")  then
				return true
			end
		end
		return false
	end
	return true
end
function bad_wpn_bm16_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_bm16") and is_good_condition("wpn_bm16") == false then
				return true
			end
		end
	end
	return false
end
function good_wpn_bm16_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("wpn_bm16") and is_good_condition("wpn_bm16")  then
				return true
			end
		end
		return false
	end
	return true
end
function bad_hunters_toz_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("hunters_toz") and is_good_condition("hunters_toz") == false then
				return true
			end
		end
	end
	return false
end
function good_hunters_toz_have(task, objective) 
	if TB3D_Modders.check_bad_weapons then
		if db.actor then
			if db.actor:object("hunters_toz") and is_good_condition("hunters_toz")  then
				return true
			end
		end
		return false
	end
	return true
end


-- Upgrade booking

function goodup_novice_outfit(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit") and is_good_condition("novice_outfit")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_bad") and is_good_condition("novice_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("novice_outfit_plus",1) ~= false
end
function giveup_novice_outfit(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit", 1)
end
function giveup_novice_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_bad", 1)
end
function giveup_novice_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_plus", 1)
end
function add_novice_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_bad", "in")
end
function add_novice_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_plus", "in")
end
function add_novice_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_badplus", "in")
end

function goodup_novice_outfit_rain_1(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_rain_1") and is_good_condition("novice_outfit_rain_1")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_rain_1_bad(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_rain_1_bad") and is_good_condition("novice_outfit_rain_1_bad")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_rain_1_plus(task, objective) 
  	return amk_utils.inventory_search("novice_outfit_rain_1_plus",1) ~= false
end
function giveup_novice_outfit_rain_1(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_1", 1)
end
function giveup_novice_outfit_rain_1_bad(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_1_bad", 1)
end
function giveup_novice_outfit_rain_1_plus(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_1_plus", 1)
end
function add_novice_outfit_rain_1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_1_bad", "in")
end
function add_novice_outfit_rain_1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_1_plus", "in")
end
function add_novice_outfit_rain_1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_1_badplus", "in")
end

function goodup_novice_outfit_rain_2(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_rain_2") and is_good_condition("novice_outfit_rain_2")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_rain_2_bad(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_rain_2_bad") and is_good_condition("novice_outfit_rain_2_bad")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_rain_2_plus(task, objective) 
  	return amk_utils.inventory_search("novice_outfit_rain_2_plus",1) ~= false
end
function giveup_novice_outfit_rain_2(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_2", 1)
end
function giveup_novice_outfit_rain_2_bad(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_2_bad", 1)
end
function giveup_novice_outfit_rain_2_plus(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_rain_2_plus", 1)
end
function add_novice_outfit_rain_2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_2_bad", "in")
end
function add_novice_outfit_rain_2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_2_plus", "in")
end
function add_novice_outfit_rain_2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_rain_2_badplus", "in")
end

function goodup_novice_outfit_new_1(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_new_1") and is_good_condition("novice_outfit_new_1")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_new_1_bad(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_new_1_bad") and is_good_condition("novice_outfit_new_1_bad")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_new_1_plus(task, objective) 
  	return amk_utils.inventory_search("novice_outfit_new_1_plus",1) ~= false
end
function giveup_novice_outfit_new_1(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_1", 1)
end
function giveup_novice_outfit_new_1_bad(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_1_bad", 1)
end
function giveup_novice_outfit_new_1_plus(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_1_plus", 1)
end
function add_novice_outfit_new_1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_1_bad", "in")
end
function add_novice_outfit_new_1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_1_plus", "in")
end
function add_novice_outfit_new_1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_1_badplus", "in")
end

function goodup_novice_outfit_new_2(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_new_2") and is_good_condition("novice_outfit_new_2")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_new_2_bad(task, objective) 
	if db.actor then
		if db.actor:object("novice_outfit_new_2_bad") and is_good_condition("novice_outfit_new_2_bad")  then
			return true
		end
	end
	return false
end
function goodup_novice_outfit_new_2_plus(task, objective) 
  	return amk_utils.inventory_search("novice_outfit_new_2_plus",1) ~= false
end
function giveup_novice_outfit_new_2(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_2", 1)
end
function giveup_novice_outfit_new_2_bad(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_2_bad", 1)
end
function giveup_novice_outfit_new_2_plus(first_speaker, second_speaker)
	sak.out_item_namber("novice_outfit_new_2_plus", 1)
end
function add_novice_outfit_new_2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_2_bad", "in")
end
function add_novice_outfit_new_2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_2_plus", "in")
end
function add_novice_outfit_new_2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "novice_outfit_new_2_badplus", "in")
end

function goodup_bandit_outfit(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit") and is_good_condition("bandit_outfit")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_bad") and is_good_condition("bandit_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_outfit_plus",1) ~= false
end
function giveup_bandit_outfit(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit", 1)
end
function giveup_bandit_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_bad", 1)
end
function giveup_bandit_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_plus", 1)
end
function add_bandit_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_bad", "in")
end
function add_bandit_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_plus", "in")
end
function add_bandit_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_badplus", "in")
end

function goodup_bandit_outfit_red(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_red") and is_good_condition("bandit_outfit_red")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_red_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_red_bad") and is_good_condition("bandit_outfit_red_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_red_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_outfit_red_plus",1) ~= false
end
function giveup_bandit_outfit_red(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red", 1)
end
function giveup_bandit_outfit_red_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red_bad", 1)
end
function giveup_bandit_outfit_red_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red_plus", 1)
end
function add_bandit_outfit_red_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red_bad", "in")
end
function add_bandit_outfit_red_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red_plus", "in")
end
function add_bandit_outfit_red_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red_badplus", "in")
end

function goodup_bandit_outfit_red1(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_red1") and is_good_condition("bandit_outfit_red1")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_red1_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_red1_bad") and is_good_condition("bandit_outfit_red1_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_red1_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_outfit_red1_plus",1) ~= false
end
function giveup_bandit_outfit_red1(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red1", 1)
end
function giveup_bandit_outfit_red1_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red1_bad", 1)
end
function giveup_bandit_outfit_red1_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_red1_plus", 1)
end
function add_bandit_outfit_red1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red1_bad", "in")
end
function add_bandit_outfit_red1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red1_plus", "in")
end
function add_bandit_outfit_red1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_red1_badplus", "in")
end

function goodup_bandit_outfit_blue(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_blue") and is_good_condition("bandit_outfit_blue")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_blue_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_outfit_blue_bad") and is_good_condition("bandit_outfit_blue_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_outfit_blue_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_outfit_blue_plus",1) ~= false
end
function giveup_bandit_outfit_blue(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_blue", 1)
end
function giveup_bandit_outfit_blue_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_blue_bad", 1)
end
function giveup_bandit_outfit_blue_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_outfit_blue_plus", 1)
end
function add_bandit_outfit_blue_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_blue_bad", "in")
end
function add_bandit_outfit_blue_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_blue_plus", "in")
end
function add_bandit_outfit_blue_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_outfit_blue_badplus", "in")
end

function goodup_killer_outfit(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit") and is_good_condition("killer_outfit")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_bad") and is_good_condition("killer_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_good") and is_good_condition("killer_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_default") and is_good_condition("killer_outfit_default") then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_static") and is_good_condition("killer_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_kat_eye") and is_good_condition("killer_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_psy") and is_good_condition("killer_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_blackwhite") and is_good_condition("killer_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("killer_outfit_bast") and is_good_condition("killer_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_killer_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("killer_outfit_plus",1) ~= false
end
function giveup_killer_outfit(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit", 1)
end
function giveup_killer_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_bad", 1)
end
function giveup_killer_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_good", 1)
end
function giveup_killer_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_default", 1)
end
function giveup_killer_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_static", 1)
end
function giveup_killer_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_kat_eye", 1)
end
function giveup_killer_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_psy", 1)
end
function giveup_killer_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_blackwhite", 1)
end
function giveup_killer_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_bast", 1)
end
function giveup_killer_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("killer_outfit_plus", 1)
end
function add_killer_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_bad", "in")
end
function add_killer_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_good", "in")
end
function add_killer_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_default", "in")
end
function add_killer_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_static", "in")
end
function add_killer_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_kat_eye", "in")
end
function add_killer_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_psy", "in")
end
function add_killer_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_blackwhite", "in")
end
function add_killer_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_bast", "in")
end
function add_killer_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_plus", "in")
end
function add_killer_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_badplus", "in")
end
function add_killer_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_goodplus", "in")
end
function add_killer_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_defaultplus", "in")
end
function add_killer_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_staticplus", "in")
end
function add_killer_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_kat_eyeplus", "in")
end
function add_killer_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_psyplus", "in")
end
function add_killer_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_blackwhiteplus", "in")
end
function add_killer_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_outfit_bastplus", "in")
end

function goodup_monolit_outfit(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit") and is_good_condition("monolit_outfit")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_bad") and is_good_condition("monolit_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_good") and is_good_condition("monolit_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_default") and is_good_condition("monolit_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_static") and is_good_condition("monolit_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_kat_eye") and is_good_condition("monolit_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_psy") and is_good_condition("monolit_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_blackwhite") and is_good_condition("monolit_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("monolit_outfit_bast") and is_good_condition("monolit_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_monolit_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("monolit_outfit_plus",1) ~= false
end
function giveup_monolit_outfit(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit", 1)
end
function giveup_monolit_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_bad", 1)
end
function giveup_monolit_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_good", 1)
end
function giveup_monolit_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_default", 1)
end
function giveup_monolit_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_static", 1)
end
function giveup_monolit_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_kat_eye", 1)
end
function giveup_monolit_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_psy", 1)
end
function giveup_monolit_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_blackwhite", 1)
end
function giveup_monolit_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_bast", 1)
end
function giveup_monolit_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("monolit_outfit_plus", 1)
end
function add_monolit_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_bad", "in")
end
function add_monolit_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_good", "in")
end
function add_monolit_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_default", "in")
end
function add_monolit_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_static", "in")
end
function add_monolit_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_kat_eye", "in")
end
function add_monolit_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_psy", "in")
end
function add_monolit_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_blackwhite", "in")
end
function add_monolit_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_bast", "in")
end
function add_monolit_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_plus", "in")
end
function add_monolit_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_badplus", "in")
end
function add_monolit_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_goodplus", "in")
end
function add_monolit_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_defaultplus", "in")
end
function add_monolit_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_staticplus", "in")
end
function add_monolit_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_kat_eyeplus", "in")
end
function add_monolit_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_psyplus", "in")
end
function add_monolit_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_blackwhiteplus", "in")
end
function add_monolit_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_outfit_bastplus", "in")
end

function goodup_specops_outfit(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit") and is_good_condition("specops_outfit")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_bad") and is_good_condition("specops_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_good") and is_good_condition("specops_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_default") and is_good_condition("specops_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_static") and is_good_condition("specops_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_kat_eye") and is_good_condition("specops_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_psy") and is_good_condition("specops_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_blackwhite") and is_good_condition("specops_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("specops_outfit_bast") and is_good_condition("specops_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_specops_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("specops_outfit_plus",1) ~= false
end
function giveup_specops_outfit(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit", 1)
end
function giveup_specops_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_bad", 1)
end
function giveup_specops_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_good", 1)
end
function giveup_specops_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_default", 1)
end
function giveup_specops_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_static", 1)
end
function giveup_specops_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_kat_eye", 1)
end
function giveup_specops_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_psy", 1)
end
function giveup_specops_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_blackwhite", 1)
end
function giveup_specops_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_bast", 1)
end
function giveup_specops_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("specops_outfit_plus", 1)
end
function add_specops_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_bad", "in")
end
function add_specops_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_good", "in")
end
function add_specops_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_default", "in")
end
function add_specops_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_static", "in")
end
function add_specops_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_kat_eye", "in")
end
function add_specops_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_psy", "in")
end
function add_specops_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_blackwhite", "in")
end
function add_specops_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_bast", "in")
end
function add_specops_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_plus", "in")
end
function add_specops_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_badplus", "in")
end
function add_specops_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_goodplus", "in")
end
function add_specops_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_defaultplus", "in")
end
function add_specops_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_staticplus", "in")
end
function add_specops_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_kat_eyeplus", "in")
end
function add_specops_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_psyplus", "in")
end
function add_specops_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_blackwhiteplus", "in")
end
function add_specops_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "specops_outfit_bastplus", "in")
end

function goodup_military_outfit(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit") and is_good_condition("military_outfit")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_bad") and is_good_condition("military_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_good") and is_good_condition("military_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_default") and is_good_condition("military_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_static") and is_good_condition("military_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_kat_eye") and is_good_condition("military_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_psy") and is_good_condition("military_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_blackwhite") and is_good_condition("military_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("military_outfit_bast") and is_good_condition("military_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_military_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("military_outfit_plus",1) ~= false
end
function giveup_military_outfit(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit", 1)
end
function giveup_military_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_bad", 1)
end
function giveup_military_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_good", 1)
end
function giveup_military_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_default", 1)
end
function giveup_military_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_static", 1)
end
function giveup_military_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_kat_eye", 1)
end
function giveup_military_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_psy", 1)
end
function giveup_military_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_blackwhite", 1)
end
function giveup_military_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_bast", 1)
end
function giveup_military_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("military_outfit_plus", 1)
end
function add_military_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_bad", "in")
end
function add_military_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_good", "in")
end
function add_military_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_default", "in")
end
function add_military_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_static", "in")
end
function add_military_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_kat_eye", "in")
end
function add_military_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_psy", "in")
end
function add_military_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_blackwhite", "in")
end
function add_military_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_bast", "in")
end
function add_military_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_plus", "in")
end
function add_military_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_badplus", "in")
end
function add_military_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_goodplus", "in")
end
function add_military_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_defaultplus", "in")
end
function add_military_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_staticplus", "in")
end
function add_military_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_kat_eyeplus", "in")
end
function add_military_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_psyplus", "in")
end
function add_military_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_blackwhiteplus", "in")
end
function add_military_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit_bastplus", "in")
end

function goodup_militaryspec_outfit(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit") and is_good_condition("militaryspec_outfit")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_bad") and is_good_condition("militaryspec_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_good") and is_good_condition("militaryspec_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_default") and is_good_condition("militaryspec_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_static") and is_good_condition("militaryspec_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_kat_eye") and is_good_condition("militaryspec_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_psy") and is_good_condition("militaryspec_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_blackwhite") and is_good_condition("militaryspec_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("militaryspec_outfit_bast") and is_good_condition("militaryspec_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_militaryspec_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("militaryspec_outfit_plus",1) ~= false
end
function giveup_militaryspec_outfit(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit", 1)
end
function giveup_militaryspec_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_bad", 1)
end
function giveup_militaryspec_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_good", 1)
end
function giveup_militaryspec_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_default", 1)
end
function giveup_militaryspec_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_static", 1)
end
function giveup_militaryspec_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_kat_eye", 1)
end
function giveup_militaryspec_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_psy", 1)
end
function giveup_militaryspec_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_blackwhite", 1)
end
function giveup_militaryspec_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_bast", 1)
end
function giveup_militaryspec_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit_plus", 1)
end
function add_militaryspec_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_bad", "in")
end
function add_militaryspec_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_good", "in")
end
function add_militaryspec_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_default", "in")
end
function add_militaryspec_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_static", "in")
end
function add_militaryspec_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_kat_eye", "in")
end
function add_militaryspec_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_psy", "in")
end
function add_militaryspec_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_blackwhite", "in")
end
function add_militaryspec_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_bast", "in")
end
function add_militaryspec_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_plus", "in")
end
function add_militaryspec_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_badplus", "in")
end
function add_militaryspec_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_goodplus", "in")
end
function add_militaryspec_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_defaultplus", "in")
end
function add_militaryspec_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_staticplus", "in")
end
function add_militaryspec_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_kat_eyeplus", "in")
end
function add_militaryspec_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_psyplus", "in")
end
function add_militaryspec_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_blackwhiteplus", "in")
end
function add_militaryspec_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_bastplus", "in")
end

function goodup_stalker_guard_outfit(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit") and is_good_condition("stalker_guard_outfit")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_bad") and is_good_condition("stalker_guard_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_good") and is_good_condition("stalker_guard_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_default") and is_good_condition("stalker_guard_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_static") and is_good_condition("stalker_guard_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_kat_eye") and is_good_condition("stalker_guard_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_psy") and is_good_condition("stalker_guard_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_blackwhite") and is_good_condition("stalker_guard_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_guard_outfit_bast") and is_good_condition("stalker_guard_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_guard_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_guard_outfit_plus",1) ~= false
end
function giveup_stalker_guard_outfit(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit", 1)
end
function giveup_stalker_guard_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_bad", 1)
end
function giveup_stalker_guard_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_good", 1)
end
function giveup_stalker_guard_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_default", 1)
end
function giveup_stalker_guard_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_static", 1)
end
function giveup_stalker_guard_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_kat_eye", 1)
end
function giveup_stalker_guard_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_psy", 1)
end
function giveup_stalker_guard_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_blackwhite", 1)
end
function giveup_stalker_guard_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_bast", 1)
end
function giveup_stalker_guard_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_guard_outfit_plus", 1)
end
function add_stalker_guard_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_bad", "in")
end
function add_stalker_guard_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_good", "in")
end
function add_stalker_guard_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_default", "in")
end
function add_stalker_guard_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_static", "in")
end
function add_stalker_guard_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_kat_eye", "in")
end
function add_stalker_guard_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_psy", "in")
end
function add_stalker_guard_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_blackwhite", "in")
end
function add_stalker_guard_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_bast", "in")
end
function add_stalker_guard_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_plus", "in")
end
function add_stalker_guard_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_badplus", "in")
end
function add_stalker_guard_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_goodplus", "in")
end
function add_stalker_guard_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_defaultplus", "in")
end
function add_stalker_guard_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_staticplus", "in")
end
function add_stalker_guard_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_kat_eyeplus", "in")
end
function add_stalker_guard_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_psyplus", "in")
end
function add_stalker_guard_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_blackwhiteplus", "in")
end
function add_stalker_guard_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_guard_outfit_bastplus", "in")
end

function goodup_stalker_outfit(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit") and is_good_condition("stalker_outfit")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_bad") and is_good_condition("stalker_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_good") and is_good_condition("stalker_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_default") and is_good_condition("stalker_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_static") and is_good_condition("stalker_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_kat_eye") and is_good_condition("stalker_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_psy") and is_good_condition("stalker_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_blackwhite") and is_good_condition("stalker_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_bast") and is_good_condition("stalker_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_outfit_plus",1) ~= false
end
function giveup_stalker_outfit(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit", 1)
end
function giveup_stalker_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_bad", 1)
end
function giveup_stalker_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_good", 1)
end
function giveup_stalker_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_default", 1)
end
function giveup_stalker_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_static", 1)
end
function giveup_stalker_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_kat_eye", 1)
end
function giveup_stalker_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_psy", 1)
end
function giveup_stalker_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_blackwhite", 1)
end
function giveup_stalker_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_bast", 1)
end
function giveup_stalker_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_plus", 1)
end
function add_stalker_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_bad", "in")
end
function add_stalker_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_good", "in")
end
function add_stalker_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_default", "in")
end
function add_stalker_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_static", "in")
end
function add_stalker_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_kat_eye", "in")
end
function add_stalker_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_psy", "in")
end
function add_stalker_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_blackwhite", "in")
end
function add_stalker_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_bast", "in")
end
function add_stalker_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_plus", "in")
end
function add_stalker_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_badplus", "in")
end
function add_stalker_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_goodplus", "in")
end
function add_stalker_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_defaultplus", "in")
end
function add_stalker_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_staticplus", "in")
end
function add_stalker_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_kat_eyeplus", "in")
end
function add_stalker_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_psyplus", "in")
end
function add_stalker_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_blackwhiteplus", "in")
end
function add_stalker_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_bastplus", "in")
end

function goodup_stalker_outfit_v1(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1") and is_good_condition("stalker_outfit_v1")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_bad") and is_good_condition("stalker_outfit_v1_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_good") and is_good_condition("stalker_outfit_v1_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_default") and is_good_condition("stalker_outfit_v1_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_static") and is_good_condition("stalker_outfit_v1_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_kat_eye") and is_good_condition("stalker_outfit_v1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_psy") and is_good_condition("stalker_outfit_v1_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_blackwhite") and is_good_condition("stalker_outfit_v1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v1_bast") and is_good_condition("stalker_outfit_v1_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v1_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_outfit_v1_plus",1) ~= false
end
function giveup_stalker_outfit_v1(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1", 1)
end
function giveup_stalker_outfit_v1_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_bad", 1)
end
function giveup_stalker_outfit_v1_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_good", 1)
end
function giveup_stalker_outfit_v1_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_default", 1)
end
function giveup_stalker_outfit_v1_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_static", 1)
end
function giveup_stalker_outfit_v1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_kat_eye", 1)
end
function giveup_stalker_outfit_v1_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_psy", 1)
end
function giveup_stalker_outfit_v1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_blackwhite", 1)
end
function giveup_stalker_outfit_v1_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_bast", 1)
end
function giveup_stalker_outfit_v1_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v1_plus", 1)
end
function add_stalker_outfit_v1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_bad", "in")
end
function add_stalker_outfit_v1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_good", "in")
end
function add_stalker_outfit_v1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_default", "in")
end
function add_stalker_outfit_v1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_static", "in")
end
function add_stalker_outfit_v1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_kat_eye", "in")
end
function add_stalker_outfit_v1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_psy", "in")
end
function add_stalker_outfit_v1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_blackwhite", "in")
end
function add_stalker_outfit_v1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_bast", "in")
end
function add_stalker_outfit_v1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_plus", "in")
end
function add_stalker_outfit_v1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_badplus", "in")
end
function add_stalker_outfit_v1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_goodplus", "in")
end
function add_stalker_outfit_v1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_defaultplus", "in")
end
function add_stalker_outfit_v1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_staticplus", "in")
end
function add_stalker_outfit_v1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_kat_eyeplus", "in")
end
function add_stalker_outfit_v1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_psyplus", "in")
end
function add_stalker_outfit_v1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_blackwhiteplus", "in")
end
function add_stalker_outfit_v1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v1_bastplus", "in")
end

function goodup_stalker_outfit_v2(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2") and is_good_condition("stalker_outfit_v2")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_bad") and is_good_condition("stalker_outfit_v2_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_good") and is_good_condition("stalker_outfit_v2_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_default") and is_good_condition("stalker_outfit_v2_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_static") and is_good_condition("stalker_outfit_v2_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_kat_eye") and is_good_condition("stalker_outfit_v2_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_psy") and is_good_condition("stalker_outfit_v2_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_blackwhite") and is_good_condition("stalker_outfit_v2_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v2_bast") and is_good_condition("stalker_outfit_v2_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v2_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_outfit_v2_plus",1) ~= false
end
function giveup_stalker_outfit_v2(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2", 1)
end
function giveup_stalker_outfit_v2_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_bad", 1)
end
function giveup_stalker_outfit_v2_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_good", 1)
end
function giveup_stalker_outfit_v2_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_default", 1)
end
function giveup_stalker_outfit_v2_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_static", 1)
end
function giveup_stalker_outfit_v2_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_kat_eye", 1)
end
function giveup_stalker_outfit_v2_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_psy", 1)
end
function giveup_stalker_outfit_v2_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_blackwhite", 1)
end
function giveup_stalker_outfit_v2_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_bast", 1)
end
function giveup_stalker_outfit_v2_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v2_plus", 1)
end
function add_stalker_outfit_v2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_bad", "in")
end
function add_stalker_outfit_v2_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_good", "in")
end
function add_stalker_outfit_v2_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_default", "in")
end
function add_stalker_outfit_v2_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_static", "in")
end
function add_stalker_outfit_v2_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_kat_eye", "in")
end
function add_stalker_outfit_v2_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_psy", "in")
end
function add_stalker_outfit_v2_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_blackwhite", "in")
end
function add_stalker_outfit_v2_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_bast", "in")
end
function add_stalker_outfit_v2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_plus", "in")
end
function add_stalker_outfit_v2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_badplus", "in")
end
function add_stalker_outfit_v2_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_goodplus", "in")
end
function add_stalker_outfit_v2_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_defaultplus", "in")
end
function add_stalker_outfit_v2_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_staticplus", "in")
end
function add_stalker_outfit_v2_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_kat_eyeplus", "in")
end
function add_stalker_outfit_v2_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_psyplus", "in")
end
function add_stalker_outfit_v2_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_blackwhiteplus", "in")
end
function add_stalker_outfit_v2_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v2_bastplus", "in")
end

function goodup_stalker_outfit_v3(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3") and is_good_condition("stalker_outfit_v3")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_bad") and is_good_condition("stalker_outfit_v3_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_good") and is_good_condition("stalker_outfit_v3_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_default") and is_good_condition("stalker_outfit_v3_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_static") and is_good_condition("stalker_outfit_v3_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_kat_eye") and is_good_condition("stalker_outfit_v3_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_psy") and is_good_condition("stalker_outfit_v3_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_blackwhite") and is_good_condition("stalker_outfit_v3_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_v3_bast") and is_good_condition("stalker_outfit_v3_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_v3_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_outfit_v3_plus",1) ~= false
end
function giveup_stalker_outfit_v3(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3", 1)
end
function giveup_stalker_outfit_v3_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_bad", 1)
end
function giveup_stalker_outfit_v3_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_good", 1)
end
function giveup_stalker_outfit_v3_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_default", 1)
end
function giveup_stalker_outfit_v3_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_static", 1)
end
function giveup_stalker_outfit_v3_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_kat_eye", 1)
end
function giveup_stalker_outfit_v3_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_psy", 1)
end
function giveup_stalker_outfit_v3_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_blackwhite", 1)
end
function giveup_stalker_outfit_v3_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_bast", 1)
end
function giveup_stalker_outfit_v3_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_v3_plus", 1)
end
function add_stalker_outfit_v3_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_bad", "in")
end
function add_stalker_outfit_v3_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_good", "in")
end
function add_stalker_outfit_v3_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_default", "in")
end
function add_stalker_outfit_v3_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_static", "in")
end
function add_stalker_outfit_v3_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_kat_eye", "in")
end
function add_stalker_outfit_v3_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_psy", "in")
end
function add_stalker_outfit_v3_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_blackwhite", "in")
end
function add_stalker_outfit_v3_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_bast", "in")
end
function add_stalker_outfit_v3_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_plus", "in")
end
function add_stalker_outfit_v3_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_badplus", "in")
end
function add_stalker_outfit_v3_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_goodplus", "in")
end
function add_stalker_outfit_v3_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_defaultplus", "in")
end
function add_stalker_outfit_v3_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_staticplus", "in")
end
function add_stalker_outfit_v3_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_kat_eyeplus", "in")
end
function add_stalker_outfit_v3_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_psyplus", "in")
end
function add_stalker_outfit_v3_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_blackwhiteplus", "in")
end
function add_stalker_outfit_v3_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_v3_bastplus", "in")
end

function goodup_scientific_outfit(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit") and is_good_condition("scientific_outfit")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_bad") and is_good_condition("scientific_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_good") and is_good_condition("scientific_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_default") and is_good_condition("scientific_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_static") and is_good_condition("scientific_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_kat_eye") and is_good_condition("scientific_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_psy") and is_good_condition("scientific_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_blackwhite") and is_good_condition("scientific_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("scientific_outfit_bast") and is_good_condition("scientific_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_scientific_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("scientific_outfit_plus",1) ~= false
end
function giveup_scientific_outfit(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit", 1)
end
function giveup_scientific_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_bad", 1)
end
function giveup_scientific_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_good", 1)
end
function giveup_scientific_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_default", 1)
end
function giveup_scientific_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_static", 1)
end
function giveup_scientific_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_kat_eye", 1)
end
function giveup_scientific_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_psy", 1)
end
function giveup_scientific_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_blackwhite", 1)
end
function giveup_scientific_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_bast", 1)
end
function giveup_scientific_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("scientific_outfit_plus", 1)
end
function add_scientific_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_bad", "in")
end
function add_scientific_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_good", "in")
end
function add_scientific_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_default", "in")
end
function add_scientific_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_static", "in")
end
function add_scientific_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_kat_eye", "in")
end
function add_scientific_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_psy", "in")
end
function add_scientific_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_blackwhite", "in")
end
function add_scientific_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_bast", "in")
end
function add_scientific_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_plus", "in")
end
function add_scientific_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_badplus", "in")
end
function add_scientific_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_goodplus", "in")
end
function add_scientific_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_defaultplus", "in")
end
function add_scientific_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_staticplus", "in")
end
function add_scientific_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_kat_eyeplus", "in")
end
function add_scientific_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_psyplus", "in")
end
function add_scientific_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_blackwhiteplus", "in")
end
function add_scientific_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "scientific_outfit_bastplus", "in")
end

function goodup_exo_outfit(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit") and is_good_condition("exo_outfit")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_bad") and is_good_condition("exo_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_good") and is_good_condition("exo_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_default") and is_good_condition("exo_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_static") and is_good_condition("exo_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_kat_eye") and is_good_condition("exo_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_psy") and is_good_condition("exo_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_blackwhite") and is_good_condition("exo_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("exo_outfit_bast") and is_good_condition("exo_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_exo_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("exo_outfit_plus",1) ~= false
end
function giveup_exo_outfit(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit", 1)
end
function giveup_exo_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_bad", 1)
end
function giveup_exo_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_good", 1)
end
function giveup_exo_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_default", 1)
end
function giveup_exo_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_static", 1)
end
function giveup_exo_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_kat_eye", 1)
end
function giveup_exo_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_psy", 1)
end
function giveup_exo_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_blackwhite", 1)
end
function giveup_exo_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_bast", 1)
end
function giveup_exo_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit_plus", 1)
end
function add_exo_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_bad", "in")
end
function add_exo_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_good", "in")
end
function add_exo_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_default", "in")
end
function add_exo_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_static", "in")
end
function add_exo_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_kat_eye", "in")
end
function add_exo_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_psy", "in")
end
function add_exo_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_blackwhite", "in")
end
function add_exo_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_bast", "in")
end
function add_exo_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_plus", "in")
end
function add_exo_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_badplus", "in")
end
function add_exo_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_goodplus", "in")
end
function add_exo_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_defaultplus", "in")
end
function add_exo_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_staticplus", "in")
end
function add_exo_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_kat_eyeplus", "in")
end
function add_exo_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_psyplus", "in")
end
function add_exo_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_blackwhiteplus", "in")
end
function add_exo_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_outfit_bastplus", "in")
end

function goodup_svoboda_light_outfit(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit") and is_good_condition("svoboda_light_outfit")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_bad") and is_good_condition("svoboda_light_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_good") and is_good_condition("svoboda_light_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_default") and is_good_condition("svoboda_light_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_static") and is_good_condition("svoboda_light_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_kat_eye") and is_good_condition("svoboda_light_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_psy") and is_good_condition("svoboda_light_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_blackwhite") and is_good_condition("svoboda_light_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_light_outfit_bast") and is_good_condition("svoboda_light_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_light_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_light_outfit_plus",1) ~= false
end
function giveup_svoboda_light_outfit(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit", 1)
end
function giveup_svoboda_light_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_bad", 1)
end
function giveup_svoboda_light_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_good", 1)
end
function giveup_svoboda_light_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_default", 1)
end
function giveup_svoboda_light_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_static", 1)
end
function giveup_svoboda_light_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_kat_eye", 1)
end
function giveup_svoboda_light_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_psy", 1)
end
function giveup_svoboda_light_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_blackwhite", 1)
end
function giveup_svoboda_light_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_bast", 1)
end
function giveup_svoboda_light_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_light_outfit_plus", 1)
end
function add_svoboda_light_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_bad", "in")
end
function add_svoboda_light_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_good", "in")
end
function add_svoboda_light_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_default", "in")
end
function add_svoboda_light_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_static", "in")
end
function add_svoboda_light_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_kat_eye", "in")
end
function add_svoboda_light_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_psy", "in")
end
function add_svoboda_light_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_blackwhite", "in")
end
function add_svoboda_light_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_bast", "in")
end
function add_svoboda_light_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_plus", "in")
end
function add_svoboda_light_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_badplus", "in")
end
function add_svoboda_light_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_goodplus", "in")
end
function add_svoboda_light_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_defaultplus", "in")
end
function add_svoboda_light_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_staticplus", "in")
end
function add_svoboda_light_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_kat_eyeplus", "in")
end
function add_svoboda_light_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_psyplus", "in")
end
function add_svoboda_light_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_blackwhiteplus", "in")
end
function add_svoboda_light_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_light_outfit_bastplus", "in")
end

function goodup_svoboda_heavy_outfit(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit") and is_good_condition("svoboda_heavy_outfit")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_bad") and is_good_condition("svoboda_heavy_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_good") and is_good_condition("svoboda_heavy_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_default") and is_good_condition("svoboda_heavy_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_static") and is_good_condition("svoboda_heavy_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_kat_eye") and is_good_condition("svoboda_heavy_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_psy") and is_good_condition("svoboda_heavy_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_blackwhite") and is_good_condition("svoboda_heavy_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_outfit_bast") and is_good_condition("svoboda_heavy_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_heavy_outfit_plus",1) ~= false
end
function giveup_svoboda_heavy_outfit(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit", 1)
end
function giveup_svoboda_heavy_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_bad", 1)
end
function giveup_svoboda_heavy_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_good", 1)
end
function giveup_svoboda_heavy_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_default", 1)
end
function giveup_svoboda_heavy_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_static", 1)
end
function giveup_svoboda_heavy_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_kat_eye", 1)
end
function giveup_svoboda_heavy_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_psy", 1)
end
function giveup_svoboda_heavy_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_blackwhite", 1)
end
function giveup_svoboda_heavy_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_bast", 1)
end
function giveup_svoboda_heavy_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_outfit_plus", 1)
end
function add_svoboda_heavy_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_bad", "in")
end
function add_svoboda_heavy_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_good", "in")
end
function add_svoboda_heavy_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_default", "in")
end
function add_svoboda_heavy_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_static", "in")
end
function add_svoboda_heavy_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_kat_eye", "in")
end
function add_svoboda_heavy_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_psy", "in")
end
function add_svoboda_heavy_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_blackwhite", "in")
end
function add_svoboda_heavy_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_bast", "in")
end
function add_svoboda_heavy_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_plus", "in")
end
function add_svoboda_heavy_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_badplus", "in")
end
function add_svoboda_heavy_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_goodplus", "in")
end
function add_svoboda_heavy_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_defaultplus", "in")
end
function add_svoboda_heavy_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_staticplus", "in")
end
function add_svoboda_heavy_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_kat_eyeplus", "in")
end
function add_svoboda_heavy_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_psyplus", "in")
end
function add_svoboda_heavy_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_blackwhiteplus", "in")
end
function add_svoboda_heavy_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_outfit_bastplus", "in")
end

function goodup_dolg_outfit(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit") and is_good_condition("dolg_outfit")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_bad") and is_good_condition("dolg_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_good") and is_good_condition("dolg_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_default") and is_good_condition("dolg_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_static") and is_good_condition("dolg_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_kat_eye") and is_good_condition("dolg_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_psy") and is_good_condition("dolg_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_blackwhite") and is_good_condition("dolg_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("dolg_outfit_bast") and is_good_condition("dolg_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_dolg_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("dolg_outfit_plus",1) ~= false
end
function giveup_dolg_outfit(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit", 1)
end
function giveup_dolg_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_bad", 1)
end
function giveup_dolg_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_good", 1)
end
function giveup_dolg_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_default", 1)
end
function giveup_dolg_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_static", 1)
end
function giveup_dolg_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_kat_eye", 1)
end
function giveup_dolg_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_psy", 1)
end
function giveup_dolg_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_blackwhite", 1)
end
function giveup_dolg_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_bast", 1)
end
function giveup_dolg_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("dolg_outfit_plus", 1)
end
function add_dolg_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_bad", "in")
end
function add_dolg_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_good", "in")
end
function add_dolg_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_default", "in")
end
function add_dolg_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_static", "in")
end
function add_dolg_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_kat_eye", "in")
end
function add_dolg_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_psy", "in")
end
function add_dolg_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_blackwhite", "in")
end
function add_dolg_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_bast", "in")
end
function add_dolg_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_plus", "in")
end
function add_dolg_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_badplus", "in")
end
function add_dolg_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_goodplus", "in")
end
function add_dolg_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_defaultplus", "in")
end
function add_dolg_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_staticplus", "in")
end
function add_dolg_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_kat_eyeplus", "in")
end
function add_dolg_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_psyplus", "in")
end
function add_dolg_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_blackwhiteplus", "in")
end
function add_dolg_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_outfit_bastplus", "in")
end

function goodup_dolg_scientific_outfit(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit") and is_good_condition("dolg_scientific_outfit")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_bad") and is_good_condition("dolg_scientific_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_good") and is_good_condition("dolg_scientific_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_default") and is_good_condition("dolg_scientific_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_static") and is_good_condition("dolg_scientific_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_kat_eye") and is_good_condition("dolg_scientific_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_psy") and is_good_condition("dolg_scientific_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_blackwhite") and is_good_condition("dolg_scientific_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("dolg_scientific_outfit_bast") and is_good_condition("dolg_scientific_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_dolg_scientific_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("dolg_scientific_outfit_plus",1) ~= false
end
function giveup_dolg_scientific_outfit(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit", 1)
end
function giveup_dolg_scientific_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_bad", 1)
end
function giveup_dolg_scientific_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_good", 1)
end
function giveup_dolg_scientific_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_default", 1)
end
function giveup_dolg_scientific_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_static", 1)
end
function giveup_dolg_scientific_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_kat_eye", 1)
end
function giveup_dolg_scientific_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_psy", 1)
end
function giveup_dolg_scientific_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_blackwhite", 1)
end
function giveup_dolg_scientific_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_bast", 1)
end
function giveup_dolg_scientific_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("dolg_scientific_outfit_plus", 1)
end
function add_dolg_scientific_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_bad", "in")
end
function add_dolg_scientific_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_good", "in")
end
function add_dolg_scientific_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_default", "in")
end
function add_dolg_scientific_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_static", "in")
end
function add_dolg_scientific_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_kat_eye", "in")
end
function add_dolg_scientific_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_psy", "in")
end
function add_dolg_scientific_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_blackwhite", "in")
end
function add_dolg_scientific_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_bast", "in")
end
function add_dolg_scientific_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_plus", "in")
end
function add_dolg_scientific_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_badplus", "in")
end
function add_dolg_scientific_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_goodplus", "in")
end
function add_dolg_scientific_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_defaultplus", "in")
end
function add_dolg_scientific_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_staticplus", "in")
end
function add_dolg_scientific_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_kat_eyeplus", "in")
end
function add_dolg_scientific_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_psyplus", "in")
end
function add_dolg_scientific_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_blackwhiteplus", "in")
end
function add_dolg_scientific_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit_bastplus", "in")
end

function goodup_ecolog_outfit(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit") and is_good_condition("ecolog_outfit")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_bad") and is_good_condition("ecolog_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_good") and is_good_condition("ecolog_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_default") and is_good_condition("ecolog_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_static") and is_good_condition("ecolog_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_kat_eye") and is_good_condition("ecolog_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_psy") and is_good_condition("ecolog_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_blackwhite") and is_good_condition("ecolog_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("ecolog_outfit_bast") and is_good_condition("ecolog_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_ecolog_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("ecolog_outfit_plus",1) ~= false
end
function giveup_ecolog_outfit(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit", 1)
end
function giveup_ecolog_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_bad", 1)
end
function giveup_ecolog_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_good", 1)
end
function giveup_ecolog_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_default", 1)
end
function giveup_ecolog_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_static", 1)
end
function giveup_ecolog_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_kat_eye", 1)
end
function giveup_ecolog_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_psy", 1)
end
function giveup_ecolog_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_blackwhite", 1)
end
function giveup_ecolog_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_bast", 1)
end
function giveup_ecolog_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("ecolog_outfit_plus", 1)
end
function add_ecolog_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_bad", "in")
end
function add_ecolog_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_good", "in")
end
function add_ecolog_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_default", "in")
end
function add_ecolog_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_static", "in")
end
function add_ecolog_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_kat_eye", "in")
end
function add_ecolog_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_psy", "in")
end
function add_ecolog_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_blackwhite", "in")
end
function add_ecolog_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_bast", "in")
end
function add_ecolog_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_plus", "in")
end
function add_ecolog_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_badplus", "in")
end
function add_ecolog_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_goodplus", "in")
end
function add_ecolog_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_defaultplus", "in")
end
function add_ecolog_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_staticplus", "in")
end
function add_ecolog_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_kat_eyeplus", "in")
end
function add_ecolog_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_psyplus", "in")
end
function add_ecolog_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_blackwhiteplus", "in")
end
function add_ecolog_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ecolog_outfit_bastplus", "in")
end

function goodup_protection_outfit(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit") and is_good_condition("protection_outfit")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_bad") and is_good_condition("protection_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_good") and is_good_condition("protection_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_default") and is_good_condition("protection_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_static") and is_good_condition("protection_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_kat_eye") and is_good_condition("protection_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_psy") and is_good_condition("protection_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_blackwhite") and is_good_condition("protection_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("protection_outfit_bast") and is_good_condition("protection_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_protection_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("protection_outfit_plus",1) ~= false
end
function giveup_protection_outfit(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit", 1)
end
function giveup_protection_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_bad", 1)
end
function giveup_protection_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_good", 1)
end
function giveup_protection_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_default", 1)
end
function giveup_protection_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_static", 1)
end
function giveup_protection_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_kat_eye", 1)
end
function giveup_protection_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_psy", 1)
end
function giveup_protection_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_blackwhite", 1)
end
function giveup_protection_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_bast", 1)
end
function giveup_protection_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("protection_outfit_plus", 1)
end
function add_protection_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_bad", "in")
end
function add_protection_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_good", "in")
end
function add_protection_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_default", "in")
end
function add_protection_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_static", "in")
end
function add_protection_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_kat_eye", "in")
end
function add_protection_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_psy", "in")
end
function add_protection_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_blackwhite", "in")
end
function add_protection_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_bast", "in")
end
function add_protection_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_plus", "in")
end
function add_protection_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_badplus", "in")
end
function add_protection_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_goodplus", "in")
end
function add_protection_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_defaultplus", "in")
end
function add_protection_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_staticplus", "in")
end
function add_protection_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_kat_eyeplus", "in")
end
function add_protection_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_psyplus", "in")
end
function add_protection_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_blackwhiteplus", "in")
end
function add_protection_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit_bastplus", "in")
end

function goodup_killer_blue_exoskeleton(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton") and is_good_condition("killer_blue_exoskeleton")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_bad(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_bad") and is_good_condition("killer_blue_exoskeleton_bad")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_good(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_good") and is_good_condition("killer_blue_exoskeleton_good")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_default(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_default") and is_good_condition("killer_blue_exoskeleton_default")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_static(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_static") and is_good_condition("killer_blue_exoskeleton_static")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_kat_eye") and is_good_condition("killer_blue_exoskeleton_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_psy(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_psy") and is_good_condition("killer_blue_exoskeleton_psy")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_blackwhite") and is_good_condition("killer_blue_exoskeleton_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_bast(task, objective) 
	if db.actor then
		if db.actor:object("killer_blue_exoskeleton_bast") and is_good_condition("killer_blue_exoskeleton_bast")  then
			return true
		end
	end
	return false
end
function goodup_killer_blue_exoskeleton_plus(task, objective) 
  	return amk_utils.inventory_search("killer_blue_exoskeleton_plus",1) ~= false
end
function giveup_killer_blue_exoskeleton(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton", 1)
end
function giveup_killer_blue_exoskeleton_bad(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_bad", 1)
end
function giveup_killer_blue_exoskeleton_good(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_good", 1)
end
function giveup_killer_blue_exoskeleton_default(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_default", 1)
end
function giveup_killer_blue_exoskeleton_static(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_static", 1)
end
function giveup_killer_blue_exoskeleton_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_kat_eye", 1)
end
function giveup_killer_blue_exoskeleton_psy(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_psy", 1)
end
function giveup_killer_blue_exoskeleton_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_blackwhite", 1)
end
function giveup_killer_blue_exoskeleton_bast(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_bast", 1)
end
function giveup_killer_blue_exoskeleton_plus(first_speaker, second_speaker)
	sak.out_item_namber("killer_blue_exoskeleton_plus", 1)
end
function add_killer_blue_exoskeleton_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_bad", "in")
end
function add_killer_blue_exoskeleton_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_good", "in")
end
function add_killer_blue_exoskeleton_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_default", "in")
end
function add_killer_blue_exoskeleton_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_static", "in")
end
function add_killer_blue_exoskeleton_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_kat_eye", "in")
end
function add_killer_blue_exoskeleton_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_psy", "in")
end
function add_killer_blue_exoskeleton_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_blackwhite", "in")
end
function add_killer_blue_exoskeleton_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_bast", "in")
end
function add_killer_blue_exoskeleton_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_plus", "in")
end
function add_killer_blue_exoskeleton_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_badplus", "in")
end
function add_killer_blue_exoskeleton_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_goodplus", "in")
end
function add_killer_blue_exoskeleton_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_defaultplus", "in")
end
function add_killer_blue_exoskeleton_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_staticplus", "in")
end
function add_killer_blue_exoskeleton_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_kat_eyeplus", "in")
end
function add_killer_blue_exoskeleton_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_psyplus", "in")
end
function add_killer_blue_exoskeleton_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_blackwhiteplus", "in")
end
function add_killer_blue_exoskeleton_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_blue_exoskeleton_bastplus", "in")
end

function goodup_dolg_black_exoskeleton(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton") and is_good_condition("dolg_black_exoskeleton")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_bad(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_bad") and is_good_condition("dolg_black_exoskeleton_bad")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_good(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_good") and is_good_condition("dolg_black_exoskeleton_good")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_default(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_default") and is_good_condition("dolg_black_exoskeleton_default")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_static(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_static") and is_good_condition("dolg_black_exoskeleton_static")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_kat_eye") and is_good_condition("dolg_black_exoskeleton_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_psy(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_psy") and is_good_condition("dolg_black_exoskeleton_psy")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_blackwhite") and is_good_condition("dolg_black_exoskeleton_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_bast(task, objective) 
	if db.actor then
		if db.actor:object("dolg_black_exoskeleton_bast") and is_good_condition("dolg_black_exoskeleton_bast")  then
			return true
		end
	end
	return false
end
function goodup_dolg_black_exoskeleton_plus(task, objective) 
  	return amk_utils.inventory_search("dolg_black_exoskeleton_plus",1) ~= false
end
function giveup_dolg_black_exoskeleton(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton", 1)
end
function giveup_dolg_black_exoskeleton_bad(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_bad", 1)
end
function giveup_dolg_black_exoskeleton_good(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_good", 1)
end
function giveup_dolg_black_exoskeleton_default(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_default", 1)
end
function giveup_dolg_black_exoskeleton_static(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_static", 1)
end
function giveup_dolg_black_exoskeleton_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_kat_eye", 1)
end
function giveup_dolg_black_exoskeleton_psy(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_psy", 1)
end
function giveup_dolg_black_exoskeleton_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_blackwhite", 1)
end
function giveup_dolg_black_exoskeleton_bast(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_bast", 1)
end
function giveup_dolg_black_exoskeleton_plus(first_speaker, second_speaker)
	sak.out_item_namber("dolg_black_exoskeleton_plus", 1)
end
function add_dolg_black_exoskeleton_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_bad", "in")
end
function add_dolg_black_exoskeleton_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_good", "in")
end
function add_dolg_black_exoskeleton_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_default", "in")
end
function add_dolg_black_exoskeleton_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_static", "in")
end
function add_dolg_black_exoskeleton_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_kat_eye", "in")
end
function add_dolg_black_exoskeleton_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_psy", "in")
end
function add_dolg_black_exoskeleton_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_blackwhite", "in")
end
function add_dolg_black_exoskeleton_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_bast", "in")
end
function add_dolg_black_exoskeleton_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_plus", "in")
end
function add_dolg_black_exoskeleton_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_badplus", "in")
end
function add_dolg_black_exoskeleton_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_goodplus", "in")
end
function add_dolg_black_exoskeleton_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_defaultplus", "in")
end
function add_dolg_black_exoskeleton_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_staticplus", "in")
end
function add_dolg_black_exoskeleton_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_kat_eyeplus", "in")
end
function add_dolg_black_exoskeleton_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_psyplus", "in")
end
function add_dolg_black_exoskeleton_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_blackwhiteplus", "in")
end
function add_dolg_black_exoskeleton_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton_bastplus", "in")
end

function goodup_svoboda_exoskeleton(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton") and is_good_condition("svoboda_exoskeleton")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_bad") and is_good_condition("svoboda_exoskeleton_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_good") and is_good_condition("svoboda_exoskeleton_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_default") and is_good_condition("svoboda_exoskeleton_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_static") and is_good_condition("svoboda_exoskeleton_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_kat_eye") and is_good_condition("svoboda_exoskeleton_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_psy") and is_good_condition("svoboda_exoskeleton_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_blackwhite") and is_good_condition("svoboda_exoskeleton_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_exoskeleton_bast") and is_good_condition("svoboda_exoskeleton_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_exoskeleton_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_exoskeleton_plus",1) ~= false
end
function giveup_svoboda_exoskeleton(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton", 1)
end
function giveup_svoboda_exoskeleton_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_bad", 1)
end
function giveup_svoboda_exoskeleton_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_good", 1)
end
function giveup_svoboda_exoskeleton_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_default", 1)
end
function giveup_svoboda_exoskeleton_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_static", 1)
end
function giveup_svoboda_exoskeleton_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_kat_eye", 1)
end
function giveup_svoboda_exoskeleton_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_psy", 1)
end
function giveup_svoboda_exoskeleton_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_blackwhite", 1)
end
function giveup_svoboda_exoskeleton_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_bast", 1)
end
function giveup_svoboda_exoskeleton_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_exoskeleton_plus", 1)
end
function add_svoboda_exoskeleton_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_bad", "in")
end
function add_svoboda_exoskeleton_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_good", "in")
end
function add_svoboda_exoskeleton_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_default", "in")
end
function add_svoboda_exoskeleton_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_static", "in")
end
function add_svoboda_exoskeleton_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_kat_eye", "in")
end
function add_svoboda_exoskeleton_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_psy", "in")
end
function add_svoboda_exoskeleton_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_blackwhite", "in")
end
function add_svoboda_exoskeleton_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_bast", "in")
end
function add_svoboda_exoskeleton_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_plus", "in")
end
function add_svoboda_exoskeleton_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_badplus", "in")
end
function add_svoboda_exoskeleton_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_goodplus", "in")
end
function add_svoboda_exoskeleton_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_defaultplus", "in")
end
function add_svoboda_exoskeleton_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_staticplus", "in")
end
function add_svoboda_exoskeleton_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_kat_eyeplus", "in")
end
function add_svoboda_exoskeleton_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_psyplus", "in")
end
function add_svoboda_exoskeleton_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_blackwhiteplus", "in")
end
function add_svoboda_exoskeleton_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_exoskeleton_bastplus", "in")
end

function goodup_monolit_exoskeleton(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton") and is_good_condition("monolit_exoskeleton")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_bad(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_bad") and is_good_condition("monolit_exoskeleton_bad")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_good(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_good") and is_good_condition("monolit_exoskeleton_good")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_default(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_default") and is_good_condition("monolit_exoskeleton_default")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_static(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_static") and is_good_condition("monolit_exoskeleton_static")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_kat_eye") and is_good_condition("monolit_exoskeleton_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_psy(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_psy") and is_good_condition("monolit_exoskeleton_psy")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_blackwhite") and is_good_condition("monolit_exoskeleton_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_bast(task, objective) 
	if db.actor then
		if db.actor:object("monolit_exoskeleton_bast") and is_good_condition("monolit_exoskeleton_bast")  then
			return true
		end
	end
	return false
end
function goodup_monolit_exoskeleton_plus(task, objective) 
  	return amk_utils.inventory_search("monolit_exoskeleton_plus",1) ~= false
end
function giveup_monolit_exoskeleton(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton", 1)
end
function giveup_monolit_exoskeleton_bad(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_bad", 1)
end
function giveup_monolit_exoskeleton_good(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_good", 1)
end
function giveup_monolit_exoskeleton_default(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_default", 1)
end
function giveup_monolit_exoskeleton_static(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_static", 1)
end
function giveup_monolit_exoskeleton_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_kat_eye", 1)
end
function giveup_monolit_exoskeleton_psy(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_psy", 1)
end
function giveup_monolit_exoskeleton_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_blackwhite", 1)
end
function giveup_monolit_exoskeleton_bast(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_bast", 1)
end
function giveup_monolit_exoskeleton_plus(first_speaker, second_speaker)
	sak.out_item_namber("monolit_exoskeleton_plus", 1)
end
function add_monolit_exoskeleton_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_bad", "in")
end
function add_monolit_exoskeleton_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_good", "in")
end
function add_monolit_exoskeleton_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_default", "in")
end
function add_monolit_exoskeleton_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_static", "in")
end
function add_monolit_exoskeleton_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_kat_eye", "in")
end
function add_monolit_exoskeleton_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_psy", "in")
end
function add_monolit_exoskeleton_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_blackwhite", "in")
end
function add_monolit_exoskeleton_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_bast", "in")
end
function add_monolit_exoskeleton_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_plus", "in")
end
function add_monolit_exoskeleton_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_badplus", "in")
end
function add_monolit_exoskeleton_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_goodplus", "in")
end
function add_monolit_exoskeleton_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_defaultplus", "in")
end
function add_monolit_exoskeleton_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_staticplus", "in")
end
function add_monolit_exoskeleton_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_kat_eyeplus", "in")
end
function add_monolit_exoskeleton_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_psyplus", "in")
end
function add_monolit_exoskeleton_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_blackwhiteplus", "in")
end
function add_monolit_exoskeleton_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_exoskeleton_bastplus", "in")
end

function goodup_broken_exoskeleton(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton") and is_good_condition("broken_exoskeleton")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_bad(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_bad") and is_good_condition("broken_exoskeleton_bad")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_good(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_good") and is_good_condition("broken_exoskeleton_good")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_default(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_default") and is_good_condition("broken_exoskeleton_default")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_static(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_static") and is_good_condition("broken_exoskeleton_static")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_kat_eye") and is_good_condition("broken_exoskeleton_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_psy(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_psy") and is_good_condition("broken_exoskeleton_psy")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_blackwhite") and is_good_condition("broken_exoskeleton_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_bast(task, objective) 
	if db.actor then
		if db.actor:object("broken_exoskeleton_bast") and is_good_condition("broken_exoskeleton_bast")  then
			return true
		end
	end
	return false
end
function goodup_broken_exoskeleton_plus(task, objective) 
  	return amk_utils.inventory_search("broken_exoskeleton_plus",1) ~= false
end
function giveup_broken_exoskeleton(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton", 1)
end
function giveup_broken_exoskeleton_bad(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_bad", 1)
end
function giveup_broken_exoskeleton_good(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_good", 1)
end
function giveup_broken_exoskeleton_default(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_default", 1)
end
function giveup_broken_exoskeleton_static(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_static", 1)
end
function giveup_broken_exoskeleton_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_kat_eye", 1)
end
function giveup_broken_exoskeleton_psy(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_psy", 1)
end
function giveup_broken_exoskeleton_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_blackwhite", 1)
end
function giveup_broken_exoskeleton_bast(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_bast", 1)
end
function giveup_broken_exoskeleton_plus(first_speaker, second_speaker)
	sak.out_item_namber("broken_exoskeleton_plus", 1)
end
function add_broken_exoskeleton_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_bad", "in")
end
function add_broken_exoskeleton_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_good", "in")
end
function add_broken_exoskeleton_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_default", "in")
end
function add_broken_exoskeleton_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_static", "in")
end
function add_broken_exoskeleton_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_kat_eye", "in")
end
function add_broken_exoskeleton_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_psy", "in")
end
function add_broken_exoskeleton_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_blackwhite", "in")
end
function add_broken_exoskeleton_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_bast", "in")
end
function add_broken_exoskeleton_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_plus", "in")
end
function add_broken_exoskeleton_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_badplus", "in")
end
function add_broken_exoskeleton_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_goodplus", "in")
end
function add_broken_exoskeleton_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_defaultplus", "in")
end
function add_broken_exoskeleton_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_staticplus", "in")
end
function add_broken_exoskeleton_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_kat_eyeplus", "in")
end
function add_broken_exoskeleton_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_psyplus", "in")
end
function add_broken_exoskeleton_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_blackwhiteplus", "in")
end
function add_broken_exoskeleton_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "broken_exoskeleton_bastplus", "in")
end

function goodup_freedom_scientific_outfit(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit") and is_good_condition("freedom_scientific_outfit")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_bad") and is_good_condition("freedom_scientific_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_good") and is_good_condition("freedom_scientific_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_default") and is_good_condition("freedom_scientific_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_static") and is_good_condition("freedom_scientific_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_kat_eye") and is_good_condition("freedom_scientific_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_psy") and is_good_condition("freedom_scientific_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_blackwhite") and is_good_condition("freedom_scientific_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("freedom_scientific_outfit_bast") and is_good_condition("freedom_scientific_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_freedom_scientific_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("freedom_scientific_outfit_plus",1) ~= false
end
function giveup_freedom_scientific_outfit(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit", 1)
end
function giveup_freedom_scientific_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_bad", 1)
end
function giveup_freedom_scientific_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_good", 1)
end
function giveup_freedom_scientific_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_default", 1)
end
function giveup_freedom_scientific_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_static", 1)
end
function giveup_freedom_scientific_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_kat_eye", 1)
end
function giveup_freedom_scientific_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_psy", 1)
end
function giveup_freedom_scientific_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_blackwhite", 1)
end
function giveup_freedom_scientific_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_bast", 1)
end
function giveup_freedom_scientific_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("freedom_scientific_outfit_plus", 1)
end
function add_freedom_scientific_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_bad", "in")
end
function add_freedom_scientific_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_good", "in")
end
function add_freedom_scientific_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_default", "in")
end
function add_freedom_scientific_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_static", "in")
end
function add_freedom_scientific_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_kat_eye", "in")
end
function add_freedom_scientific_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_psy", "in")
end
function add_freedom_scientific_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_blackwhite", "in")
end
function add_freedom_scientific_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_bast", "in")
end
function add_freedom_scientific_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_plus", "in")
end
function add_freedom_scientific_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_badplus", "in")
end
function add_freedom_scientific_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_goodplus", "in")
end
function add_freedom_scientific_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_defaultplus", "in")
end
function add_freedom_scientific_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_staticplus", "in")
end
function add_freedom_scientific_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_kat_eyeplus", "in")
end
function add_freedom_scientific_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_psyplus", "in")
end
function add_freedom_scientific_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_blackwhiteplus", "in")
end
function add_freedom_scientific_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "freedom_scientific_outfit_bastplus", "in")
end

function goodup_merc_scientific_outfit(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit") and is_good_condition("merc_scientific_outfit")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_bad") and is_good_condition("merc_scientific_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_good") and is_good_condition("merc_scientific_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_default") and is_good_condition("merc_scientific_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_static") and is_good_condition("merc_scientific_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_kat_eye") and is_good_condition("merc_scientific_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_psy") and is_good_condition("merc_scientific_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_blackwhite") and is_good_condition("merc_scientific_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("merc_scientific_outfit_bast") and is_good_condition("merc_scientific_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_merc_scientific_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("merc_scientific_outfit_plus",1) ~= false
end
function giveup_merc_scientific_outfit(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit", 1)
end
function giveup_merc_scientific_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_bad", 1)
end
function giveup_merc_scientific_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_good", 1)
end
function giveup_merc_scientific_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_default", 1)
end
function giveup_merc_scientific_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_static", 1)
end
function giveup_merc_scientific_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_kat_eye", 1)
end
function giveup_merc_scientific_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_psy", 1)
end
function giveup_merc_scientific_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_blackwhite", 1)
end
function giveup_merc_scientific_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_bast", 1)
end
function giveup_merc_scientific_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("merc_scientific_outfit_plus", 1)
end
function add_merc_scientific_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_bad", "in")
end
function add_merc_scientific_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_good", "in")
end
function add_merc_scientific_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_default", "in")
end
function add_merc_scientific_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_static", "in")
end
function add_merc_scientific_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_kat_eye", "in")
end
function add_merc_scientific_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_psy", "in")
end
function add_merc_scientific_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_blackwhite", "in")
end
function add_merc_scientific_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_bast", "in")
end
function add_merc_scientific_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_plus", "in")
end
function add_merc_scientific_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_badplus", "in")
end
function add_merc_scientific_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_goodplus", "in")
end
function add_merc_scientific_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_defaultplus", "in")
end
function add_merc_scientific_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_staticplus", "in")
end
function add_merc_scientific_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_kat_eyeplus", "in")
end
function add_merc_scientific_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_psyplus", "in")
end
function add_merc_scientific_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_blackwhiteplus", "in")
end
function add_merc_scientific_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "merc_scientific_outfit_bastplus", "in")
end

function goodup_monolit_scientific_outfit(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit") and is_good_condition("monolit_scientific_outfit")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_bad") and is_good_condition("monolit_scientific_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_good") and is_good_condition("monolit_scientific_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_default") and is_good_condition("monolit_scientific_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_static") and is_good_condition("monolit_scientific_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_kat_eye") and is_good_condition("monolit_scientific_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_psy") and is_good_condition("monolit_scientific_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_blackwhite") and is_good_condition("monolit_scientific_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("monolit_scientific_outfit_bast") and is_good_condition("monolit_scientific_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_monolit_scientific_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("monolit_scientific_outfit_plus",1) ~= false
end
function giveup_monolit_scientific_outfit(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit", 1)
end
function giveup_monolit_scientific_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_bad", 1)
end
function giveup_monolit_scientific_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_good", 1)
end
function giveup_monolit_scientific_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_default", 1)
end
function giveup_monolit_scientific_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_static", 1)
end
function giveup_monolit_scientific_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_kat_eye", 1)
end
function giveup_monolit_scientific_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_psy", 1)
end
function giveup_monolit_scientific_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_blackwhite", 1)
end
function giveup_monolit_scientific_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_bast", 1)
end
function giveup_monolit_scientific_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("monolit_scientific_outfit_plus", 1)
end
function add_monolit_scientific_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_bad", "in")
end
function add_monolit_scientific_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_good", "in")
end
function add_monolit_scientific_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_default", "in")
end
function add_monolit_scientific_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_static", "in")
end
function add_monolit_scientific_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_kat_eye", "in")
end
function add_monolit_scientific_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_psy", "in")
end
function add_monolit_scientific_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_blackwhite", "in")
end
function add_monolit_scientific_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_bast", "in")
end
function add_monolit_scientific_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_plus", "in")
end
function add_monolit_scientific_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_badplus", "in")
end
function add_monolit_scientific_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_goodplus", "in")
end
function add_monolit_scientific_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_defaultplus", "in")
end
function add_monolit_scientific_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_staticplus", "in")
end
function add_monolit_scientific_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_kat_eyeplus", "in")
end
function add_monolit_scientific_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_psyplus", "in")
end
function add_monolit_scientific_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_blackwhiteplus", "in")
end
function add_monolit_scientific_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_scientific_outfit_bastplus", "in")
end

function goodup_bandit_master_outfit(task, objective) 
	if db.actor then
		if db.actor:object("bandit_master_outfit") and is_good_condition("bandit_master_outfit")  then
			return true
		end
	end
	return false
end
function goodup_bandit_master_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_master_outfit_bad") and is_good_condition("bandit_master_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_master_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_master_outfit_plus",1) ~= false
end
function giveup_bandit_master_outfit(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit", 1)
end
function giveup_bandit_master_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit_bad", 1)
end
function giveup_bandit_master_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit_plus", 1)
end
function add_bandit_master_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_bad", "in")
end
function add_bandit_master_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_plus", "in")
end
function add_bandit_master_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_badplus", "in")
end

function goodup_outfit_soldier_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1") and is_good_condition("outfit_soldier_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_bad") and is_good_condition("outfit_soldier_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_good") and is_good_condition("outfit_soldier_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_default") and is_good_condition("outfit_soldier_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_static") and is_good_condition("outfit_soldier_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_kat_eye") and is_good_condition("outfit_soldier_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_psy") and is_good_condition("outfit_soldier_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_blackwhite") and is_good_condition("outfit_soldier_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_soldier_m1_bast") and is_good_condition("outfit_soldier_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_soldier_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_soldier_m1_plus",1) ~= false
end
function giveup_outfit_soldier_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1", 1)
end
function giveup_outfit_soldier_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_bad", 1)
end
function giveup_outfit_soldier_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_good", 1)
end
function giveup_outfit_soldier_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_default", 1)
end
function giveup_outfit_soldier_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_static", 1)
end
function giveup_outfit_soldier_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_kat_eye", 1)
end
function giveup_outfit_soldier_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_psy", 1)
end
function giveup_outfit_soldier_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_blackwhite", 1)
end
function giveup_outfit_soldier_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_bast", 1)
end
function giveup_outfit_soldier_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_soldier_m1_plus", 1)
end
function add_outfit_soldier_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_bad", "in")
end
function add_outfit_soldier_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_good", "in")
end
function add_outfit_soldier_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_default", "in")
end
function add_outfit_soldier_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_static", "in")
end
function add_outfit_soldier_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_kat_eye", "in")
end
function add_outfit_soldier_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_psy", "in")
end
function add_outfit_soldier_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_blackwhite", "in")
end
function add_outfit_soldier_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_bast", "in")
end
function add_outfit_soldier_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_plus", "in")
end
function add_outfit_soldier_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_badplus", "in")
end
function add_outfit_soldier_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_goodplus", "in")
end
function add_outfit_soldier_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_defaultplus", "in")
end
function add_outfit_soldier_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_staticplus", "in")
end
function add_outfit_soldier_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_kat_eyeplus", "in")
end
function add_outfit_soldier_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_psyplus", "in")
end
function add_outfit_soldier_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_blackwhiteplus", "in")
end
function add_outfit_soldier_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_soldier_m1_bastplus", "in")
end

function goodup_neytral_exo_antigas_outfit(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit") and is_good_condition("neytral_exo_antigas_outfit")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_bad") and is_good_condition("neytral_exo_antigas_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_good") and is_good_condition("neytral_exo_antigas_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_default") and is_good_condition("neytral_exo_antigas_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_static") and is_good_condition("neytral_exo_antigas_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_kat_eye") and is_good_condition("neytral_exo_antigas_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_psy") and is_good_condition("neytral_exo_antigas_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_blackwhite") and is_good_condition("neytral_exo_antigas_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_antigas_outfit_bast") and is_good_condition("neytral_exo_antigas_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_antigas_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_exo_antigas_outfit_plus",1) ~= false
end
function giveup_neytral_exo_antigas_outfit(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit", 1)
end
function giveup_neytral_exo_antigas_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_bad", 1)
end
function giveup_neytral_exo_antigas_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_good", 1)
end
function giveup_neytral_exo_antigas_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_default", 1)
end
function giveup_neytral_exo_antigas_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_static", 1)
end
function giveup_neytral_exo_antigas_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_kat_eye", 1)
end
function giveup_neytral_exo_antigas_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_psy", 1)
end
function giveup_neytral_exo_antigas_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_blackwhite", 1)
end
function giveup_neytral_exo_antigas_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_bast", 1)
end
function giveup_neytral_exo_antigas_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_antigas_outfit_plus", 1)
end
function add_neytral_exo_antigas_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_bad", "in")
end
function add_neytral_exo_antigas_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_good", "in")
end
function add_neytral_exo_antigas_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_default", "in")
end
function add_neytral_exo_antigas_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_static", "in")
end
function add_neytral_exo_antigas_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_kat_eye", "in")
end
function add_neytral_exo_antigas_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_psy", "in")
end
function add_neytral_exo_antigas_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_blackwhite", "in")
end
function add_neytral_exo_antigas_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_bast", "in")
end
function add_neytral_exo_antigas_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_plus", "in")
end
function add_neytral_exo_antigas_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_badplus", "in")
end
function add_neytral_exo_antigas_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_goodplus", "in")
end
function add_neytral_exo_antigas_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_defaultplus", "in")
end
function add_neytral_exo_antigas_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_staticplus", "in")
end
function add_neytral_exo_antigas_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_kat_eyeplus", "in")
end
function add_neytral_exo_antigas_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_psyplus", "in")
end
function add_neytral_exo_antigas_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_blackwhiteplus", "in")
end
function add_neytral_exo_antigas_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_antigas_outfit_bastplus", "in")
end

function goodup_bandit_veteran_outfit(task, objective) 
	if db.actor then
		if db.actor:object("bandit_veteran_outfit") and is_good_condition("bandit_veteran_outfit")  then
			return true
		end
	end
	return false
end
function goodup_bandit_veteran_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_veteran_outfit_bad") and is_good_condition("bandit_veteran_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_veteran_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_veteran_outfit_plus",1) ~= false
end
function giveup_bandit_veteran_outfit(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit", 1)
end
function giveup_bandit_veteran_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit_bad", 1)
end
function giveup_bandit_veteran_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit_plus", 1)
end
function add_bandit_veteran_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_bad", "in")
end
function add_bandit_veteran_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_plus", "in")
end
function add_bandit_veteran_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_badplus", "in")
end

function goodup_soldier_outfit(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit") and is_good_condition("soldier_outfit")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_bad") and is_good_condition("soldier_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_good") and is_good_condition("soldier_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_default") and is_good_condition("soldier_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_static") and is_good_condition("soldier_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_kat_eye") and is_good_condition("soldier_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_psy") and is_good_condition("soldier_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_blackwhite") and is_good_condition("soldier_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("soldier_outfit_bast") and is_good_condition("soldier_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_soldier_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("soldier_outfit_plus",1) ~= false
end
function giveup_soldier_outfit(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit", 1)
end
function giveup_soldier_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_bad", 1)
end
function giveup_soldier_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_good", 1)
end
function giveup_soldier_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_default", 1)
end
function giveup_soldier_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_static", 1)
end
function giveup_soldier_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_kat_eye", 1)
end
function giveup_soldier_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_psy", 1)
end
function giveup_soldier_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_blackwhite", 1)
end
function giveup_soldier_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_bast", 1)
end
function giveup_soldier_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit_plus", 1)
end
function add_soldier_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_bad", "in")
end
function add_soldier_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_good", "in")
end
function add_soldier_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_default", "in")
end
function add_soldier_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_static", "in")
end
function add_soldier_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_kat_eye", "in")
end
function add_soldier_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_psy", "in")
end
function add_soldier_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_blackwhite", "in")
end
function add_soldier_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_bast", "in")
end
function add_soldier_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_plus", "in")
end
function add_soldier_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_badplus", "in")
end
function add_soldier_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_goodplus", "in")
end
function add_soldier_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_defaultplus", "in")
end
function add_soldier_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_staticplus", "in")
end
function add_soldier_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_kat_eyeplus", "in")
end
function add_soldier_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_psyplus", "in")
end
function add_soldier_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_blackwhiteplus", "in")
end
function add_soldier_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "soldier_outfit_bastplus", "in")
end

function goodup_exo_bandit_outfit(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit") and is_good_condition("exo_bandit_outfit")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_bad") and is_good_condition("exo_bandit_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_good") and is_good_condition("exo_bandit_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_default") and is_good_condition("exo_bandit_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_static") and is_good_condition("exo_bandit_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_kat_eye") and is_good_condition("exo_bandit_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_psy") and is_good_condition("exo_bandit_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_blackwhite") and is_good_condition("exo_bandit_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("exo_bandit_outfit_bast") and is_good_condition("exo_bandit_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_exo_bandit_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("exo_bandit_outfit_plus",1) ~= false
end
function giveup_exo_bandit_outfit(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit", 1)
end
function giveup_exo_bandit_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_bad", 1)
end
function giveup_exo_bandit_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_good", 1)
end
function giveup_exo_bandit_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_default", 1)
end
function giveup_exo_bandit_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_static", 1)
end
function giveup_exo_bandit_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_kat_eye", 1)
end
function giveup_exo_bandit_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_psy", 1)
end
function giveup_exo_bandit_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_blackwhite", 1)
end
function giveup_exo_bandit_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_bast", 1)
end
function giveup_exo_bandit_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("exo_bandit_outfit_plus", 1)
end
function add_exo_bandit_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_bad", "in")
end
function add_exo_bandit_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_good", "in")
end
function add_exo_bandit_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_default", "in")
end
function add_exo_bandit_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_static", "in")
end
function add_exo_bandit_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_kat_eye", "in")
end
function add_exo_bandit_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_psy", "in")
end
function add_exo_bandit_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_blackwhite", "in")
end
function add_exo_bandit_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_bast", "in")
end
function add_exo_bandit_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_plus", "in")
end
function add_exo_bandit_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_badplus", "in")
end
function add_exo_bandit_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_goodplus", "in")
end
function add_exo_bandit_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_defaultplus", "in")
end
function add_exo_bandit_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_staticplus", "in")
end
function add_exo_bandit_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_kat_eyeplus", "in")
end
function add_exo_bandit_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_psyplus", "in")
end
function add_exo_bandit_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_blackwhiteplus", "in")
end
function add_exo_bandit_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "exo_bandit_outfit_bastplus", "in")
end

function goodup_nano_outfit(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit") and is_good_condition("nano_outfit")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_bad") and is_good_condition("nano_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_good") and is_good_condition("nano_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_default") and is_good_condition("nano_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_static") and is_good_condition("nano_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_kat_eye") and is_good_condition("nano_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_psy") and is_good_condition("nano_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_blackwhite") and is_good_condition("nano_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_bast") and is_good_condition("nano_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("nano_outfit_plus",1) ~= false
end
function giveup_nano_outfit(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit", 1)
end
function giveup_nano_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_bad", 1)
end
function giveup_nano_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_good", 1)
end
function giveup_nano_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_default", 1)
end
function giveup_nano_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_static", 1)
end
function giveup_nano_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_kat_eye", 1)
end
function giveup_nano_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_psy", 1)
end
function giveup_nano_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_blackwhite", 1)
end
function giveup_nano_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_bast", 1)
end
function giveup_nano_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_plus", 1)
end
function add_nano_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_bad", "in")
end
function add_nano_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_good", "in")
end
function add_nano_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_default", "in")
end
function add_nano_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_static", "in")
end
function add_nano_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_kat_eye", "in")
end
function add_nano_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_psy", "in")
end
function add_nano_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_blackwhite", "in")
end
function add_nano_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_bast", "in")
end
function add_nano_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_plus", "in")
end
function add_nano_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_badplus", "in")
end
function add_nano_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_goodplus", "in")
end
function add_nano_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_defaultplus", "in")
end
function add_nano_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_staticplus", "in")
end
function add_nano_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_kat_eyeplus", "in")
end
function add_nano_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_psyplus", "in")
end
function add_nano_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_blackwhiteplus", "in")
end
function add_nano_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_bastplus", "in")
end

function goodup_nano_outfit_addw(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw") and is_good_condition("nano_outfit_addw")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_bad(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_bad") and is_good_condition("nano_outfit_addw_bad")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_good(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_good") and is_good_condition("nano_outfit_addw_good")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_default(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_default") and is_good_condition("nano_outfit_addw_default")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_static(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_static") and is_good_condition("nano_outfit_addw_static")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_kat_eye") and is_good_condition("nano_outfit_addw_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_psy(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_psy") and is_good_condition("nano_outfit_addw_psy")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_blackwhite") and is_good_condition("nano_outfit_addw_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_bast(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addw_bast") and is_good_condition("nano_outfit_addw_bast")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addw_plus(task, objective) 
  	return amk_utils.inventory_search("nano_outfit_addw_plus",1) ~= false
end
function giveup_nano_outfit_addw(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw", 1)
end
function giveup_nano_outfit_addw_bad(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_bad", 1)
end
function giveup_nano_outfit_addw_good(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_good", 1)
end
function giveup_nano_outfit_addw_default(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_default", 1)
end
function giveup_nano_outfit_addw_static(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_static", 1)
end
function giveup_nano_outfit_addw_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_kat_eye", 1)
end
function giveup_nano_outfit_addw_psy(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_psy", 1)
end
function giveup_nano_outfit_addw_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_blackwhite", 1)
end
function giveup_nano_outfit_addw_bast(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_bast", 1)
end
function giveup_nano_outfit_addw_plus(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addw_plus", 1)
end
function add_nano_outfit_addw_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_bad", "in")
end
function add_nano_outfit_addw_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_good", "in")
end
function add_nano_outfit_addw_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_default", "in")
end
function add_nano_outfit_addw_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_static", "in")
end
function add_nano_outfit_addw_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_kat_eye", "in")
end
function add_nano_outfit_addw_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_psy", "in")
end
function add_nano_outfit_addw_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_blackwhite", "in")
end
function add_nano_outfit_addw_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_bast", "in")
end
function add_nano_outfit_addw_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_plus", "in")
end
function add_nano_outfit_addw_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_badplus", "in")
end
function add_nano_outfit_addw_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_goodplus", "in")
end
function add_nano_outfit_addw_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_defaultplus", "in")
end
function add_nano_outfit_addw_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_staticplus", "in")
end
function add_nano_outfit_addw_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_kat_eyeplus", "in")
end
function add_nano_outfit_addw_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_psyplus", "in")
end
function add_nano_outfit_addw_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_blackwhiteplus", "in")
end
function add_nano_outfit_addw_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addw_bastplus", "in")
end

function goodup_nano_outfit_addh(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh") and is_good_condition("nano_outfit_addh")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_bad(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_bad") and is_good_condition("nano_outfit_addh_bad")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_good(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_good") and is_good_condition("nano_outfit_addh_good")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_default(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_default") and is_good_condition("nano_outfit_addh_default")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_static(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_static") and is_good_condition("nano_outfit_addh_static")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_kat_eye") and is_good_condition("nano_outfit_addh_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_psy(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_psy") and is_good_condition("nano_outfit_addh_psy")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_blackwhite") and is_good_condition("nano_outfit_addh_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_bast(task, objective) 
	if db.actor then
		if db.actor:object("nano_outfit_addh_bast") and is_good_condition("nano_outfit_addh_bast")  then
			return true
		end
	end
	return false
end
function goodup_nano_outfit_addh_plus(task, objective) 
  	return amk_utils.inventory_search("nano_outfit_addh_plus",1) ~= false
end
function giveup_nano_outfit_addh(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh", 1)
end
function giveup_nano_outfit_addh_bad(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_bad", 1)
end
function giveup_nano_outfit_addh_good(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_good", 1)
end
function giveup_nano_outfit_addh_default(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_default", 1)
end
function giveup_nano_outfit_addh_static(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_static", 1)
end
function giveup_nano_outfit_addh_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_kat_eye", 1)
end
function giveup_nano_outfit_addh_psy(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_psy", 1)
end
function giveup_nano_outfit_addh_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_blackwhite", 1)
end
function giveup_nano_outfit_addh_bast(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_bast", 1)
end
function giveup_nano_outfit_addh_plus(first_speaker, second_speaker)
	sak.out_item_namber("nano_outfit_addh_plus", 1)
end
function add_nano_outfit_addh_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_bad", "in")
end
function add_nano_outfit_addh_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_good", "in")
end
function add_nano_outfit_addh_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_default", "in")
end
function add_nano_outfit_addh_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_static", "in")
end
function add_nano_outfit_addh_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_kat_eye", "in")
end
function add_nano_outfit_addh_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_psy", "in")
end
function add_nano_outfit_addh_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_blackwhite", "in")
end
function add_nano_outfit_addh_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_bast", "in")
end
function add_nano_outfit_addh_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_plus", "in")
end
function add_nano_outfit_addh_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_badplus", "in")
end
function add_nano_outfit_addh_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_goodplus", "in")
end
function add_nano_outfit_addh_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_defaultplus", "in")
end
function add_nano_outfit_addh_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_staticplus", "in")
end
function add_nano_outfit_addh_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_kat_eyeplus", "in")
end
function add_nano_outfit_addh_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_psyplus", "in")
end
function add_nano_outfit_addh_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_blackwhiteplus", "in")
end
function add_nano_outfit_addh_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "nano_outfit_addh_bastplus", "in")
end

function goodup_stalker_france_killer_gaz(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz") and is_good_condition("stalker_france_killer_gaz")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_bad") and is_good_condition("stalker_france_killer_gaz_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_good") and is_good_condition("stalker_france_killer_gaz_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_default") and is_good_condition("stalker_france_killer_gaz_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_static") and is_good_condition("stalker_france_killer_gaz_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_kat_eye") and is_good_condition("stalker_france_killer_gaz_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_psy") and is_good_condition("stalker_france_killer_gaz_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_blackwhite") and is_good_condition("stalker_france_killer_gaz_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_france_killer_gaz_bast") and is_good_condition("stalker_france_killer_gaz_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_france_killer_gaz_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_france_killer_gaz_plus",1) ~= false
end
function giveup_stalker_france_killer_gaz(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz", 1)
end
function giveup_stalker_france_killer_gaz_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_bad", 1)
end
function giveup_stalker_france_killer_gaz_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_good", 1)
end
function giveup_stalker_france_killer_gaz_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_default", 1)
end
function giveup_stalker_france_killer_gaz_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_static", 1)
end
function giveup_stalker_france_killer_gaz_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_kat_eye", 1)
end
function giveup_stalker_france_killer_gaz_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_psy", 1)
end
function giveup_stalker_france_killer_gaz_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_blackwhite", 1)
end
function giveup_stalker_france_killer_gaz_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_bast", 1)
end
function giveup_stalker_france_killer_gaz_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_france_killer_gaz_plus", 1)
end
function add_stalker_france_killer_gaz_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_bad", "in")
end
function add_stalker_france_killer_gaz_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_good", "in")
end
function add_stalker_france_killer_gaz_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_default", "in")
end
function add_stalker_france_killer_gaz_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_static", "in")
end
function add_stalker_france_killer_gaz_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_kat_eye", "in")
end
function add_stalker_france_killer_gaz_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_psy", "in")
end
function add_stalker_france_killer_gaz_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_blackwhite", "in")
end
function add_stalker_france_killer_gaz_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_bast", "in")
end
function add_stalker_france_killer_gaz_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_plus", "in")
end
function add_stalker_france_killer_gaz_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_badplus", "in")
end
function add_stalker_france_killer_gaz_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_goodplus", "in")
end
function add_stalker_france_killer_gaz_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_defaultplus", "in")
end
function add_stalker_france_killer_gaz_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_staticplus", "in")
end
function add_stalker_france_killer_gaz_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_kat_eyeplus", "in")
end
function add_stalker_france_killer_gaz_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_psyplus", "in")
end
function add_stalker_france_killer_gaz_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_blackwhiteplus", "in")
end
function add_stalker_france_killer_gaz_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_france_killer_gaz_bastplus", "in")
end

function goodup_stalker_usa_killer_gaz(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz") and is_good_condition("stalker_usa_killer_gaz")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_bad") and is_good_condition("stalker_usa_killer_gaz_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_good") and is_good_condition("stalker_usa_killer_gaz_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_default") and is_good_condition("stalker_usa_killer_gaz_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_static") and is_good_condition("stalker_usa_killer_gaz_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_kat_eye") and is_good_condition("stalker_usa_killer_gaz_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_psy") and is_good_condition("stalker_usa_killer_gaz_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_blackwhite") and is_good_condition("stalker_usa_killer_gaz_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_usa_killer_gaz_bast") and is_good_condition("stalker_usa_killer_gaz_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_usa_killer_gaz_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_usa_killer_gaz_plus",1) ~= false
end
function giveup_stalker_usa_killer_gaz(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz", 1)
end
function giveup_stalker_usa_killer_gaz_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_bad", 1)
end
function giveup_stalker_usa_killer_gaz_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_good", 1)
end
function giveup_stalker_usa_killer_gaz_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_default", 1)
end
function giveup_stalker_usa_killer_gaz_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_static", 1)
end
function giveup_stalker_usa_killer_gaz_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_kat_eye", 1)
end
function giveup_stalker_usa_killer_gaz_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_psy", 1)
end
function giveup_stalker_usa_killer_gaz_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_blackwhite", 1)
end
function giveup_stalker_usa_killer_gaz_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_bast", 1)
end
function giveup_stalker_usa_killer_gaz_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_usa_killer_gaz_plus", 1)
end
function add_stalker_usa_killer_gaz_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_bad", "in")
end
function add_stalker_usa_killer_gaz_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_good", "in")
end
function add_stalker_usa_killer_gaz_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_default", "in")
end
function add_stalker_usa_killer_gaz_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_static", "in")
end
function add_stalker_usa_killer_gaz_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_kat_eye", "in")
end
function add_stalker_usa_killer_gaz_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_psy", "in")
end
function add_stalker_usa_killer_gaz_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_blackwhite", "in")
end
function add_stalker_usa_killer_gaz_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_bast", "in")
end
function add_stalker_usa_killer_gaz_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_plus", "in")
end
function add_stalker_usa_killer_gaz_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_badplus", "in")
end
function add_stalker_usa_killer_gaz_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_goodplus", "in")
end
function add_stalker_usa_killer_gaz_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_defaultplus", "in")
end
function add_stalker_usa_killer_gaz_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_staticplus", "in")
end
function add_stalker_usa_killer_gaz_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_kat_eyeplus", "in")
end
function add_stalker_usa_killer_gaz_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_psyplus", "in")
end
function add_stalker_usa_killer_gaz_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_blackwhiteplus", "in")
end
function add_stalker_usa_killer_gaz_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_usa_killer_gaz_bastplus", "in")
end

function goodup_rus_spec_outfit(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit") and is_good_condition("rus_spec_outfit")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_bad") and is_good_condition("rus_spec_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_good") and is_good_condition("rus_spec_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_default") and is_good_condition("rus_spec_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_static") and is_good_condition("rus_spec_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_kat_eye") and is_good_condition("rus_spec_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_psy") and is_good_condition("rus_spec_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_blackwhite") and is_good_condition("rus_spec_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("rus_spec_outfit_bast") and is_good_condition("rus_spec_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_rus_spec_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("rus_spec_outfit_plus",1) ~= false
end
function giveup_rus_spec_outfit(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit", 1)
end
function giveup_rus_spec_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_bad", 1)
end
function giveup_rus_spec_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_good", 1)
end
function giveup_rus_spec_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_default", 1)
end
function giveup_rus_spec_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_static", 1)
end
function giveup_rus_spec_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_kat_eye", 1)
end
function giveup_rus_spec_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_psy", 1)
end
function giveup_rus_spec_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_blackwhite", 1)
end
function giveup_rus_spec_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_bast", 1)
end
function giveup_rus_spec_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("rus_spec_outfit_plus", 1)
end
function add_rus_spec_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_bad", "in")
end
function add_rus_spec_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_good", "in")
end
function add_rus_spec_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_default", "in")
end
function add_rus_spec_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_static", "in")
end
function add_rus_spec_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_kat_eye", "in")
end
function add_rus_spec_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_psy", "in")
end
function add_rus_spec_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_blackwhite", "in")
end
function add_rus_spec_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_bast", "in")
end
function add_rus_spec_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_plus", "in")
end
function add_rus_spec_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_badplus", "in")
end
function add_rus_spec_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_goodplus", "in")
end
function add_rus_spec_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_defaultplus", "in")
end
function add_rus_spec_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_staticplus", "in")
end
function add_rus_spec_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_kat_eyeplus", "in")
end
function add_rus_spec_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_psyplus", "in")
end
function add_rus_spec_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_blackwhiteplus", "in")
end
function add_rus_spec_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "rus_spec_outfit_bastplus", "in")
end

function goodup_military_exo_outfit(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit") and is_good_condition("military_exo_outfit")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_bad(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_bad") and is_good_condition("military_exo_outfit_bad")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_good(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_good") and is_good_condition("military_exo_outfit_good")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_default(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_default") and is_good_condition("military_exo_outfit_default")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_static(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_static") and is_good_condition("military_exo_outfit_static")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_kat_eye") and is_good_condition("military_exo_outfit_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_psy(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_psy") and is_good_condition("military_exo_outfit_psy")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_blackwhite") and is_good_condition("military_exo_outfit_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_bast(task, objective) 
	if db.actor then
		if db.actor:object("military_exo_outfit_bast") and is_good_condition("military_exo_outfit_bast")  then
			return true
		end
	end
	return false
end
function goodup_military_exo_outfit_plus(task, objective) 
  	return amk_utils.inventory_search("military_exo_outfit_plus",1) ~= false
end
function giveup_military_exo_outfit(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit", 1)
end
function giveup_military_exo_outfit_bad(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_bad", 1)
end
function giveup_military_exo_outfit_good(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_good", 1)
end
function giveup_military_exo_outfit_default(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_default", 1)
end
function giveup_military_exo_outfit_static(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_static", 1)
end
function giveup_military_exo_outfit_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_kat_eye", 1)
end
function giveup_military_exo_outfit_psy(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_psy", 1)
end
function giveup_military_exo_outfit_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_blackwhite", 1)
end
function giveup_military_exo_outfit_bast(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_bast", 1)
end
function giveup_military_exo_outfit_plus(first_speaker, second_speaker)
	sak.out_item_namber("military_exo_outfit_plus", 1)
end
function add_military_exo_outfit_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_bad", "in")
end
function add_military_exo_outfit_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_good", "in")
end
function add_military_exo_outfit_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_default", "in")
end
function add_military_exo_outfit_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_static", "in")
end
function add_military_exo_outfit_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_kat_eye", "in")
end
function add_military_exo_outfit_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_psy", "in")
end
function add_military_exo_outfit_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_blackwhite", "in")
end
function add_military_exo_outfit_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_bast", "in")
end
function add_military_exo_outfit_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_plus", "in")
end
function add_military_exo_outfit_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_badplus", "in")
end
function add_military_exo_outfit_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_goodplus", "in")
end
function add_military_exo_outfit_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_defaultplus", "in")
end
function add_military_exo_outfit_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_staticplus", "in")
end
function add_military_exo_outfit_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_kat_eyeplus", "in")
end
function add_military_exo_outfit_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_psyplus", "in")
end
function add_military_exo_outfit_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_blackwhiteplus", "in")
end
function add_military_exo_outfit_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_exo_outfit_bastplus", "in")
end

function goodup_neytral_novice_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_m1") and is_good_condition("neytral_novice_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_m1_bad") and is_good_condition("neytral_novice_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_m1_plus",1) ~= false
end
function giveup_neytral_novice_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_m1", 1)
end
function giveup_neytral_novice_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_m1_bad", 1)
end
function giveup_neytral_novice_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_m1_plus", 1)
end
function add_neytral_novice_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_m1_bad", "in")
end
function add_neytral_novice_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_m1_plus", "in")
end
function add_neytral_novice_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_m1_badplus", "in")
end

function goodup_neytral_novice_outfit_cam(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam") and is_good_condition("neytral_novice_outfit_cam")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_bad") and is_good_condition("neytral_novice_outfit_cam_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_cam_plus",1) ~= false
end
function giveup_neytral_novice_outfit_cam(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam", 1)
end
function giveup_neytral_novice_outfit_cam_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_bad", 1)
end
function giveup_neytral_novice_outfit_cam_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_plus", 1)
end
function add_neytral_novice_outfit_cam_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_bad", "in")
end
function add_neytral_novice_outfit_cam_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_plus", "in")
end
function add_neytral_novice_outfit_cam_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_badplus", "in")
end

function goodup_neytral_novice_outfit_new(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_new") and is_good_condition("neytral_novice_outfit_new")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_new_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_new_bad") and is_good_condition("neytral_novice_outfit_new_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_new_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_new_plus",1) ~= false
end
function giveup_neytral_novice_outfit_new(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_new", 1)
end
function giveup_neytral_novice_outfit_new_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_new_bad", 1)
end
function giveup_neytral_novice_outfit_new_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_new_plus", 1)
end
function add_neytral_novice_outfit_new_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_new_bad", "in")
end
function add_neytral_novice_outfit_new_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_new_plus", "in")
end
function add_neytral_novice_outfit_new_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_new_badplus", "in")
end

function goodup_neytral_novice_outfit_cam_1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_1") and is_good_condition("neytral_novice_outfit_cam_1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_1_bad") and is_good_condition("neytral_novice_outfit_cam_1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_cam_1_plus",1) ~= false
end
function giveup_neytral_novice_outfit_cam_1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_1", 1)
end
function giveup_neytral_novice_outfit_cam_1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_1_bad", 1)
end
function giveup_neytral_novice_outfit_cam_1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_1_plus", 1)
end
function add_neytral_novice_outfit_cam_1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_1_bad", "in")
end
function add_neytral_novice_outfit_cam_1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_1_plus", "in")
end
function add_neytral_novice_outfit_cam_1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_1_badplus", "in")
end

function goodup_neytral_novice_outfit_cam_2(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_2") and is_good_condition("neytral_novice_outfit_cam_2")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_2_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_2_bad") and is_good_condition("neytral_novice_outfit_cam_2_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_2_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_cam_2_plus",1) ~= false
end
function giveup_neytral_novice_outfit_cam_2(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_2", 1)
end
function giveup_neytral_novice_outfit_cam_2_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_2_bad", 1)
end
function giveup_neytral_novice_outfit_cam_2_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_2_plus", 1)
end
function add_neytral_novice_outfit_cam_2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_2_bad", "in")
end
function add_neytral_novice_outfit_cam_2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_2_plus", "in")
end
function add_neytral_novice_outfit_cam_2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_2_badplus", "in")
end

function goodup_neytral_novice_outfit_cam_3(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_3") and is_good_condition("neytral_novice_outfit_cam_3")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_3_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_outfit_cam_3_bad") and is_good_condition("neytral_novice_outfit_cam_3_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_outfit_cam_3_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_outfit_cam_3_plus",1) ~= false
end
function giveup_neytral_novice_outfit_cam_3(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_3", 1)
end
function giveup_neytral_novice_outfit_cam_3_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_3_bad", 1)
end
function giveup_neytral_novice_outfit_cam_3_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_outfit_cam_3_plus", 1)
end
function add_neytral_novice_outfit_cam_3_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_3_bad", "in")
end
function add_neytral_novice_outfit_cam_3_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_3_plus", "in")
end
function add_neytral_novice_outfit_cam_3_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_outfit_cam_3_badplus", "in")
end

function goodup_neytral_novice_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_gaz_outfit_m1") and is_good_condition("neytral_novice_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_novice_gaz_outfit_m1_bad") and is_good_condition("neytral_novice_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_novice_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_novice_gaz_outfit_m1_plus",1) ~= false
end
function giveup_neytral_novice_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_gaz_outfit_m1", 1)
end
function giveup_neytral_novice_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_gaz_outfit_m1_bad", 1)
end
function giveup_neytral_novice_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_novice_gaz_outfit_m1_plus", 1)
end
function add_neytral_novice_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_gaz_outfit_m1_bad", "in")
end
function add_neytral_novice_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_gaz_outfit_m1_plus", "in")
end
function add_neytral_novice_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_novice_gaz_outfit_m1_badplus", "in")
end

function goodup_neytral_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1") and is_good_condition("neytral_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_bad") and is_good_condition("neytral_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_good") and is_good_condition("neytral_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_default") and is_good_condition("neytral_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_static") and is_good_condition("neytral_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_kat_eye") and is_good_condition("neytral_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_psy") and is_good_condition("neytral_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_blackwhite") and is_good_condition("neytral_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m1_bast") and is_good_condition("neytral_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_gaz_outfit_m1_plus",1) ~= false
end
function giveup_neytral_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1", 1)
end
function giveup_neytral_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_bad", 1)
end
function giveup_neytral_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_good", 1)
end
function giveup_neytral_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_default", 1)
end
function giveup_neytral_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_static", 1)
end
function giveup_neytral_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_kat_eye", 1)
end
function giveup_neytral_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_psy", 1)
end
function giveup_neytral_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_blackwhite", 1)
end
function giveup_neytral_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_bast", 1)
end
function giveup_neytral_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m1_plus", 1)
end
function add_neytral_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_bad", "in")
end
function add_neytral_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_good", "in")
end
function add_neytral_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_default", "in")
end
function add_neytral_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_static", "in")
end
function add_neytral_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_kat_eye", "in")
end
function add_neytral_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_psy", "in")
end
function add_neytral_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_blackwhite", "in")
end
function add_neytral_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_bast", "in")
end
function add_neytral_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_plus", "in")
end
function add_neytral_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_badplus", "in")
end
function add_neytral_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_goodplus", "in")
end
function add_neytral_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_defaultplus", "in")
end
function add_neytral_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_staticplus", "in")
end
function add_neytral_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_neytral_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_psyplus", "in")
end
function add_neytral_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_neytral_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m1_bastplus", "in")
end

function goodup_neytral_gaz_outfit_m2(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2") and is_good_condition("neytral_gaz_outfit_m2")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_bad") and is_good_condition("neytral_gaz_outfit_m2_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_good") and is_good_condition("neytral_gaz_outfit_m2_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_default") and is_good_condition("neytral_gaz_outfit_m2_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_static") and is_good_condition("neytral_gaz_outfit_m2_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_kat_eye") and is_good_condition("neytral_gaz_outfit_m2_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_psy") and is_good_condition("neytral_gaz_outfit_m2_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_blackwhite") and is_good_condition("neytral_gaz_outfit_m2_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_m2_bast") and is_good_condition("neytral_gaz_outfit_m2_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_m2_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_gaz_outfit_m2_plus",1) ~= false
end
function giveup_neytral_gaz_outfit_m2(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2", 1)
end
function giveup_neytral_gaz_outfit_m2_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_bad", 1)
end
function giveup_neytral_gaz_outfit_m2_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_good", 1)
end
function giveup_neytral_gaz_outfit_m2_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_default", 1)
end
function giveup_neytral_gaz_outfit_m2_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_static", 1)
end
function giveup_neytral_gaz_outfit_m2_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_kat_eye", 1)
end
function giveup_neytral_gaz_outfit_m2_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_psy", 1)
end
function giveup_neytral_gaz_outfit_m2_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_blackwhite", 1)
end
function giveup_neytral_gaz_outfit_m2_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_bast", 1)
end
function giveup_neytral_gaz_outfit_m2_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_m2_plus", 1)
end
function add_neytral_gaz_outfit_m2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_bad", "in")
end
function add_neytral_gaz_outfit_m2_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_good", "in")
end
function add_neytral_gaz_outfit_m2_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_default", "in")
end
function add_neytral_gaz_outfit_m2_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_static", "in")
end
function add_neytral_gaz_outfit_m2_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_kat_eye", "in")
end
function add_neytral_gaz_outfit_m2_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_psy", "in")
end
function add_neytral_gaz_outfit_m2_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_blackwhite", "in")
end
function add_neytral_gaz_outfit_m2_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_bast", "in")
end
function add_neytral_gaz_outfit_m2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_plus", "in")
end
function add_neytral_gaz_outfit_m2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_badplus", "in")
end
function add_neytral_gaz_outfit_m2_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_goodplus", "in")
end
function add_neytral_gaz_outfit_m2_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_defaultplus", "in")
end
function add_neytral_gaz_outfit_m2_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_staticplus", "in")
end
function add_neytral_gaz_outfit_m2_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_kat_eyeplus", "in")
end
function add_neytral_gaz_outfit_m2_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_psyplus", "in")
end
function add_neytral_gaz_outfit_m2_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_blackwhiteplus", "in")
end
function add_neytral_gaz_outfit_m2_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_m2_bastplus", "in")
end

function goodup_neytral_gaz_outfit_v1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1") and is_good_condition("neytral_gaz_outfit_v1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_bad") and is_good_condition("neytral_gaz_outfit_v1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_good") and is_good_condition("neytral_gaz_outfit_v1_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_default") and is_good_condition("neytral_gaz_outfit_v1_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_static") and is_good_condition("neytral_gaz_outfit_v1_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_kat_eye") and is_good_condition("neytral_gaz_outfit_v1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_psy") and is_good_condition("neytral_gaz_outfit_v1_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_blackwhite") and is_good_condition("neytral_gaz_outfit_v1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v1_bast") and is_good_condition("neytral_gaz_outfit_v1_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_gaz_outfit_v1_plus",1) ~= false
end
function giveup_neytral_gaz_outfit_v1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1", 1)
end
function giveup_neytral_gaz_outfit_v1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_bad", 1)
end
function giveup_neytral_gaz_outfit_v1_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_good", 1)
end
function giveup_neytral_gaz_outfit_v1_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_default", 1)
end
function giveup_neytral_gaz_outfit_v1_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_static", 1)
end
function giveup_neytral_gaz_outfit_v1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_kat_eye", 1)
end
function giveup_neytral_gaz_outfit_v1_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_psy", 1)
end
function giveup_neytral_gaz_outfit_v1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_blackwhite", 1)
end
function giveup_neytral_gaz_outfit_v1_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_bast", 1)
end
function giveup_neytral_gaz_outfit_v1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v1_plus", 1)
end
function add_neytral_gaz_outfit_v1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_bad", "in")
end
function add_neytral_gaz_outfit_v1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_good", "in")
end
function add_neytral_gaz_outfit_v1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_default", "in")
end
function add_neytral_gaz_outfit_v1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_static", "in")
end
function add_neytral_gaz_outfit_v1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_kat_eye", "in")
end
function add_neytral_gaz_outfit_v1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_psy", "in")
end
function add_neytral_gaz_outfit_v1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_blackwhite", "in")
end
function add_neytral_gaz_outfit_v1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_bast", "in")
end
function add_neytral_gaz_outfit_v1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_plus", "in")
end
function add_neytral_gaz_outfit_v1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_badplus", "in")
end
function add_neytral_gaz_outfit_v1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_goodplus", "in")
end
function add_neytral_gaz_outfit_v1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_defaultplus", "in")
end
function add_neytral_gaz_outfit_v1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_staticplus", "in")
end
function add_neytral_gaz_outfit_v1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_kat_eyeplus", "in")
end
function add_neytral_gaz_outfit_v1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_psyplus", "in")
end
function add_neytral_gaz_outfit_v1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_blackwhiteplus", "in")
end
function add_neytral_gaz_outfit_v1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v1_bastplus", "in")
end

function goodup_neytral_gaz_outfit_v2(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2") and is_good_condition("neytral_gaz_outfit_v2")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_bad") and is_good_condition("neytral_gaz_outfit_v2_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_good") and is_good_condition("neytral_gaz_outfit_v2_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_default") and is_good_condition("neytral_gaz_outfit_v2_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_static") and is_good_condition("neytral_gaz_outfit_v2_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_kat_eye") and is_good_condition("neytral_gaz_outfit_v2_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_psy") and is_good_condition("neytral_gaz_outfit_v2_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_blackwhite") and is_good_condition("neytral_gaz_outfit_v2_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v2_bast") and is_good_condition("neytral_gaz_outfit_v2_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v2_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_gaz_outfit_v2_plus",1) ~= false
end
function giveup_neytral_gaz_outfit_v2(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2", 1)
end
function giveup_neytral_gaz_outfit_v2_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_bad", 1)
end
function giveup_neytral_gaz_outfit_v2_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_good", 1)
end
function giveup_neytral_gaz_outfit_v2_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_default", 1)
end
function giveup_neytral_gaz_outfit_v2_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_static", 1)
end
function giveup_neytral_gaz_outfit_v2_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_kat_eye", 1)
end
function giveup_neytral_gaz_outfit_v2_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_psy", 1)
end
function giveup_neytral_gaz_outfit_v2_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_blackwhite", 1)
end
function giveup_neytral_gaz_outfit_v2_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_bast", 1)
end
function giveup_neytral_gaz_outfit_v2_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v2_plus", 1)
end
function add_neytral_gaz_outfit_v2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_bad", "in")
end
function add_neytral_gaz_outfit_v2_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_good", "in")
end
function add_neytral_gaz_outfit_v2_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_default", "in")
end
function add_neytral_gaz_outfit_v2_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_static", "in")
end
function add_neytral_gaz_outfit_v2_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_kat_eye", "in")
end
function add_neytral_gaz_outfit_v2_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_psy", "in")
end
function add_neytral_gaz_outfit_v2_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_blackwhite", "in")
end
function add_neytral_gaz_outfit_v2_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_bast", "in")
end
function add_neytral_gaz_outfit_v2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_plus", "in")
end
function add_neytral_gaz_outfit_v2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_badplus", "in")
end
function add_neytral_gaz_outfit_v2_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_goodplus", "in")
end
function add_neytral_gaz_outfit_v2_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_defaultplus", "in")
end
function add_neytral_gaz_outfit_v2_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_staticplus", "in")
end
function add_neytral_gaz_outfit_v2_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_kat_eyeplus", "in")
end
function add_neytral_gaz_outfit_v2_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_psyplus", "in")
end
function add_neytral_gaz_outfit_v2_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_blackwhiteplus", "in")
end
function add_neytral_gaz_outfit_v2_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v2_bastplus", "in")
end

function goodup_neytral_gaz_outfit_v3(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3") and is_good_condition("neytral_gaz_outfit_v3")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_bad") and is_good_condition("neytral_gaz_outfit_v3_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_good") and is_good_condition("neytral_gaz_outfit_v3_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_default") and is_good_condition("neytral_gaz_outfit_v3_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_static") and is_good_condition("neytral_gaz_outfit_v3_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_kat_eye") and is_good_condition("neytral_gaz_outfit_v3_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_psy") and is_good_condition("neytral_gaz_outfit_v3_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_blackwhite") and is_good_condition("neytral_gaz_outfit_v3_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_gaz_outfit_v3_bast") and is_good_condition("neytral_gaz_outfit_v3_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_gaz_outfit_v3_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_gaz_outfit_v3_plus",1) ~= false
end
function giveup_neytral_gaz_outfit_v3(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3", 1)
end
function giveup_neytral_gaz_outfit_v3_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_bad", 1)
end
function giveup_neytral_gaz_outfit_v3_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_good", 1)
end
function giveup_neytral_gaz_outfit_v3_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_default", 1)
end
function giveup_neytral_gaz_outfit_v3_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_static", 1)
end
function giveup_neytral_gaz_outfit_v3_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_kat_eye", 1)
end
function giveup_neytral_gaz_outfit_v3_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_psy", 1)
end
function giveup_neytral_gaz_outfit_v3_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_blackwhite", 1)
end
function giveup_neytral_gaz_outfit_v3_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_bast", 1)
end
function giveup_neytral_gaz_outfit_v3_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_gaz_outfit_v3_plus", 1)
end
function add_neytral_gaz_outfit_v3_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_bad", "in")
end
function add_neytral_gaz_outfit_v3_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_good", "in")
end
function add_neytral_gaz_outfit_v3_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_default", "in")
end
function add_neytral_gaz_outfit_v3_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_static", "in")
end
function add_neytral_gaz_outfit_v3_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_kat_eye", "in")
end
function add_neytral_gaz_outfit_v3_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_psy", "in")
end
function add_neytral_gaz_outfit_v3_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_blackwhite", "in")
end
function add_neytral_gaz_outfit_v3_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_bast", "in")
end
function add_neytral_gaz_outfit_v3_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_plus", "in")
end
function add_neytral_gaz_outfit_v3_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_badplus", "in")
end
function add_neytral_gaz_outfit_v3_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_goodplus", "in")
end
function add_neytral_gaz_outfit_v3_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_defaultplus", "in")
end
function add_neytral_gaz_outfit_v3_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_staticplus", "in")
end
function add_neytral_gaz_outfit_v3_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_kat_eyeplus", "in")
end
function add_neytral_gaz_outfit_v3_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_psyplus", "in")
end
function add_neytral_gaz_outfit_v3_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_blackwhiteplus", "in")
end
function add_neytral_gaz_outfit_v3_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_gaz_outfit_v3_bastplus", "in")
end

function goodup_neytral_exo_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1") and is_good_condition("neytral_exo_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_bad") and is_good_condition("neytral_exo_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_good") and is_good_condition("neytral_exo_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_default") and is_good_condition("neytral_exo_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_static") and is_good_condition("neytral_exo_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_kat_eye") and is_good_condition("neytral_exo_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_psy") and is_good_condition("neytral_exo_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_blackwhite") and is_good_condition("neytral_exo_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("neytral_exo_gaz_outfit_m1_bast") and is_good_condition("neytral_exo_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_neytral_exo_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("neytral_exo_gaz_outfit_m1_plus",1) ~= false
end
function giveup_neytral_exo_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_bad", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_good", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_default", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_static", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_kat_eye", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_psy", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_blackwhite", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_bast", 1)
end
function giveup_neytral_exo_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("neytral_exo_gaz_outfit_m1_plus", 1)
end
function add_neytral_exo_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_bad", "in")
end
function add_neytral_exo_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_good", "in")
end
function add_neytral_exo_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_default", "in")
end
function add_neytral_exo_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_static", "in")
end
function add_neytral_exo_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_kat_eye", "in")
end
function add_neytral_exo_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_psy", "in")
end
function add_neytral_exo_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_blackwhite", "in")
end
function add_neytral_exo_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_bast", "in")
end
function add_neytral_exo_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_plus", "in")
end
function add_neytral_exo_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_badplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_goodplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_defaultplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_staticplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_psyplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_neytral_exo_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "neytral_exo_gaz_outfit_m1_bastplus", "in")
end

function goodup_bandit_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("bandit_gaz_outfit_m1") and is_good_condition("bandit_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_bandit_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_gaz_outfit_m1_bad") and is_good_condition("bandit_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_gaz_outfit_m1_plus",1) ~= false
end
function giveup_bandit_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("bandit_gaz_outfit_m1", 1)
end
function giveup_bandit_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_gaz_outfit_m1_bad", 1)
end
function giveup_bandit_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_gaz_outfit_m1_plus", 1)
end
function add_bandit_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_gaz_outfit_m1_bad", "in")
end
function add_bandit_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_gaz_outfit_m1_plus", "in")
end
function add_bandit_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_gaz_outfit_m1_badplus", "in")
end

function goodup_bandit_veteran_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("bandit_veteran_outfit_m1") and is_good_condition("bandit_veteran_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_bandit_veteran_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_veteran_outfit_m1_bad") and is_good_condition("bandit_veteran_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_veteran_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_veteran_outfit_m1_plus",1) ~= false
end
function giveup_bandit_veteran_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit_m1", 1)
end
function giveup_bandit_veteran_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit_m1_bad", 1)
end
function giveup_bandit_veteran_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_veteran_outfit_m1_plus", 1)
end
function add_bandit_veteran_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_m1_bad", "in")
end
function add_bandit_veteran_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_m1_plus", "in")
end
function add_bandit_veteran_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_veteran_outfit_m1_badplus", "in")
end

function goodup_svoboda_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1") and is_good_condition("svoboda_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_bad") and is_good_condition("svoboda_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_good") and is_good_condition("svoboda_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_default") and is_good_condition("svoboda_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_static") and is_good_condition("svoboda_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_kat_eye") and is_good_condition("svoboda_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_psy") and is_good_condition("svoboda_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_blackwhite") and is_good_condition("svoboda_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_gaz_outfit_m1_bast") and is_good_condition("svoboda_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_gaz_outfit_m1_plus",1) ~= false
end
function giveup_svoboda_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1", 1)
end
function giveup_svoboda_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_bad", 1)
end
function giveup_svoboda_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_good", 1)
end
function giveup_svoboda_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_default", 1)
end
function giveup_svoboda_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_static", 1)
end
function giveup_svoboda_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_kat_eye", 1)
end
function giveup_svoboda_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_psy", 1)
end
function giveup_svoboda_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_blackwhite", 1)
end
function giveup_svoboda_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_bast", 1)
end
function giveup_svoboda_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_gaz_outfit_m1_plus", 1)
end
function add_svoboda_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_bad", "in")
end
function add_svoboda_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_good", "in")
end
function add_svoboda_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_default", "in")
end
function add_svoboda_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_static", "in")
end
function add_svoboda_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_kat_eye", "in")
end
function add_svoboda_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_psy", "in")
end
function add_svoboda_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_blackwhite", "in")
end
function add_svoboda_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_bast", "in")
end
function add_svoboda_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_plus", "in")
end
function add_svoboda_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_badplus", "in")
end
function add_svoboda_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_goodplus", "in")
end
function add_svoboda_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_defaultplus", "in")
end
function add_svoboda_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_staticplus", "in")
end
function add_svoboda_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_svoboda_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_psyplus", "in")
end
function add_svoboda_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_svoboda_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_gaz_outfit_m1_bastplus", "in")
end

function goodup_svoboda_heavy_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1") and is_good_condition("svoboda_heavy_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_bad") and is_good_condition("svoboda_heavy_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_good") and is_good_condition("svoboda_heavy_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_default") and is_good_condition("svoboda_heavy_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_static") and is_good_condition("svoboda_heavy_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_kat_eye") and is_good_condition("svoboda_heavy_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_psy") and is_good_condition("svoboda_heavy_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_blackwhite") and is_good_condition("svoboda_heavy_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_heavy_gaz_outfit_m1_bast") and is_good_condition("svoboda_heavy_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_heavy_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_heavy_gaz_outfit_m1_plus",1) ~= false
end
function giveup_svoboda_heavy_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_bad", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_good", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_default", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_static", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_kat_eye", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_psy", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_blackwhite", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_bast", 1)
end
function giveup_svoboda_heavy_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_heavy_gaz_outfit_m1_plus", 1)
end
function add_svoboda_heavy_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_bad", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_good", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_default", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_static", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_kat_eye", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_psy", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_blackwhite", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_bast", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_plus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_badplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_goodplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_defaultplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_staticplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_psyplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_svoboda_heavy_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_heavy_gaz_outfit_m1_bastplus", "in")
end

function goodup_svoboda_yellow_exo_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1") and is_good_condition("svoboda_yellow_exo_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_bad") and is_good_condition("svoboda_yellow_exo_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_good") and is_good_condition("svoboda_yellow_exo_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_default") and is_good_condition("svoboda_yellow_exo_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_static") and is_good_condition("svoboda_yellow_exo_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_kat_eye") and is_good_condition("svoboda_yellow_exo_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_psy") and is_good_condition("svoboda_yellow_exo_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_blackwhite") and is_good_condition("svoboda_yellow_exo_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("svoboda_yellow_exo_outfit_m1_bast") and is_good_condition("svoboda_yellow_exo_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_svoboda_yellow_exo_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("svoboda_yellow_exo_outfit_m1_plus",1) ~= false
end
function giveup_svoboda_yellow_exo_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_bad", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_good", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_default", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_static", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_kat_eye", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_psy", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_blackwhite", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_bast", 1)
end
function giveup_svoboda_yellow_exo_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("svoboda_yellow_exo_outfit_m1_plus", 1)
end
function add_svoboda_yellow_exo_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_bad", "in")
end
function add_svoboda_yellow_exo_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_good", "in")
end
function add_svoboda_yellow_exo_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_default", "in")
end
function add_svoboda_yellow_exo_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_static", "in")
end
function add_svoboda_yellow_exo_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_kat_eye", "in")
end
function add_svoboda_yellow_exo_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_psy", "in")
end
function add_svoboda_yellow_exo_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_blackwhite", "in")
end
function add_svoboda_yellow_exo_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_bast", "in")
end
function add_svoboda_yellow_exo_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_plus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_badplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_goodplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_defaultplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_staticplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_kat_eyeplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_psyplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_blackwhiteplus", "in")
end
function add_svoboda_yellow_exo_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "svoboda_yellow_exo_outfit_m1_bastplus", "in")
end

function goodup_dolg_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1") and is_good_condition("dolg_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_bad") and is_good_condition("dolg_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_good") and is_good_condition("dolg_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_default") and is_good_condition("dolg_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_static") and is_good_condition("dolg_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_kat_eye") and is_good_condition("dolg_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_psy") and is_good_condition("dolg_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_blackwhite") and is_good_condition("dolg_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("dolg_gaz_outfit_m1_bast") and is_good_condition("dolg_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_dolg_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("dolg_gaz_outfit_m1_plus",1) ~= false
end
function giveup_dolg_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1", 1)
end
function giveup_dolg_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_bad", 1)
end
function giveup_dolg_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_good", 1)
end
function giveup_dolg_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_default", 1)
end
function giveup_dolg_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_static", 1)
end
function giveup_dolg_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_kat_eye", 1)
end
function giveup_dolg_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_psy", 1)
end
function giveup_dolg_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_blackwhite", 1)
end
function giveup_dolg_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_bast", 1)
end
function giveup_dolg_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("dolg_gaz_outfit_m1_plus", 1)
end
function add_dolg_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_bad", "in")
end
function add_dolg_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_good", "in")
end
function add_dolg_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_default", "in")
end
function add_dolg_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_static", "in")
end
function add_dolg_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_kat_eye", "in")
end
function add_dolg_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_psy", "in")
end
function add_dolg_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_blackwhite", "in")
end
function add_dolg_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_bast", "in")
end
function add_dolg_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_plus", "in")
end
function add_dolg_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_badplus", "in")
end
function add_dolg_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_goodplus", "in")
end
function add_dolg_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_defaultplus", "in")
end
function add_dolg_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_staticplus", "in")
end
function add_dolg_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_dolg_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_psyplus", "in")
end
function add_dolg_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_dolg_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_gaz_outfit_m1_bastplus", "in")
end

function goodup_killer_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1") and is_good_condition("killer_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_bad") and is_good_condition("killer_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_good") and is_good_condition("killer_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_default") and is_good_condition("killer_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_static") and is_good_condition("killer_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_kat_eye") and is_good_condition("killer_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_psy") and is_good_condition("killer_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_blackwhite") and is_good_condition("killer_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("killer_gaz_outfit_m1_bast") and is_good_condition("killer_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_killer_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("killer_gaz_outfit_m1_plus",1) ~= false
end
function giveup_killer_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1", 1)
end
function giveup_killer_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_bad", 1)
end
function giveup_killer_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_good", 1)
end
function giveup_killer_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_default", 1)
end
function giveup_killer_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_static", 1)
end
function giveup_killer_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_kat_eye", 1)
end
function giveup_killer_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_psy", 1)
end
function giveup_killer_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_blackwhite", 1)
end
function giveup_killer_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_bast", 1)
end
function giveup_killer_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("killer_gaz_outfit_m1_plus", 1)
end
function add_killer_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_bad", "in")
end
function add_killer_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_good", "in")
end
function add_killer_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_default", "in")
end
function add_killer_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_static", "in")
end
function add_killer_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_kat_eye", "in")
end
function add_killer_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_psy", "in")
end
function add_killer_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_blackwhite", "in")
end
function add_killer_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_bast", "in")
end
function add_killer_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_plus", "in")
end
function add_killer_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_badplus", "in")
end
function add_killer_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_goodplus", "in")
end
function add_killer_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_defaultplus", "in")
end
function add_killer_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_staticplus", "in")
end
function add_killer_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_killer_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_psyplus", "in")
end
function add_killer_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_killer_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "killer_gaz_outfit_m1_bastplus", "in")
end

function goodup_monolit_gaz_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1") and is_good_condition("monolit_gaz_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_bad") and is_good_condition("monolit_gaz_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_good") and is_good_condition("monolit_gaz_outfit_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_default") and is_good_condition("monolit_gaz_outfit_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_static") and is_good_condition("monolit_gaz_outfit_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_kat_eye") and is_good_condition("monolit_gaz_outfit_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_psy") and is_good_condition("monolit_gaz_outfit_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_blackwhite") and is_good_condition("monolit_gaz_outfit_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("monolit_gaz_outfit_m1_bast") and is_good_condition("monolit_gaz_outfit_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_monolit_gaz_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("monolit_gaz_outfit_m1_plus",1) ~= false
end
function giveup_monolit_gaz_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1", 1)
end
function giveup_monolit_gaz_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_bad", 1)
end
function giveup_monolit_gaz_outfit_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_good", 1)
end
function giveup_monolit_gaz_outfit_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_default", 1)
end
function giveup_monolit_gaz_outfit_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_static", 1)
end
function giveup_monolit_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_kat_eye", 1)
end
function giveup_monolit_gaz_outfit_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_psy", 1)
end
function giveup_monolit_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_blackwhite", 1)
end
function giveup_monolit_gaz_outfit_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_bast", 1)
end
function giveup_monolit_gaz_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("monolit_gaz_outfit_m1_plus", 1)
end
function add_monolit_gaz_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_bad", "in")
end
function add_monolit_gaz_outfit_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_good", "in")
end
function add_monolit_gaz_outfit_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_default", "in")
end
function add_monolit_gaz_outfit_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_static", "in")
end
function add_monolit_gaz_outfit_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_kat_eye", "in")
end
function add_monolit_gaz_outfit_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_psy", "in")
end
function add_monolit_gaz_outfit_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_blackwhite", "in")
end
function add_monolit_gaz_outfit_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_bast", "in")
end
function add_monolit_gaz_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_plus", "in")
end
function add_monolit_gaz_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_badplus", "in")
end
function add_monolit_gaz_outfit_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_goodplus", "in")
end
function add_monolit_gaz_outfit_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_defaultplus", "in")
end
function add_monolit_gaz_outfit_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_staticplus", "in")
end
function add_monolit_gaz_outfit_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_kat_eyeplus", "in")
end
function add_monolit_gaz_outfit_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_psyplus", "in")
end
function add_monolit_gaz_outfit_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_blackwhiteplus", "in")
end
function add_monolit_gaz_outfit_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "monolit_gaz_outfit_m1_bastplus", "in")
end

function goodup_outfit_novice_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_novice_m1") and is_good_condition("outfit_novice_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_novice_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_novice_m1_bad") and is_good_condition("outfit_novice_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_novice_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_novice_m1_plus",1) ~= false
end
function giveup_outfit_novice_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_novice_m1", 1)
end
function giveup_outfit_novice_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_novice_m1_bad", 1)
end
function giveup_outfit_novice_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_novice_m1_plus", 1)
end
function add_outfit_novice_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_novice_m1_bad", "in")
end
function add_outfit_novice_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_novice_m1_plus", "in")
end
function add_outfit_novice_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_novice_m1_badplus", "in")
end

function goodup_outfit_bandit_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_bandit_m1") and is_good_condition("outfit_bandit_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_bandit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_bandit_m1_bad") and is_good_condition("outfit_bandit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_bandit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_bandit_m1_plus",1) ~= false
end
function giveup_outfit_bandit_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_bandit_m1", 1)
end
function giveup_outfit_bandit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_bandit_m1_bad", 1)
end
function giveup_outfit_bandit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_bandit_m1_plus", 1)
end
function add_outfit_bandit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_bandit_m1_bad", "in")
end
function add_outfit_bandit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_bandit_m1_plus", "in")
end
function add_outfit_bandit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_bandit_m1_badplus", "in")
end

function goodup_bandit_master_outfit_m1(task, objective) 
	if db.actor then
		if db.actor:object("bandit_master_outfit_m1") and is_good_condition("bandit_master_outfit_m1")  then
			return true
		end
	end
	return false
end
function goodup_bandit_master_outfit_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("bandit_master_outfit_m1_bad") and is_good_condition("bandit_master_outfit_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_bandit_master_outfit_m1_plus(task, objective) 
  	return amk_utils.inventory_search("bandit_master_outfit_m1_plus",1) ~= false
end
function giveup_bandit_master_outfit_m1(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit_m1", 1)
end
function giveup_bandit_master_outfit_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit_m1_bad", 1)
end
function giveup_bandit_master_outfit_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("bandit_master_outfit_m1_plus", 1)
end
function add_bandit_master_outfit_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_m1_bad", "in")
end
function add_bandit_master_outfit_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_m1_plus", "in")
end
function add_bandit_master_outfit_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "bandit_master_outfit_m1_badplus", "in")
end

function goodup_outfit_dolg_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1") and is_good_condition("outfit_dolg_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_bad") and is_good_condition("outfit_dolg_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_good") and is_good_condition("outfit_dolg_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_default") and is_good_condition("outfit_dolg_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_static") and is_good_condition("outfit_dolg_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_kat_eye") and is_good_condition("outfit_dolg_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_psy") and is_good_condition("outfit_dolg_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_blackwhite") and is_good_condition("outfit_dolg_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_dolg_m1_bast") and is_good_condition("outfit_dolg_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_dolg_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_dolg_m1_plus",1) ~= false
end
function giveup_outfit_dolg_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1", 1)
end
function giveup_outfit_dolg_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_bad", 1)
end
function giveup_outfit_dolg_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_good", 1)
end
function giveup_outfit_dolg_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_default", 1)
end
function giveup_outfit_dolg_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_static", 1)
end
function giveup_outfit_dolg_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_kat_eye", 1)
end
function giveup_outfit_dolg_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_psy", 1)
end
function giveup_outfit_dolg_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_blackwhite", 1)
end
function giveup_outfit_dolg_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_bast", 1)
end
function giveup_outfit_dolg_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_dolg_m1_plus", 1)
end
function add_outfit_dolg_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_bad", "in")
end
function add_outfit_dolg_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_good", "in")
end
function add_outfit_dolg_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_default", "in")
end
function add_outfit_dolg_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_static", "in")
end
function add_outfit_dolg_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_kat_eye", "in")
end
function add_outfit_dolg_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_psy", "in")
end
function add_outfit_dolg_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_blackwhite", "in")
end
function add_outfit_dolg_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_bast", "in")
end
function add_outfit_dolg_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_plus", "in")
end
function add_outfit_dolg_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_badplus", "in")
end
function add_outfit_dolg_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_goodplus", "in")
end
function add_outfit_dolg_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_defaultplus", "in")
end
function add_outfit_dolg_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_staticplus", "in")
end
function add_outfit_dolg_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_kat_eyeplus", "in")
end
function add_outfit_dolg_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_psyplus", "in")
end
function add_outfit_dolg_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_blackwhiteplus", "in")
end
function add_outfit_dolg_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_dolg_m1_bastplus", "in")
end

function goodup_outfit_killer_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1") and is_good_condition("outfit_killer_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_bad") and is_good_condition("outfit_killer_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_good") and is_good_condition("outfit_killer_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_default") and is_good_condition("outfit_killer_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_static") and is_good_condition("outfit_killer_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_kat_eye") and is_good_condition("outfit_killer_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_psy") and is_good_condition("outfit_killer_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_blackwhite") and is_good_condition("outfit_killer_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_killer_m1_bast") and is_good_condition("outfit_killer_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_killer_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_killer_m1_plus",1) ~= false
end
function giveup_outfit_killer_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1", 1)
end
function giveup_outfit_killer_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_bad", 1)
end
function giveup_outfit_killer_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_good", 1)
end
function giveup_outfit_killer_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_default", 1)
end
function giveup_outfit_killer_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_static", 1)
end
function giveup_outfit_killer_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_kat_eye", 1)
end
function giveup_outfit_killer_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_psy", 1)
end
function giveup_outfit_killer_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_blackwhite", 1)
end
function giveup_outfit_killer_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_bast", 1)
end
function giveup_outfit_killer_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_killer_m1_plus", 1)
end
function add_outfit_killer_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_bad", "in")
end
function add_outfit_killer_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_good", "in")
end
function add_outfit_killer_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_default", "in")
end
function add_outfit_killer_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_static", "in")
end
function add_outfit_killer_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_kat_eye", "in")
end
function add_outfit_killer_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_psy", "in")
end
function add_outfit_killer_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_blackwhite", "in")
end
function add_outfit_killer_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_bast", "in")
end
function add_outfit_killer_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_plus", "in")
end
function add_outfit_killer_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_badplus", "in")
end
function add_outfit_killer_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_goodplus", "in")
end
function add_outfit_killer_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_defaultplus", "in")
end
function add_outfit_killer_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_staticplus", "in")
end
function add_outfit_killer_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_kat_eyeplus", "in")
end
function add_outfit_killer_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_psyplus", "in")
end
function add_outfit_killer_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_blackwhiteplus", "in")
end
function add_outfit_killer_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_killer_m1_bastplus", "in")
end

function goodup_outfit_specnaz_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1") and is_good_condition("outfit_specnaz_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_bad") and is_good_condition("outfit_specnaz_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_good") and is_good_condition("outfit_specnaz_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_default") and is_good_condition("outfit_specnaz_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_static") and is_good_condition("outfit_specnaz_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_kat_eye") and is_good_condition("outfit_specnaz_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_psy") and is_good_condition("outfit_specnaz_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_blackwhite") and is_good_condition("outfit_specnaz_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_specnaz_m1_bast") and is_good_condition("outfit_specnaz_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_specnaz_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_specnaz_m1_plus",1) ~= false
end
function giveup_outfit_specnaz_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1", 1)
end
function giveup_outfit_specnaz_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_bad", 1)
end
function giveup_outfit_specnaz_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_good", 1)
end
function giveup_outfit_specnaz_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_default", 1)
end
function giveup_outfit_specnaz_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_static", 1)
end
function giveup_outfit_specnaz_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_kat_eye", 1)
end
function giveup_outfit_specnaz_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_psy", 1)
end
function giveup_outfit_specnaz_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_blackwhite", 1)
end
function giveup_outfit_specnaz_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_bast", 1)
end
function giveup_outfit_specnaz_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_specnaz_m1_plus", 1)
end
function add_outfit_specnaz_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_bad", "in")
end
function add_outfit_specnaz_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_good", "in")
end
function add_outfit_specnaz_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_default", "in")
end
function add_outfit_specnaz_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_static", "in")
end
function add_outfit_specnaz_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_kat_eye", "in")
end
function add_outfit_specnaz_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_psy", "in")
end
function add_outfit_specnaz_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_blackwhite", "in")
end
function add_outfit_specnaz_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_bast", "in")
end
function add_outfit_specnaz_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_plus", "in")
end
function add_outfit_specnaz_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_badplus", "in")
end
function add_outfit_specnaz_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_goodplus", "in")
end
function add_outfit_specnaz_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_defaultplus", "in")
end
function add_outfit_specnaz_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_staticplus", "in")
end
function add_outfit_specnaz_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_kat_eyeplus", "in")
end
function add_outfit_specnaz_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_psyplus", "in")
end
function add_outfit_specnaz_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_blackwhiteplus", "in")
end
function add_outfit_specnaz_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_specnaz_m1_bastplus", "in")
end

function goodup_outfit_stalker_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1") and is_good_condition("outfit_stalker_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_bad") and is_good_condition("outfit_stalker_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_good") and is_good_condition("outfit_stalker_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_default") and is_good_condition("outfit_stalker_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_static") and is_good_condition("outfit_stalker_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_kat_eye") and is_good_condition("outfit_stalker_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_psy") and is_good_condition("outfit_stalker_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_blackwhite") and is_good_condition("outfit_stalker_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m1_bast") and is_good_condition("outfit_stalker_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_stalker_m1_plus",1) ~= false
end
function giveup_outfit_stalker_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1", 1)
end
function giveup_outfit_stalker_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_bad", 1)
end
function giveup_outfit_stalker_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_good", 1)
end
function giveup_outfit_stalker_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_default", 1)
end
function giveup_outfit_stalker_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_static", 1)
end
function giveup_outfit_stalker_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_kat_eye", 1)
end
function giveup_outfit_stalker_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_psy", 1)
end
function giveup_outfit_stalker_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_blackwhite", 1)
end
function giveup_outfit_stalker_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_bast", 1)
end
function giveup_outfit_stalker_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m1_plus", 1)
end
function add_outfit_stalker_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_bad", "in")
end
function add_outfit_stalker_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_good", "in")
end
function add_outfit_stalker_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_default", "in")
end
function add_outfit_stalker_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_static", "in")
end
function add_outfit_stalker_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_kat_eye", "in")
end
function add_outfit_stalker_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_psy", "in")
end
function add_outfit_stalker_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_blackwhite", "in")
end
function add_outfit_stalker_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_bast", "in")
end
function add_outfit_stalker_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_plus", "in")
end
function add_outfit_stalker_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_badplus", "in")
end
function add_outfit_stalker_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_goodplus", "in")
end
function add_outfit_stalker_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_defaultplus", "in")
end
function add_outfit_stalker_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_staticplus", "in")
end
function add_outfit_stalker_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_kat_eyeplus", "in")
end
function add_outfit_stalker_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_psyplus", "in")
end
function add_outfit_stalker_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_blackwhiteplus", "in")
end
function add_outfit_stalker_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m1_bastplus", "in")
end

function goodup_outfit_stalker_m2(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2") and is_good_condition("outfit_stalker_m2")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_bad") and is_good_condition("outfit_stalker_m2_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_good") and is_good_condition("outfit_stalker_m2_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_default") and is_good_condition("outfit_stalker_m2_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_static") and is_good_condition("outfit_stalker_m2_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_kat_eye") and is_good_condition("outfit_stalker_m2_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_psy") and is_good_condition("outfit_stalker_m2_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_blackwhite") and is_good_condition("outfit_stalker_m2_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_stalker_m2_bast") and is_good_condition("outfit_stalker_m2_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_stalker_m2_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_stalker_m2_plus",1) ~= false
end
function giveup_outfit_stalker_m2(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2", 1)
end
function giveup_outfit_stalker_m2_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_bad", 1)
end
function giveup_outfit_stalker_m2_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_good", 1)
end
function giveup_outfit_stalker_m2_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_default", 1)
end
function giveup_outfit_stalker_m2_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_static", 1)
end
function giveup_outfit_stalker_m2_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_kat_eye", 1)
end
function giveup_outfit_stalker_m2_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_psy", 1)
end
function giveup_outfit_stalker_m2_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_blackwhite", 1)
end
function giveup_outfit_stalker_m2_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_bast", 1)
end
function giveup_outfit_stalker_m2_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_stalker_m2_plus", 1)
end
function add_outfit_stalker_m2_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_bad", "in")
end
function add_outfit_stalker_m2_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_good", "in")
end
function add_outfit_stalker_m2_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_default", "in")
end
function add_outfit_stalker_m2_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_static", "in")
end
function add_outfit_stalker_m2_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_kat_eye", "in")
end
function add_outfit_stalker_m2_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_psy", "in")
end
function add_outfit_stalker_m2_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_blackwhite", "in")
end
function add_outfit_stalker_m2_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_bast", "in")
end
function add_outfit_stalker_m2_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_plus", "in")
end
function add_outfit_stalker_m2_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_badplus", "in")
end
function add_outfit_stalker_m2_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_goodplus", "in")
end
function add_outfit_stalker_m2_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_defaultplus", "in")
end
function add_outfit_stalker_m2_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_staticplus", "in")
end
function add_outfit_stalker_m2_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_kat_eyeplus", "in")
end
function add_outfit_stalker_m2_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_psyplus", "in")
end
function add_outfit_stalker_m2_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_blackwhiteplus", "in")
end
function add_outfit_stalker_m2_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_stalker_m2_bastplus", "in")
end

function goodup_stalker_outfit_m3(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3") and is_good_condition("stalker_outfit_m3")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_bad(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_bad") and is_good_condition("stalker_outfit_m3_bad")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_good(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_good") and is_good_condition("stalker_outfit_m3_good")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_default(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_default") and is_good_condition("stalker_outfit_m3_default")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_static(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_static") and is_good_condition("stalker_outfit_m3_static")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_kat_eye") and is_good_condition("stalker_outfit_m3_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_psy(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_psy") and is_good_condition("stalker_outfit_m3_psy")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_blackwhite") and is_good_condition("stalker_outfit_m3_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_bast(task, objective) 
	if db.actor then
		if db.actor:object("stalker_outfit_m3_bast") and is_good_condition("stalker_outfit_m3_bast")  then
			return true
		end
	end
	return false
end
function goodup_stalker_outfit_m3_plus(task, objective) 
  	return amk_utils.inventory_search("stalker_outfit_m3_plus",1) ~= false
end
function giveup_stalker_outfit_m3(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3", 1)
end
function giveup_stalker_outfit_m3_bad(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_bad", 1)
end
function giveup_stalker_outfit_m3_good(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_good", 1)
end
function giveup_stalker_outfit_m3_default(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_default", 1)
end
function giveup_stalker_outfit_m3_static(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_static", 1)
end
function giveup_stalker_outfit_m3_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_kat_eye", 1)
end
function giveup_stalker_outfit_m3_psy(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_psy", 1)
end
function giveup_stalker_outfit_m3_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_blackwhite", 1)
end
function giveup_stalker_outfit_m3_bast(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_bast", 1)
end
function giveup_stalker_outfit_m3_plus(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3_plus", 1)
end
function add_stalker_outfit_m3_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_bad", "in")
end
function add_stalker_outfit_m3_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_good", "in")
end
function add_stalker_outfit_m3_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_default", "in")
end
function add_stalker_outfit_m3_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_static", "in")
end
function add_stalker_outfit_m3_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_kat_eye", "in")
end
function add_stalker_outfit_m3_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_psy", "in")
end
function add_stalker_outfit_m3_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_blackwhite", "in")
end
function add_stalker_outfit_m3_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_bast", "in")
end
function add_stalker_outfit_m3_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_plus", "in")
end
function add_stalker_outfit_m3_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_badplus", "in")
end
function add_stalker_outfit_m3_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_goodplus", "in")
end
function add_stalker_outfit_m3_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_defaultplus", "in")
end
function add_stalker_outfit_m3_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_staticplus", "in")
end
function add_stalker_outfit_m3_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_kat_eyeplus", "in")
end
function add_stalker_outfit_m3_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_psyplus", "in")
end
function add_stalker_outfit_m3_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_blackwhiteplus", "in")
end
function add_stalker_outfit_m3_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "stalker_outfit_m3_bastplus", "in")
end

function goodup_outfit_svoboda_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1") and is_good_condition("outfit_svoboda_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_bad") and is_good_condition("outfit_svoboda_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_good") and is_good_condition("outfit_svoboda_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_default") and is_good_condition("outfit_svoboda_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_static") and is_good_condition("outfit_svoboda_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_kat_eye") and is_good_condition("outfit_svoboda_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_psy") and is_good_condition("outfit_svoboda_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_blackwhite") and is_good_condition("outfit_svoboda_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_svoboda_m1_bast") and is_good_condition("outfit_svoboda_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_svoboda_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_svoboda_m1_plus",1) ~= false
end
function giveup_outfit_svoboda_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1", 1)
end
function giveup_outfit_svoboda_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_bad", 1)
end
function giveup_outfit_svoboda_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_good", 1)
end
function giveup_outfit_svoboda_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_default", 1)
end
function giveup_outfit_svoboda_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_static", 1)
end
function giveup_outfit_svoboda_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_kat_eye", 1)
end
function giveup_outfit_svoboda_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_psy", 1)
end
function giveup_outfit_svoboda_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_blackwhite", 1)
end
function giveup_outfit_svoboda_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_bast", 1)
end
function giveup_outfit_svoboda_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_svoboda_m1_plus", 1)
end
function add_outfit_svoboda_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_bad", "in")
end
function add_outfit_svoboda_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_good", "in")
end
function add_outfit_svoboda_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_default", "in")
end
function add_outfit_svoboda_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_static", "in")
end
function add_outfit_svoboda_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_kat_eye", "in")
end
function add_outfit_svoboda_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_psy", "in")
end
function add_outfit_svoboda_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_blackwhite", "in")
end
function add_outfit_svoboda_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_bast", "in")
end
function add_outfit_svoboda_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_plus", "in")
end
function add_outfit_svoboda_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_badplus", "in")
end
function add_outfit_svoboda_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_goodplus", "in")
end
function add_outfit_svoboda_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_defaultplus", "in")
end
function add_outfit_svoboda_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_staticplus", "in")
end
function add_outfit_svoboda_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_kat_eyeplus", "in")
end
function add_outfit_svoboda_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_psyplus", "in")
end
function add_outfit_svoboda_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_blackwhiteplus", "in")
end
function add_outfit_svoboda_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_svoboda_m1_bastplus", "in")
end

function goodup_outfit_exo_m1(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1") and is_good_condition("outfit_exo_m1")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_bad(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_bad") and is_good_condition("outfit_exo_m1_bad")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_good(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_good") and is_good_condition("outfit_exo_m1_good")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_default(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_default") and is_good_condition("outfit_exo_m1_default")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_static(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_static") and is_good_condition("outfit_exo_m1_static")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_kat_eye(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_kat_eye") and is_good_condition("outfit_exo_m1_kat_eye")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_psy(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_psy") and is_good_condition("outfit_exo_m1_psy")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_blackwhite(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_blackwhite") and is_good_condition("outfit_exo_m1_blackwhite")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_bast(task, objective) 
	if db.actor then
		if db.actor:object("outfit_exo_m1_bast") and is_good_condition("outfit_exo_m1_bast")  then
			return true
		end
	end
	return false
end
function goodup_outfit_exo_m1_plus(task, objective) 
  	return amk_utils.inventory_search("outfit_exo_m1_plus",1) ~= false
end
function giveup_outfit_exo_m1(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1", 1)
end
function giveup_outfit_exo_m1_bad(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_bad", 1)
end
function giveup_outfit_exo_m1_good(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_good", 1)
end
function giveup_outfit_exo_m1_default(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_default", 1)
end
function giveup_outfit_exo_m1_static(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_static", 1)
end
function giveup_outfit_exo_m1_kat_eye(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_kat_eye", 1)
end
function giveup_outfit_exo_m1_psy(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_psy", 1)
end
function giveup_outfit_exo_m1_blackwhite(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_blackwhite", 1)
end
function giveup_outfit_exo_m1_bast(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_bast", 1)
end
function giveup_outfit_exo_m1_plus(first_speaker, second_speaker)
	sak.out_item_namber("outfit_exo_m1_plus", 1)
end
function add_outfit_exo_m1_bad(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_bad", "in")
end
function add_outfit_exo_m1_good(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_good", "in")
end
function add_outfit_exo_m1_default(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_default", "in")
end
function add_outfit_exo_m1_static(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_static", "in")
end
function add_outfit_exo_m1_kat_eye(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_kat_eye", "in")
end
function add_outfit_exo_m1_psy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_psy", "in")
end
function add_outfit_exo_m1_blackwhite(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_blackwhite", "in")
end
function add_outfit_exo_m1_bast(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_bast", "in")
end
function add_outfit_exo_m1_plus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_plus", "in")
end
function add_outfit_exo_m1_badplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_badplus", "in")
end
function add_outfit_exo_m1_goodplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_goodplus", "in")
end
function add_outfit_exo_m1_defaultplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_defaultplus", "in")
end
function add_outfit_exo_m1_staticplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_staticplus", "in")
end
function add_outfit_exo_m1_kat_eyeplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_kat_eyeplus", "in")
end
function add_outfit_exo_m1_psyplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_psyplus", "in")
end
function add_outfit_exo_m1_blackwhiteplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_blackwhiteplus", "in")
end
function add_outfit_exo_m1_bastplus(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "outfit_exo_m1_bastplus", "in")
end


 -- Money

function have_money_5000(actor,npc)
	return actor:money() > 5000
end
function give_money_5000(actor, npc)	
	dialogs.relocate_money(actor, 5000, "out")
end
function have_money_10000(actor,npc)
	return actor:money() > 10000
end
function give_money_10000(actor, npc)	
	dialogs.relocate_money(actor, 10000, "out")
end
function have_money_15000(actor,npc)
	return actor:money() > 15000
end
function give_money_15000(actor, npc)	
	dialogs.relocate_money(actor, 15000, "out")
end
function have_money_20000(actor,npc)
	return actor:money() > 20000
end
function give_money_20000(actor, npc)	
	dialogs.relocate_money(actor, 20000, "out")
end
function have_money_25000(actor,npc)
	return actor:money() > 25000
end
function give_money_25000(actor, npc)	
	dialogs.relocate_money(actor, 25000, "out")
end
function have_money_30000(actor,npc)
	return actor:money() > 30000
end
function give_money_30000(actor, npc)	
	dialogs.relocate_money(actor, 30000, "out")
end
function have_money_35000(actor,npc)
	return actor:money() > 35000
end
function give_money_35000(actor, npc)	
	dialogs.relocate_money(actor, 35000, "out")
end
function have_money_40000(actor,npc)
	return actor:money() > 40000
end
function give_money_40000(actor, npc)	
	dialogs.relocate_money(actor, 40000, "out")
end
function have_money_45000(actor,npc)
	return actor:money() > 45000
end
function give_money_45000(actor, npc)	
	dialogs.relocate_money(actor, 45000, "out")
end
function have_money_50000(actor,npc)
	return actor:money() > 50000
end
function give_money_50000(actor, npc)	
	dialogs.relocate_money(actor, 50000, "out")
end
function have_money_55000(actor,npc)
	return actor:money() > 55000
end
function give_money_55000(actor, npc)	
	dialogs.relocate_money(actor, 55000, "out")
end
function have_money_60000(actor,npc)
	return actor:money() > 60000
end
function give_money_60000(actor, npc)	
	dialogs.relocate_money(actor, 60000, "out")
end
function have_money_65000(actor,npc)
	return actor:money() > 65000
end
function give_money_65000(actor, npc)	
	dialogs.relocate_money(actor, 65000, "out")
end
function have_money_70000(actor,npc)
	return actor:money() > 70000
end
function give_money_70000(actor, npc)	
	dialogs.relocate_money(actor, 70000, "out")
end
function have_money_75000(actor,npc)
	return actor:money() > 75000
end
function give_money_75000(actor, npc)	
	dialogs.relocate_money(actor, 75000, "out")
end
function have_money_80000(actor,npc)
	return actor:money() > 80000
end
function give_money_80000(actor, npc)	
	dialogs.relocate_money(actor, 80000, "out")
end
function have_money_85000(actor,npc)
	return actor:money() > 85000
end
function give_money_85000(actor, npc)	
	dialogs.relocate_money(actor, 85000, "out")
end
function have_money_90000(actor,npc)
	return actor:money() > 90000
end
function give_money_90000(actor, npc)	
	dialogs.relocate_money(actor, 90000, "out")
end
function have_money_95000(actor,npc)
	return actor:money() > 95000
end
function give_money_95000(actor, npc)	
	dialogs.relocate_money(actor, 95000, "out")
end
function have_money_100000(actor,npc)
	return actor:money() > 100000
end
function give_money_100000(actor, npc)	
	dialogs.relocate_money(actor, 100000, "out")
end
function have_money_150000(actor,npc)
	return actor:money() > 150000
end
function give_money_150000(actor, npc)	
	dialogs.relocate_money(actor, 150000, "out")
end
function have_money_200000(actor,npc)
	return actor:money() > 200000
end
function give_money_200000(actor, npc)	
	dialogs.relocate_money(actor, 200000, "out")
end
function have_money_250000(actor,npc)
	return actor:money() > 250000
end
function give_money_250000(actor, npc)	
	dialogs.relocate_money(actor, 250000, "out")
end
function have_money_300000(actor,npc)
	return actor:money() > 300000
end
function give_money_300000(actor, npc)	
	dialogs.relocate_money(actor, 300000, "out")
end

-- Arts

function give_af_armor_1(first_speaker, second_speaker)
	sak.out_item_namber("af_armor_1", 1)
end
function have_af_armor_1()
	return amk_utils.inventory_search("af_armor_1",1) ~= false
end
function give_af_armor_2(first_speaker, second_speaker)
	sak.out_item_namber("af_armor_2", 1)
end
function have_af_armor_2()
	return amk_utils.inventory_search("af_armor_2",1) ~= false
end
function give_af_armor_3(first_speaker, second_speaker)
	sak.out_item_namber("af_armor_3", 1)
end
function have_af_armor_3()
	return amk_utils.inventory_search("af_armor_3",1) ~= false
end
function give_af_armor_4(first_speaker, second_speaker)
	sak.out_item_namber("af_armor_4", 1)
end
function have_af_armor_4()
	return amk_utils.inventory_search("af_armor_4",1) ~= false
end
