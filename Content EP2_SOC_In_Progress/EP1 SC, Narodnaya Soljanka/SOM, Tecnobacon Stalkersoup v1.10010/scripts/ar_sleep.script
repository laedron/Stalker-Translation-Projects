-- TB3D 1.0.9.9.7.7 db calls
function my_ver() return "1.0.9.9.7.7" end
-- Module Sleep $DreamMod
-- --------------------

class "ar_sleep" (cse_alife_creature_actor)

function ar_sleep:__init(actor, storage)
	self.actor = actor
	self.st = storage
end

function ar_sleep:reset_scheme()
	local st = xr_logic.assign_storage_and_bind(actor, ini, scheme, section)
	--st.logic = xr_logic.cfg_get_switch_conditions(actor, section, npc)	
end

function ar_sleep:update()
	if TB3D_Modders.Global_Debug then TB3D_Services.packet_alert("ar sleep: update["..game.get_game_time():timeToString(game.CTime.TimeToMilisecs).."]") end
	local ini = ini_file ("scripts\\actorsleep.ltx")
	if db.storage[db.actor:id()].active_section ~= death then
		_G[db.schemes["ar_sleep"]].set_scheme(self.actor, ini, "ar_sleep", death)
		db.set_my_section(db.actor, death)
		db.set_my_scheme(db.actor, "ar_sleep")
	end
	if TB3D_Modders.die_in_sleep == true then
		local cond = xr_logic.cfg_get_condlist(ini, "death", "on_info", self.actor)
		xr_logic.pick_section_from_condlist(self.actor, self.actor, cond.condlist)
	end
	if TB3D_Modders.Global_Debug then TB3D_Services.packet_alert("ar sleep: update end") end
end

function ar_sleep:death_callback(victim, who)
	if TB3D_Modders.die_in_sleep == true then
		cse_alife_creature_actor.on_death(self, -1)
		sleep_manager.stopper()
	end
end
-------------------------------------------------------------------------------
function add_to_binder(actor, ini, scheme, section, storage)
	local new_action = ar_sleep(actor, storage)
	-- Register all actions, in which the method will be called update()
	xr_logic.subscribe_action_for_events(actor, storage, new_action)
end

function set_scheme(actor, ini, scheme, section)
	local st = xr_logic.assign_storage_and_bind(actor, ini, scheme, section)
	--st.logic = xr_logic.cfg_get_switch_conditions(actor, section, npc)
	db.set_my_scheme(db.actor, "ar_sleep")
	--xr_death.set_death(actor, ini, scheme, death)
end

function disable_scheme()
	db.set_pstor(db.actor, "ar_sleep", nil)
	db.set_my_section(db.actor, nil)
	db.set_my_scheme(db.actor, nil)
end
------------------------------------------------------------------------------- 