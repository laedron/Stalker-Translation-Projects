--TB3D 1.1.0.0.0.5 cmtd mylog out, acc. removed in 80
function my_ver() return "1.1.0.0.0.5" end
-- initialization
class "dots" (CUIScriptWnd)

function dots:__init(owner,objid) super()
	self.targt = objid
	self.owner = owner
	self:InitControls()
	self:InitCallBacks()
end

function dots:__finalize() end

function dots:InitControls()
	self:SetWndRect(Frect():set(0,0,1024,768))
	self:Enable(true)
	-- file descriptor of our elements
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_dots_wnd.xml")
	self.dialog					= xml:InitStatic("main_dialog:dialog", self)
	xml:InitStatic				("main_dialog:capt", self.dialog)
	xml:InitStatic				("main_dialog:msg", self.dialog)
	-- button
	self:Register(xml:Init3tButton("main_dialog:btn_1", self.dialog),"btn_1")
	self:Register(xml:Init3tButton("main_dialog:btn_quit", self.dialog),"btn_quit")
	self:Register(xml:InitEditBox("main_dialog:edit_box", 	self.dialog), "edit_box")
end

function dots:InitCallBacks()
	-- then interactive elements with a certain action is performed a given f-Ia
	self:AddCallback("btn_1", ui_events.BUTTON_CLICKED, self.dots1, self)
	self:AddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self)
end

function dots:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
-- to hang out Esc
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		end
		if dik == DIK_keys.DIK_RETURN then
			self:dots1()
		end
	end
	return true
end

function dots:dots1()
	local edit_box		= self:GetEditBox("edit_box")
	--gps_habar.mylog("Enter Location:")
	amk.add_spot_on_map(self.targt, "red_location", edit_box:GetText())
	self:on_quit()
end

function dots:on_quit()
	self:GetHolder():start_stop_menu (self,true)
end


