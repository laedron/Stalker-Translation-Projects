--TB3D 1.0.9.9.2 added my_ver, total re-write
function my_ver() return "1.0.9.9.2" end
-------------------------------------------------------------------------------------------------------
-- game statistics written to log if TB3D_Modders.log_game_stats == true 
-------------------------------------------------------------------------------------------------------

------can be used for other alife----------------------------------------------------
function update(delta, actor, time)
	local a = actor:position()
	local vid = actor:level_vertex_id()
	local gvid = actor:game_vertex_id()
	local text = string.format("pos[%.3f,%.3f,%.3f,%d,%d]",a.x,a.y,a.z,vid,gvid)
	TB3D_Services.packet_alert("game stats: actor["..utils.to_str(actor:name()).."] "..text.." time["..utils.to_str(time).."] health["..utils.to_str(actor.health).."] rad["..utils.to_str(actor.radiation).."] hunger["..utils.to_str(actor.satiety).."]")
	get_console():execute("stat_memory")
end

---------following are actor only-------------------------------------------------------------------------------------

function update_task(id_task, subtask, id_state, actor)
	local time = game.get_game_time():timeToString(game.CTime.TimeToSeconds) 
    local state = ""
	if subtask == 0 then
		if id_state == task.fail then
			state = "fail"
		elseif id_state == task.completed then
			state = "complete"
		else
			state = "new"
		end
	else
		state = "update"
	end
	TB3D_Services.packet_alert("game stats: task["..utils.to_str(id_task).."] sub["..utils.to_str(subtask).."] state["..utils.to_str(state).."] at["..utils.to_str(time).."]")
end

function update_take_item(object, actor)
	local time = game.get_game_time():timeToString(game.CTime.TimeToSeconds) 
	TB3D_Services.packet_alert("game stats: take["..utils.to_str(object:name()).."]")
end

function update_drop_item(object, actor)
	local time = game.get_game_time():timeToString(game.CTime.TimeToSeconds) 
	TB3D_Services.packet_alert("game stats: drop["..utils.to_str(object:name()).."]")
end

function money_trade_update(money_i)
	local time = game.get_game_time():timeToString(game.CTime.TimeToSeconds) 
	TB3D_Services.packet_alert("game stats: money trade["..utils.to_str(money_i).."] total["..utils.to_str(db.actor:money()).."]")
end

function money_quest_update(money_i)
	local time = game.get_game_time():timeToString(game.CTime.TimeToSeconds) 
	TB3D_Services.packet_alert("game stats: money quest["..utils.to_str(money_i).."] total["..utils.to_str(db.actor:money()).."]")
end

