--TB3D 1.1.0.0.1.0, new rep system, sim_getNpcType, get_monster_spot, pda_is_blocked, "NIL" to "nil", debug, addKillCount
function my_ver() return "1.1.0.0.1.0" end

local string_find = string.find

local killCountProps = {						--rank increase per npc
	neutral_novice = 1, 	neutral_experienced = 2, 	neutral_veteran = 3, 	neutral_master = 4,
	neutral_900 = 4,
	monolith_novice = 1, 	monolith_experienced = 2, 	monolith_veteran = 3, 	monolith_master = 4,
	military_novice = 1, 	military_experienced = 2, 	military_veteran = 3, 	military_master = 4,
	killer_novice = 1, 	killer_experienced = 2, 	killer_veteran = 3, 	killer_master = 4,
	ecolog_novice = 1, 	ecolog_experienced = 2, 	ecolog_veteran = 3, 	ecolog_master = 4,
	dolg_novice = 1, 	dolg_experienced = 2, 		dolg_veteran = 3, 	dolg_master = 4,
	freedom_novice = 1, 	freedom_experienced = 2, 	freedom_veteran = 3, 	freedom_master = 4,
	bandit_novice = 1, 	bandit_experienced = 2, 	bandit_veteran = 3, 	bandit_master = 4,
	zombied_novice = 1, 	zombied_experienced = 2, 	zombied_veteran = 3, 	zombied_master = 4,
	sniper_novice = 1, 	sniper_experienced = 2, 	sniper_veteran = 3, 	sniper_master = 4,
	green_novice = 1, 	green_experienced = 2, 	    green_veteran = 3, 	    green_master = 4,
	nebo_novice = 1, 	  nebo_experienced = 2, 	 nebo_veteran = 3, 	      nebo_master = 4,
	lastday_novice = 1, 	 lastday_experienced = 2, 	lastday_veteran = 3, 	 lastday_master = 4,
	fotoman_novice = 1, 	 fotoman_experienced = 2, 	fotoman_veteran = 3, 	 fotoman_master = 4,
	tushkano_weak = 1,
    rat_weak = 1,           rat_normal = 2,         rat_strong = 3,
	flesh_weak = 1, 	flesh_normal = 2, 	flesh_strong = 3,
	boar_weak = 1, 		boar_normal = 2, 	boar_strong = 3,
	cat_weak = 1,
	burer_weak = 1,         burer_normal = 2,       burer_strong = 3,
	fracture_weak = 1,      fracture_normal = 2,    fracture_strong = 3,
	chimera_weak = 1,       chimera_normal = 2,     chimera_strong = 3,
	zombie_weak = 1,        zombie_normal = 2,      zombie_strong = 3,
	dog_weak = 1, 		dog_normal = 2, 	dog_strong = 3,
	pseudodog_weak = 1, 	pseudodog_normal = 2, 	pseudodog_strong = 3,
	psy_dog_weak = 1, 	psy_dog_normal = 2, 	psy_dog_strong = 3,
	snork_weak = 2, 	snork_normal = 3, 	snork_strong = 4,
	poltergeist_weak = 2,
	pseudo_gigant_weak = 4,
	controller_weak = 4,
	bloodsucker_weak = 1, 	bloodsucker_normal = 2, bloodsucker_strong = 3
}

local sect_alias = {	
	tushkano_normal = "tushkano_weak",
	tushkano_strong = "tushkano_weak",
	burer_normal = "burer_weak",
	burer_strong = "burer_weak",
	fracture_normal = "fracture_weak",
	fracture_strong = "fracture_weak",
	cat_normal = "cat_weak",
	cat_strong = "cat_weak",
	chimera_normal = "fracture_weak",
	chimera_strong = "fracture_weak",
	poltergeist_normal = "poltergeist_weak",
	poltergeist_strong = "poltergeist_weak",
	pseudo_gigant_normal = "pseudo_gigant_weak",
	pseudo_gigant_strong = "pseudo_gigant_weak",
	controller_normal = "controller_weak",
	controller_strong = "controller_weak",
	--[[ -- aliases are not needed
	psy_dog_weak = "psy_dog",
	psy_dog_normal = "psy_dog",
	psy_dog_strong = "psy_dog", ]]--
	zombie_trup = "zombie_weak",
	zombie_trup2 = "zombie_weak",
	rat_weak = "rat_weak",
	rat_normal = "rat_normal",
	rat_strong = "rat_normal",
	fracture_normal = "fracture_normal",
	fracture_strong = "fracture_strong",
	tb3dm_snork_jumper = "snork_strong"

}

monster_classes = {
			[clsid.tushkano_s    ] = "tushkano",
			[clsid.flesh_s       ] = "flesh",
			[clsid.boar_s        ] = "boar",
			[clsid.cat_s         ] = "cat",
			[clsid.zombie_s      ] = "zombie",
			[clsid.burer_s       ] = "burer",
			[clsid.fracture_s    ] = "fracture",
			[clsid.chimera_s     ] = "chimera",
			[clsid.dog_s         ] = "dog",
			[clsid.pseudodog_s   ] = "pseudodog",
			[clsid.psy_dog_s     ] = "psy_dog",
			[clsid.psy_dog_phantom_s] = "psy_dog_phantom",
			[clsid.snork_s       ] = "snork",
			[clsid.poltergeist_s ] = "poltergeist",
			[clsid.gigant_s      ] = "pseudo_gigant",
			[clsid.controller_s  ] = "controller",
			[clsid.bloodsucker_s ] = "bloodsucker"--,
			--[clsid.werewolf_s 	 ] = "werewolf",
			--[clsid.bibliotekar_s ] = "bibliotekar"
		}		


function addKillCount(victim)
	if (victim) then
		--TB3D_Services.packet_alert("xr statistic: addKillCount["..victim:name().."]")
		local props, sect = getNpcType(victim)
		if (props == nil or sect == nil) then return end
		local sect_name
		if sect_alias[sect] ~= nil then
			sect_name = sect_alias[sect]
		else
			sect_name = sect
		end
		if killCountProps[sect_name] == nil then
			if TB3D_Modders.show_tables then show_tables(sect_alias, nil, "xr stats") end
			if TB3D_Modders.use_abort_message == true then TB3D_Services.abort_alert("Statistics: -ERROR- required section ["..tostring(sect_name).."] not present, based ["..tostring(sect).."]!!!!") end
		else
			if props == "monsterkills" then
				actor_stats.add_points(props, sect_name, 1, 1)	--110010, first digit is the x1 column and next is the additive column (error condition is stats uses 'x1 X additive' which produces a total of kills squared)
			else	--stalkerkills
				actor_stats.add_points(props, sect_name, 1, 1)	--110010, first digit is the x1 column and next is the additive column (error condition is stats uses 'x1 X additive' which produces a total of kills squared)
			end
			--TB3D_Services.packet_alert("xr statistic: addKillCount props["..utils.to_str(props).."] sect["..utils.to_str(sect).."] sect name["..utils.to_str(sect_name).."] add rank["..killCountProps[sect_name].."]")
			TB3D_Services.change_rank(db.actor, killCountProps[sect_name])
		end
	end
end

local communityByCommunity = {
	["monolith"] = "monolith",
	["military"] = "military",
	["killer"] = "killer",
	["ecolog"] = "ecolog",
	["dolg"] = "dolg",
	["freedom"] = "freedom",
	["bandit"] = "bandit",
	["green"] = "green",
	["sniper"] = "sniper",
	["zombied"] = "zombied",
	["nebo"] = "nebo",
	["lastday"] = "lastday"
	--["tb3dm_mon_regular"] = "monolith",
	--["tb3dm_mon_monster"] = "monolith",
	--["tb3dm_mon_robot"] = "monolith",
	--["tb3dm_mon_nauch"] = "monolith",
	--["tb3dm_mon_regular"] = "monolith"
}

function getNpcType(npc)
	--TB3D_Services.abort_alert("Statistic: getNPCType["..npc:name().."]")
	if (npc) and (npc.clsid) then
		if IAmAStalker[npc:clsid()] then
			local community = communityByCommunity[npc:character_community()]
			if not community then community = "neutral" end
			local rank = ranks.get_obj_rank_name(npc)
			return "stalkerkills", community.."_"..rank
		else
			local community = monster_classes[npc:clsid()]
			if community ~= nil and community ~= "nil" then				--109995
				local rank = ranks.get_obj_rank_name(npc)
				return "monsterkills", community.."_"..rank
			end
		end
	end
	--if TB3D_Modders.use_abort_message == true then TB3D_Services.abort_alert("Statistic ERROR: cannot find monstr class for "..npc:name()) end
	return nil,nil
end

function sim_getNpcType(npc)
	--TB3D_Services.abort_alert("Statistic: sim_getNPCType["..npc:name().."]")
	if (npc) and (npc.clsid) then
		local cls = npc:clsid()
		if cls == clsid.script_stalker then
			local community = npc:community()
			local rank = ranks.get_obj_rank_name(npc)
			return community, rank
		else
			local community = monster_classes[cls]
			if community == nil then community = "chimera" end			--probably a werewolf
			local rank = ranks.get_obj_rank_name(npc)
			return community, rank
		end
	end
	--if TB3D_Modders.use_abort_message == true then TB3D_Services.abort_alert("Statistic ERROR: cannot find monstr class for clsid["..get_clsid(npc).."]") end
	return nil,nil
end

function get_monster_spot(obj)
	local community = nil
	if TB3D_Services.pda_is_blocked() == false then			--109981
		local cls
		local obj_name
		if obj.name then obj_name = obj:name() else obj_name = "NIL" end
		if obj.clsid then
			 cls = obj:clsid()
		elseif obj_name ~= "NIL" then
			cls = TB3D_Population_Control.get_clsid(obj_name)										--clsid not always available so use name
		end
		if cls then
			--TB3D_Services.packet_alert("xr statistic: get monster community["..utils.to_str(obj:name()).."]["..utils.to_str(cls).."]")
			if cls == clsid.gigant_s then community = "pseudo_gigant"
				elseif cls == clsid.burer_s then community = "burer"
				elseif cls == clsid.chimera_s then
					if string_find(obj_name, "werewolf") then community = "werewolf" else community = "chimera" end
				--elseif cls == clsid.werewolf_s then community = "werewolf"
				elseif cls == clsid.controller_s then community = "controller"
				elseif cls == clsid.bloodsucker_s then community = "bloodsucker"
				elseif cls == clsid.fracture_s then
					if string_find(obj_name, "bibliotekar") then community = "bibliotekar" else community = "fracture" end
				--elseif cls == clsid.bibliotekar_s then community = "bibliotekar"
			end
		end
	end
	return community
end