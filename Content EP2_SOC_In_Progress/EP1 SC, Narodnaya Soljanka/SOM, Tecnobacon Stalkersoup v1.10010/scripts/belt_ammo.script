--<!-- TB3D 1.0.9.9.1 new in 134   ammo belt optional, flag in TB3D_Modders.script -->
function my_ver() return "1.0.9.9.1" end
-- Maude "The cartridges on the belt"
-- Author - Kolmogor
-- Last update by Charsi - 26.03.11 - Added perepakovschik own rounds in the inventory and a human being connected to the script, "Patrons at the waist"

-- Cartridges that are hung on the belt, and the rest are used as before
local ammo_types = {
	["ammo_9x18_fmj"] = true,
	["ammo_9x18_pbp"] = true,
	["ammo_9x18_pmm"] = true,
	["ammo_9x19_pbp"] = true,
	["ammo_9x19_fmj"] = true,
	["ammo_5.45x39_ap"] = true,
	["ammo_5.45x39_fmj"] = true,
	["ammo_5.56x45_ap"] = true,
	["ammo_5.56x45_ss190"] = true,
	["ammo_5.7x28_fmj"] = true,
	["ammo_5.7x28_ap"] = true,
	["ammo_7.62x54_ap"] = true,
	["ammo_7.62x54_7h14"] = true,
	["ammo_7.62x54_7h1"] = true,
	["ammo_9x39_sp5"] = true,
	["ammo_9x39_ap"] = true,
	["ammo_9x39_pab9"] = true,
	["ammo_gauss"] = true,
	["ammo_11.43x23_fmj"] = true,
	["ammo_11.43x23_hydro"] = true,
	["ammo_12x76_dart"] = true,
	["ammo_12x76_zhekan"] = true,
	["ammo_12x70_buck"] = true,
	["ammo_og-7b"] = true,
	["ammo_vog-25p"] = true,
	["ammo_vog-25"] = true,
    ["ammo_m209"] = true,
    ["ammo_5.45x39_izomorf"] = true,
    ["ammo_7.62x54_izomorf"] = true,
    ["ammo_9x39_izomorf"] = true,
    ["ammo_7.62x54r"] = true,
	["ammo_7.62x51_fmj"] = true,
	["ammo_7.62x51_ap"] = true,
    ["ammo_5.7x28_ss190"] = true,
    ["ammo_super_gauss"] = true,
    ["ammo_zhekan_izomorf"] = true,
    ["ammo_7.62x39_fmj"] = true,
    ["ammo_7.62x39_ap"] = true,
    ["ammo_7.62x25_p"] = true,
    ["ammo_7.62x25_ps"] = true,
    ["ammo_arbolt"] = true,
    ["ammo_samopal"] = true,
    ["ammo_igl"] = true,
	["ammo_igl_new"] = true,
    ["ammo_7.62x51box"] = true,
    ["ammo_12.7x108"] = true,
	["ammo_minigun"] = true,
    -- DMX MOD
    ["ammo_8.6x70"] = true,
    ["ammo_balon_rg10"] = true,
    ["ammo_50_bmg"] = true,
    ["ammo_50ae"] = true,
    ["ammo_16x70_kart"] = true,
    ["ammo_16x70_zhekan"] = true,
    ["ammo_16x70_buck"] = true,
    ["ammo_m209_smoke"] = true,
    ["ammo_super_arbolt"] = true,
    ["ammo_14.5x114_ap"] = true}

local ammo_fake_types = {}
local need_convert = false
local need_init = true
local need_update = false
local before_update = true

function on_update()
	if before_update then
		before_update = false
		need_convert = true		
	end
	if not need_update then return end
	if not inventory.belt_status then return end
	local sim = alife()
	local t = {}
	local sect
	db.actor:iterate_inventory(
		function(npc, item)
            sect=item:section() .. "_fake"
			if ammo_fake_types[sect] and inventory.belt_id[item:id()] == nil then			
				t[sect] = get_ammo_size(item) + (t[sect] or 0)
				sim:release(sim:object(item:id()), true)
			end
		end
		, db.actor)
	for sec, num in pairs(t) do
		spawn_ammo_in_inv(sec, num)
	end	
	need_update = false
end

-- Repackage and even during the search of a corpse or a hiding place
function on_info(info_id)
    if info_id == "ui_trade" or info_id == "ui_car_body" then
        on_inventory_open()
    elseif info_id == "ui_trade_hide" or info_id == "ui_car_body_hide" then
        on_inventory_close()
    end
end

function on_inventory_open()
	need_convert = false
	local t = {}
	local sim = alife()
	local sect
	db.actor:iterate_inventory(
		function(npc, item)
            sect=item:section()
			if ammo_fake_types[sect] then
				t[sect] = get_ammo_size(item) + (t[sect] or 0)
				sim:release(sim:object(item:id()), true)
			end
		end
		, db.actor)
	for s, num in pairs(t) do
		spawn_ammo_in_inv(string.sub(s,1,-6), num)
	end
end

function on_inventory_close()
	need_convert = true
	need_update = true
end

function on_item_take(item)
	if need_init then init() end	
	local section = item:section()
	if ammo_types[section] and need_convert then	
		local cnt = get_ammo_size(item)
		if cnt > 0 then
			local sim = alife()
			sim:release(sim:object(item:id()), true)
			spawn_ammo_in_inv(section.."_fake", cnt)
		end
	end
end

function init()
	for k, v in pairs(ammo_types) do
		ammo_fake_types[k.."_fake"] = v
	end
	need_init = false
end

function get_ammo_size(obj)
	local se_obj = alife():object(obj:id())
	if se_obj == nil then return 0 end	
	local packet = net_packet()
	cse_alife_item_ammo.STATE_Write(se_obj, packet)
	packet:r_seek(packet:w_tell() - 2)
	return packet:r_u16()
end

function spawn_ammo_in_inv(spawn_item,number,npc)
	if npc==nil then 
		npc=db.actor 
	end
	if number > 0 then
		return se_respawn.create_ammo(spawn_item, 
			npc:position(),
			npc:level_vertex_id(),  
			npc:game_vertex_id(),
			npc:id(),
			number)
	end
end
