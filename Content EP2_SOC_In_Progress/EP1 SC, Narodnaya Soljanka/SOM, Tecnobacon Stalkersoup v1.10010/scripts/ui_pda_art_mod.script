--TB3D 1.0.9.9.7.5, translate
function my_ver() return "1.0.9.9.7.5" end
--------------------------------------------------------------------------------------------
-----------Psi-rays for Alt_sys_artmod(by Psi-rays & RamSoft)v.2.0----------------------------
----------------------------------------------------------------------------------------------
local translate = game.translate_string

class "pdaam" (CUIScriptWnd)

function pdaam:__init(owner) super()
	self.owner = owner
	self:InitControls()
	self:InitCallBacks()
end

function pdaam:__finalize() end

function pdaam:InitControls()
	self:Init(50,50,550,450)
	self:SetAutoDelete(true)		--109975

	local xml = CScriptXmlInit()
	xml:ParseFile("ui_pdaam_wnd.xml")

	xml:InitStatic("back_video", self)

	xml:InitStatic("background", self)

	local anomaly = amk.load_variable("is_anom",nil)
	amk.del_variable("is_anom")
	
	-- button
	
	self:Register(xml:Init3tButton("strs", self),"strs")
	self:Register(xml:Init3tButton("caption", self),"caption")
	self:Register(xml:Init3tButton("cap_aut", self),"cap_aut")
	if anomaly~=nil then
		if string.find(anomaly,"_mosquito_bald")~=nil then		 								--Funnel
			self:Register(xml:Init3tButton("caption_mb", self),"caption_mb")
			if has_alife_info("info_artmod_ameba_slug_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_1", self),"btn_mb_1")
			end
			if has_alife_info("info_artmod_ameba_slime_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_2", self),"btn_mb_2")
			end
			if has_alife_info("info_artmod_electra_flash_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_3", self),"btn_mb_3")
			end	
			if has_alife_info("info_artmod_night_star_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_4", self),"btn_mb_4")
			end
			if has_alife_info("info_artmod_soul_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_5", self),"btn_mb_5")
			end	
			if has_alife_info("info_artmod_dummy_pellicle_gravi_zone")  then
				self:Register(xml:Init3tButton("btn_mb_6", self),"btn_mb_6")
			end
		--	==================================================================
		elseif string.find(anomaly,"_zharka")~=nil then		 								--HOT
			self:Register(xml:Init3tButton("caption_zrk", self),"caption_zrk")
			if has_alife_info("info_artmod_electra_flash_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_1", self),"btn_zrk_1")
			end
			if has_alife_info("info_artmod_ameba_slime_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_2", self),"btn_zrk_2")
			end
			if has_alife_info("info_artmod_gravi_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_3", self),"btn_zrk_3")
			end	
			if has_alife_info("info_artmod_night_star_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_4", self),"btn_zrk_4")
			end
			if has_alife_info("info_artmod_electra_moonlight_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_5", self),"btn_zrk_5")
			end	
			if has_alife_info("info_artmod_dummy_battery_zharka")  then
				self:Register(xml:Init3tButton("btn_zrk_6", self),"btn_zrk_6")
			end
			self:Register(xml:Init3tButton("btn_zrk_7", self),"btn_zrk_7")
			--	==================================================================
		elseif string.find(anomaly,"_galant")~=nil then										 --ELECTRA
			self:Register(xml:Init3tButton("caption_gal", self),"caption_gal")
			if has_alife_info("info_artmod_fireball_galant")  then
				self:Register(xml:Init3tButton("btn_gal_1", self),"btn_gal_1")
			end
			if has_alife_info("info_artmod_cristall_flower_galant")  then
				self:Register(xml:Init3tButton("btn_gal_2", self),"btn_gal_2")
			end
			if has_alife_info("info_artmod_ameba_mica_galant")  then
				self:Register(xml:Init3tButton("btn_gal_3", self),"btn_gal_3")
			end	
			if has_alife_info("info_artmod_electra_moonlight_galant")  then
				self:Register(xml:Init3tButton("btn_gal_4", self),"btn_gal_4")
			end
			if has_alife_info("info_artmod_gold_fish_galant")  then
				self:Register(xml:Init3tButton("btn_gal_5", self),"btn_gal_5")
			end	
			if has_alife_info("info_artmod_dummy_spring_galant")  then
				self:Register(xml:Init3tButton("btn_gal_6", self),"btn_gal_6")
			end
			if has_alife_info("info_artmod_medusa_galant")  then
				self:Register(xml:Init3tButton("btn_gal_7", self),"btn_gal_7")
			end
			--	==================================================================
		elseif string.find(anomaly,"_buzz")~=nil or string.find(anomaly,"_sakbuzz")~=nil then		 --Aspic
			self:Register(xml:Init3tButton("caption_buzz", self),"caption_buzz")
			
			if has_alife_info("info_artmod_rusty_kristall_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_1", self),"btn_buzz_1")
			end
			if has_alife_info("info_artmod_rusty_thorn_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_2", self),"btn_buzz_2")
			end
			if has_alife_info("info_artmod_fireball_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_3", self),"btn_buzz_3")
			end	
			if has_alife_info("info_artmod_cristall_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_4", self),"btn_buzz_4")
			end
			if has_alife_info("info_artmod_night_star_buzz")  then --- zolotaya rybka
				self:Register(xml:Init3tButton("btn_buzz_5", self),"btn_buzz_5")
			end	
			if has_alife_info("info_artmod_fuzz_kolobok_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_6", self),"btn_buzz_6")
			end
			if has_alife_info("info_artmod_vyvert_buzz")  then
				self:Register(xml:Init3tButton("btn_buzz_7", self),"btn_buzz_7")
			end
			if has_alife_info("info_amk_recipt_simbion")  then
				self:Register(xml:Init3tButton("btn_buzz_8", self),"btn_buzz_8")
			end
		--	==================================================================
		elseif string.find(anomaly,"_mincer")~=nil then		 											--KARUSEL
			self:Register(xml:Init3tButton("caption_mncr", self),"caption_mncr")
			
			if has_alife_info("info_artmod_cristall_flower_mincer")  then
				self:Register(xml:Init3tButton("btn_mncr_1", self),"btn_mncr_1")
			end
			if has_alife_info("info_artmod_drops_mincer")  then
				self:Register(xml:Init3tButton("btn_mncr_2", self),"btn_mncr_2")
			end
			if has_alife_info("info_artmod_rusty_kristall_mincer")  then
				self:Register(xml:Init3tButton("btn_mncr_3", self),"btn_mncr_3")
			end	
			if has_alife_info("info_artmod_electra_moonlight_mincer")  then
				self:Register(xml:Init3tButton("btn_mncr_4", self),"btn_mncr_4")
			end
			if has_alife_info("info_artmod_ameba_slug_mincer")  then --- slyuda
				self:Register(xml:Init3tButton("btn_mncr_5", self),"btn_mncr_5")
			end	
			if has_alife_info("info_artmod_dummy_glassbeads_mincer")  then
				self:Register(xml:Init3tButton("btn_mncr_6", self),"btn_mncr_6")
			end
		--	==================================================================
		elseif string.find(anomaly,"_gravi")~=nil then		 											--DIVING BOARDS
			self:Register(xml:Init3tButton("caption_grv", self),"caption_grv")
			
			if has_alife_info("info_artmod_mincer_meat_mosquito_bald")  then
				self:Register(xml:Init3tButton("btn_grv_1", self),"btn_grv_1")
			end
			if has_alife_info("info_artmod_electra_sparkler_mosquito_bald")  then
				self:Register(xml:Init3tButton("btn_grv_2", self),"btn_grv_2")
			end
			if has_alife_info("info_artmod_ameba_slug_mosquito_bald")  then
				self:Register(xml:Init3tButton("btn_grv_3", self),"btn_grv_3")
			end	
			if has_alife_info("info_artmod_cristall_mosquito_bald")  then
				self:Register(xml:Init3tButton("btn_grv_4", self),"btn_grv_4")
			end
			if has_alife_info("info_artmod_rusty_sea_urchin_mosquito_bald")  then --- slyuda
				self:Register(xml:Init3tButton("btn_grv_5", self),"btn_grv_5")
			end	
			if has_alife_info("info_artmod_dummy_dummy_mosquito_bald")  then
				self:Register(xml:Init3tButton("btn_grv_6", self),"btn_grv_6")
			end
		end
	end
	-- exit button
	self:Register(xml:Init3tButton("btn_quit", self),"btn_quit")
end

function pdaam:InitCallBacks()
	
	self:AddCallback("btn_mb_1", ui_events.BUTTON_CLICKED, self.mb_1, self)
	self:AddCallback("btn_mb_2", ui_events.BUTTON_CLICKED, self.mb_2, self)
	self:AddCallback("btn_mb_3", ui_events.BUTTON_CLICKED, self.mb_3, self)
	self:AddCallback("btn_mb_4", ui_events.BUTTON_CLICKED, self.mb_4, self)
	self:AddCallback("btn_mb_5", ui_events.BUTTON_CLICKED, self.mb_5, self)
	self:AddCallback("btn_mb_6", ui_events.BUTTON_CLICKED, self.mb_6, self)
	
	self:AddCallback("btn_zrk_1", ui_events.BUTTON_CLICKED, self.zrk_1, self)
	self:AddCallback("btn_zrk_2", ui_events.BUTTON_CLICKED, self.zrk_2, self)
	self:AddCallback("btn_zrk_3", ui_events.BUTTON_CLICKED, self.zrk_3, self)
	self:AddCallback("btn_zrk_4", ui_events.BUTTON_CLICKED, self.zrk_4, self)
	self:AddCallback("btn_zrk_5", ui_events.BUTTON_CLICKED, self.zrk_5, self)
	self:AddCallback("btn_zrk_6", ui_events.BUTTON_CLICKED, self.zrk_6, self)
	self:AddCallback("btn_zrk_7", ui_events.BUTTON_CLICKED, self.zrk_7, self)
	
	self:AddCallback("btn_gal_1", ui_events.BUTTON_CLICKED, self.gal_1, self)
	self:AddCallback("btn_gal_2", ui_events.BUTTON_CLICKED, self.gal_2, self)
	self:AddCallback("btn_gal_3", ui_events.BUTTON_CLICKED, self.gal_3, self)
	self:AddCallback("btn_gal_4", ui_events.BUTTON_CLICKED, self.gal_4, self)
	self:AddCallback("btn_gal_5", ui_events.BUTTON_CLICKED, self.gal_5, self)
	self:AddCallback("btn_gal_6", ui_events.BUTTON_CLICKED, self.gal_6, self)
	self:AddCallback("btn_gal_7", ui_events.BUTTON_CLICKED, self.gal_7, self)
	
	self:AddCallback("btn_buzz_1", ui_events.BUTTON_CLICKED, self.buzz_1, self)
	self:AddCallback("btn_buzz_2", ui_events.BUTTON_CLICKED, self.buzz_2, self)
	self:AddCallback("btn_buzz_3", ui_events.BUTTON_CLICKED, self.buzz_3, self)
	self:AddCallback("btn_buzz_4", ui_events.BUTTON_CLICKED, self.buzz_4, self)
	self:AddCallback("btn_buzz_5", ui_events.BUTTON_CLICKED, self.buzz_5, self)
	self:AddCallback("btn_buzz_6", ui_events.BUTTON_CLICKED, self.buzz_6, self)
	self:AddCallback("btn_buzz_7", ui_events.BUTTON_CLICKED, self.buzz_7, self)
	self:AddCallback("btn_buzz_8", ui_events.BUTTON_CLICKED, self.buzz_8, self)
	
	self:AddCallback("btn_mncr_1", ui_events.BUTTON_CLICKED, self.mncr_1, self)
	self:AddCallback("btn_mncr_2", ui_events.BUTTON_CLICKED, self.mncr_2, self)
	self:AddCallback("btn_mncr_3", ui_events.BUTTON_CLICKED, self.mncr_3, self)
	self:AddCallback("btn_mncr_4", ui_events.BUTTON_CLICKED, self.mncr_4, self)
	self:AddCallback("btn_mncr_5", ui_events.BUTTON_CLICKED, self.mncr_5, self)
	self:AddCallback("btn_mncr_6", ui_events.BUTTON_CLICKED, self.mncr_6, self)
	
	self:AddCallback("btn_grv_1", ui_events.BUTTON_CLICKED, self.grv_1, self)
	self:AddCallback("btn_grv_2", ui_events.BUTTON_CLICKED, self.grv_2, self)
	self:AddCallback("btn_grv_3", ui_events.BUTTON_CLICKED, self.grv_3, self)
	self:AddCallback("btn_grv_4", ui_events.BUTTON_CLICKED, self.grv_4, self)
	self:AddCallback("btn_grv_5", ui_events.BUTTON_CLICKED, self.grv_5, self)
	self:AddCallback("btn_grv_6", ui_events.BUTTON_CLICKED, self.grv_6, self)
	
	self:AddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self)
end


function pdaam:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		end
	end
	return true
end
------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "Funnel"--------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:mb_1()
		self:start_transf("af_vyvert","af_medusa","kolbasa","mutant_dog_tail","af_ameba_slug") 
		--self:on_quit()
end
function pdaam:mb_2()
		self:start_transf("af_medusa","bandage","conserva","mutant_dog_tail","af_ameba_slime") 
		--self:on_quit()
end
function pdaam:mb_3()
		self:start_transf("af_vyvert","af_blood","mutant_dog_tail","vodka","af_electra_flash") 
		--self:on_quit()
end
function pdaam:mb_4()
		self:start_transf("af_rusty_thorn","af_medusa","af_rusty_kristall","mutant_psevdodog_tail","af_night_star")
		--self:on_quit()
end
function pdaam:mb_5()
		self:start_transf("af_electra_flash","af_cristall_flower","af_ameba_slug","mutant_snork_leg","af_soul")
		--self:on_quit()
end
function pdaam:mb_6()
		self:start_transf("af_ameba_mica","af_cristall","af_gold_fish","af_soul","af_dummy_pellicle") 
		--self:on_quit()
end

------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "hot"--------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:zrk_1()
		self:start_transf("af_medusa","af_rusty_thorn","af_vyvert","vodka","af_electra_flash") --+
		--self:on_quit()
end
function pdaam:zrk_2()
		self:start_transf("af_medusa","af_blood","kolbasa","mutant_dog_tail","af_ameba_slime") --+
		--self:on_quit()
end
function pdaam:zrk_3()
		self:start_transf("af_medusa","af_blood","bandage","conserva","af_gravi") --+
		--self:on_quit()
end
function pdaam:zrk_4()
		self:start_transf("af_rusty_kristall","af_vyvert","af_electra_flash","mutant_snork_leg","af_night_star") --+
		--self:on_quit()
end
function pdaam:zrk_5()
		self:start_transf("af_gravi","af_medusa","af_electra_flash","mutant_krovosos_jaw","af_electra_moonlight") --+
		--self:on_quit()
end
function pdaam:zrk_6()
		self:start_transf("af_electra_flash","af_ameba_mica","vodka","mutant_dog_tail","af_dummy_battery") 
		--self:on_quit()
end
function pdaam:zrk_7() --Plasma caterpillar
local actor=db.actor
local pos=actor:position()
	if amk_utils.inventory_search("bezoar",1) ~= false then
		amk.remove_item_from_inventory_by_name("bezoar",actor)
		level.add_pp_effector("teleport.ppe", 1524, false)
		amk_mod.af_start_transform_timer(amk_mod.af_start_transform(85,15,"af_buliz","af_caterpillar") , pos ,0,0,3,translate(amk.get_inv_name("af_caterpillar")))
	else
		news_manager.amk_send_tip(translate("sms_transmutat_bezoar"),translate("sms_incomming"),10,30,"pda_icon")
	end
end
-------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "Electra"--------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:gal_1()
		self:start_transf("af_blood","af_medusa","vodka","mutant_dog_tail","af_fireball") --+
		--self:on_quit()
end
function pdaam:gal_2()
		self:start_transf("af_vyvert","af_rusty_thorn","conserva","mutant_dog_tail","af_cristall_flower") --+
		--self:on_quit()
end
function pdaam:gal_3()
		self:start_transf("af_ameba_slime","af_rusty_thorn","af_medusa","kolbasa","af_ameba_mica") --+
		--self:on_quit()
end
function pdaam:gal_4()
		self:start_transf("af_gravi","af_blood","af_fireball","mutant_psevdodog_tail","af_soul") --+
		--self:on_quit()
end
function pdaam:gal_5()
		self:start_transf("af_medusa","af_rusty_thorn","af_cristall_flower","mutant_flesh_eye","af_gold_fish")--+
		--self:on_quit()
end
function pdaam:gal_6()
		self:start_transf("af_cristall_flower","af_cristall","mutant_psevdodog_tail","conserva","af_dummy_spring")  --+
		--self:on_quit()
end
function pdaam:gal_7()
		self:start_transf("mutant_face_tushkano","bandage","conserva","mutant_dog_tail","af_medusa") --+
		--self:on_quit()
end
-------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "Jelly"--------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:buzz_1()
		self:start_transf("af_electra_sparkler","af_medusa","af_drops","bread","af_rusty_kristall")  --+
		--self:on_quit()
end
function pdaam:buzz_2()
		self:start_transf("af_blood","bandage","bread","mutant_dog_tail","af_rusty_thorn")  --+
		--self:on_quit()
end
function pdaam:buzz_3()
		self:start_transf("af_rusty_thorn","af_vyvert","mutant_snork_leg","bread","af_fireball") --+
		--self:on_quit()
end
function pdaam:buzz_4()
		self:start_transf("af_cristall_flower","af_medusa","af_fireball","mutant_krovosos_jaw","af_cristall") --+
		--self:on_quit()
end
function pdaam:buzz_5()
		self:start_transf("af_gravi","af_blood","af_electra_flash","mutant_psevdodog_tail","af_gold_fish") --+
		--self:on_quit()
end
function pdaam:buzz_6()
		self:start_transf("af_night_star","af_soul","af_electra_moonlight","af_rusty_sea_urchin","af_fuzz_kolobok") --+
		--self:on_quit()
end
function pdaam:buzz_7()
		self:start_transf("mutant_face_tushkano","bandage","conserva","mutant_dog_tail","af_vyvert") --+
		--self:on_quit()
end
function pdaam:buzz_8()
		self:start_transf("af_medusa", "af_drops", "af_blood", "af_rusty_thorn","af_simbion") --+
	--	self:on_quit()
end
-------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "Roundabout"--------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:mncr_1()
		self:start_transf("af_blood","af_medusa","bandage","conserva","af_cristall_flower")--+
		--self:on_quit()
end
function pdaam:mncr_2()
		self:start_transf("af_vyvert","bandage","vodka","mutant_dog_tail","af_drops")   --+
		--self:on_quit()
end
function pdaam:mncr_3()
		self:start_transf("af_electra_sparkler","af_medusa","conserva","mutant_dog_tail","af_rusty_kristall") --+
		--self:on_quit()
end
function pdaam:mncr_4()
		self:start_transf("af_fireball","af_blood","af_ameba_slug","mutant_krovosos_jaw","af_electra_moonlight")  --+
		--self:on_quit()
end
function pdaam:mncr_5()
		self:start_transf("af_electra_flash","af_vyvert","af_fireball","mutant_psevdodog_tail","af_ameba_mica")--+
		--self:on_quit()
end
function pdaam:mncr_6()
		self:start_transf("af_ameba_mica","af_rusty_sea_urchin","af_gold_fish","af_night_star","af_dummy_glassbeads") --+
		--self:on_quit()
end
-------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------function for the anomaly, "Springboard"--------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:grv_1()
		self:start_transf("af_vyvert","af_blood","vodka","mutant_dog_tail","af_mincer_meat") --+
		--self:on_quit()
end
function pdaam:grv_2()
		self:start_transf("af_drops","bandage","kolbasa","mutant_dog_tail","af_electra_sparkler")   --+
		--self:on_quit()
end
function pdaam:grv_3()
		self:start_transf("af_medusa","af_drops","bandage","vodka","af_ameba_slug") --+
		--self:on_quit()
end
function pdaam:grv_4()
		self:start_transf("af_mincer_meat","af_vyvert","af_fireball","mutant_flesh_eye","af_cristall")  --+ 
		--self:on_quit()
end
function pdaam:grv_5()
		self:start_transf("af_ameba_slime","af_blood","af_rusty_kristall","mutant_krovosos_jaw","af_rusty_sea_urchin")--+
		--self:on_quit()
end
function pdaam:grv_6()
		self:start_transf("af_ameba_mica","af_cristall","af_mincer_meat","af_night_star","af_dummy_dummy") --+
		--self:on_quit()
end
-------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:check_game()
	
	local check = false
	if level.present() and (db.actor ~= nil) and db.actor:alive() then
		check = true
	end
	return check
end

function pdaam:on_quit()
	self:GetHolder():start_stop_menu (self,true)
end
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------function start transmutation--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
function pdaam:start_transf(it1,it2,it3,it4,fit)
	local actor=db.actor
	local pos=actor:position()
	if amk_utils.inventory_search(it1,1) ~= false and amk_utils.inventory_search(it2,1) ~= false and amk_utils.inventory_search(it3,1) ~= false and amk_utils.inventory_search(it4,1) ~= false then
		amk.remove_item_from_inventory_by_name(it1,actor)
		amk.remove_item_from_inventory_by_name(it2,actor)
		amk.remove_item_from_inventory_by_name(it3,actor)
		amk.remove_item_from_inventory_by_name(it4,actor)
		level.add_pp_effector("teleport.ppe", 1524, false)
		amk_mod.af_start_transform_timer(amk_mod.af_start_transform(85,15,"af_buliz",fit) , pos ,0,0,3,translate(amk.get_inv_name(fit)))
	else
		news_manager.amk_send_tip(translate("sms_transmutat_fail"),translate("sms_incomming"),10,30,"pda_icon")
	end
end
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
