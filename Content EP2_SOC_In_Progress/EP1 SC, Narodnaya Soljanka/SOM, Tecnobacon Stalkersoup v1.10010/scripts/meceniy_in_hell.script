--TB3D 1.1.0.0.0.7 chgd horror spawns: 50% chance collector, 20% novice to 50% master, spawn check for bad phantoms,
-- rewrote hellhour, level_info, agro and agro_u, actor and kruglov in ignore list, get_level_up, harsh env, have_info,
-- debug, hell hour now only in storm
function my_ver() return "1.1.0.0.0.7" end
--------------------------------------------------------------------------------------------------
--Features
--1)The effects of ejection,
--2)Randomly play a sound,
--3)Randomly losing effect
--4)Spawn next to the player
--5)If u sleep, then wake up to
--6)Probability of start based on player difficulty
----------------------------------------------------------------------------------------------------

local math_random = math.random
local string_find = string.find
-- Primary Function
local remove_horror = true --Removal of Monsters, after an hour of Terror

local tabl_sound_spawn = {
	[[ambient\random\rnd_scr4]],
	[[ambient\random\rnd_moan5]],
	[[ambient\random\rnd_scr10]],
	[[ambient\random\rnd_fallscream]],
	[[ambient\random\rnd_ratchant]],
	[[ambient\random\rnd_respawn]],
	[[ambient\random\rnd_moan1]]
}

local tabl_pp_effectors = {
	--"dead_zone.ppe",
	"deadcity_wake.ppe",
	"deadcity_wake1.ppe",
	"monolith_off.ppe",
	"radar_psi.ppe",
	"snd_shock.ppe",
	"psi.ppe",
	"vibros.ppe",
	"vibros_p.ppe"
}

local tabl_horror_by_level = {
	l07_military = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l04_pogost = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l03_rinok = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l11_pripyat = {
		spawn = {
			exact = { -- monsters with exact coordinates
				["fracture_normal_horror"] = {-15.07,-0.41,34.17},
				["zombie_normal_horror"] = {-15.07,-0.41,34.17},
				["zombie_normal_horror"] = {156.33,-0.79,5.64},
				["dog_strong_horror"] = {70.27,-0.64,-23.60},
				["dog_strong_horror"] = {70.27,-0.64,-23.60},
				["bloodsucker_hell_horror"] = {124.79,-0.83,-51.74},
				["zombie_normal_horror"] = {-67.11, -0.15, 41.19},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["dog_strong_horror"] = {-102.09,1.80,12.16},
				["fracture_strong_horror"] = {-15.07,-0.41,34.17}
			},
			rand = { -- monsters with random coordinates
				--["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				--["zombie_normal_horror"] = {count = 10, d = 50, y = 0},
				--["zombie_immortal_horror"] = {count = 5, d = 50, y = 0},
				--["zombie_hell_horror"] = {count = 5, d = 50, y = 0},
				["zombie_ghost_horror"] = {count = 1, d = 50, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.01, shock = 0.0007}
	},
	pripyat = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_normal_horror"] = {count = 10, d = 50, y = 0},
				["zombie_immortal_horror"] = {count = 5, d = 50, y = 0},
				["zombie_hell_horror"] = {count = 5, d = 50, y = 0},
				["zombie_ghost_horror"] = {count = 5, d = 50, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.01, shock = 0.0007}
	},
	dead_city = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l10_radar = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l12_stancia = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	l12_stancia_2 = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	generators = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 40, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 5, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	},
	aver = {
		spawn = {
			exact = { -- monsters with exact coordinates
			},
			rand = { -- monsters with random coordinates
				["bloodsucker_normal_horror"] = {count = 1, d = 100, y = 12},
				["fracture_normal_horror"] = {count = 2, d = 100, y = 12},
				["dog_normal_horror"] = {count = 5, d = 20, y = 12},
				["fracture_strong_horror"] = {count = 5, d = 40, y = 0},
				["zombie_immortal_horror"] = {count = 10, d = 40, y = 0}
			}
		},
		actor_hit_power = {radiation = 0.005, shock = 0.0002}
	}
}

local horror_time_hit = 2
local horror_end_time = 4
local horror_reset_time = 6
local horror_wait_time = 16
local game_reloaded = true -- during the CHU after restarting the game special effects will continue
local hit_once = false
local timem = 0

function horrortime(lname)
	--TB3D_Services.packet_alert("mec in hell: start minute["..utils.to_str(timem).."]")
	if timem == 0 and (not has_alife_info("horror_time_begin") and not has_alife_info("horror_fail")) then		--not in a hell hour now
		local diff_range = TB3D_Services.get_level_up() + 1														--109978, insure between 1 and 11
		diff_range = diff_range + TB3D_Services.get_difficulty_num()											--110001, novice = 2, master = 5
		if diff_range == 5 then
			diff_range = math.random(20)				--50% chance
		elseif diff_range == 4 then
			diff_range = math.random(30)				--40% chance
		elseif diff_range == 3 then
			diff_range = math.random(40)				--30% chance
		else
			diff_range = math.random(50)				--20% chance
		end
		if diff_range < 10 then																					-- start hell hour
			TB3D_Services.time_resync()																			--restore normal speed incase it's excellerated time
			game_reloaded = false
			TB3D_Services.give_info("horror_time_begin")
			if sleep_manager.is_sleep_active() then sleep_manager.stopper() end									--wake up and the siren
			--TB3D_Services.packet_alert("mec in hell: diff_range["..utils.to_str(diff_range).."] start")
		else
			TB3D_Services.give_info("horror_fail")
			--TB3D_Services.packet_alert("mec in hell: diff_range["..utils.to_str(diff_range).."] fail")
		end
	end
	if has_alife_info("horror_time_begin") then
		local gamem = TB3D_Services.get_game_time_minutes()
		if not has_alife_info("horror_time_end") and not has_alife_info("horror_fail") then						--in hell hour
			if not has_alife_info("horror") then
				TB3D_Services.give_info("horror")
				--TB3D_Services.packet_alert("mec in hell: start horror["..utils.to_str(timem).."]")
				level.add_cam_effector("camera_effects\\earthquake.anm", 77777775, true, "")
				level.add_pp_effector("dead_zone.ppe", 77777774, false)
				level.add_pp_effector("nano.ppe", 77777773, false)
				level.add_pp_effector("nightvision.ppe", 77777772, false) 
				level.add_pp_effector("psy_antenna.ppe", 77777771, true, "")
				effects()
				if TB3D_Modders.hell_spawn == true then horrorspawn(lname) end
				if TB3D_Modders.phantom_spawn == true then spawn_phantom() end
				horror_sound()
				TB3D_Services.check_valid_spawns()
				timem = TB3D_Services.get_game_time_minutes()															--last time checked or started
				--TB3D_Services.packet_alert("mec in hell: start horror["..utils.to_str(timem).."] done")
			end
			-- Restart special effects in the case of restarting the game
			if game_reloaded and has_alife_info("horror") then
				level.add_cam_effector("camera_effects\\earthquake.anm", 77777775, true, "")
				level.add_pp_effector("psy_antenna.ppe", 77777771, true, "")
				horror_sound()
				timem = TB3D_Services.get_game_time_minutes()															--restarts but no biggie
			end
			game_reloaded = false
			if gamem <= timem then timem = gamem end															--crossed midnite
			if gamem > timem + horror_end_time then																--110007
				--TB3D_Services.packet_alert("mec in hell: end horror["..utils.to_str(timem).."]")
				TB3D_Services.give_info("horror_time_end")
				level.add_pp_effector ("teleport.ppe", 77777777, false)
				level.remove_pp_effector(77777774)
				level.remove_pp_effector(77777773)
				level.remove_pp_effector(77777772)
				level.remove_pp_effector(77777771)
				level.remove_pp_effector(77777776)
				level.remove_cam_effector(77777775)
				remove_horror_mutant()
				TB3D_Services.time_resync()
				--TB3D_Services.packet_alert("mec in hell: end horror["..utils.to_str(gamem).."] done")
			elseif hit_once == false and gamem > (timem + horror_time_hit) then										--110007
				hit_once = true
				if TB3D_Modders.horror_hit == true then
					local level_info = tabl_horror_by_level[lname]
					if level_info and TB3D_Services.is_indoor(false) == false then
						local rad = level_info["actor_hit_power"]["radiation"]
						local shock = level_info["actor_hit_power"]["shock"]
						TB3D_hit_styles.horror_hit(rad, shock)
						--TB3D_Services.packet_alert("mec in hell: horror["..utils.to_str(gamem).."] hit")
					end
				end
			end
		elseif has_alife_info("horror_time_end") or has_alife_info("horror_fail") then
			if gamem > timem + horror_wait_time then
				TB3D_Services.remove_info("horror_time_begin")
				TB3D_Services.remove_info("horror_time_end")
				TB3D_Services.remove_info("horror_fail")
				hit_once = false
				timem = 0
				--TB3D_Services.packet_alert("mec in hell: reset horror["..utils.to_str(gamem).."] done")
			elseif gamem > timem + horror_reset_time then
				--TB3D_Services.packet_alert("mec in hell: finish horror["..utils.to_str(gamem).."]")
				TB3D_Services.remove_info("horror")
			end
		end
	elseif has_alife_info("horror_fail") then
		TB3D_Services.remove_info("horror_time_end")
		TB3D_Services.remove_info("horror_time_begin")
		TB3D_Services.remove_info("horror_fail")
		TB3D_Services.remove_info("horror")
	end
end

-- Randomly choose a sound
function horror_sound()
	local snd_obj = xr_sound.get_safe_sound_object(tabl_sound_spawn[math_random(#tabl_sound_spawn)])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 2.5)
end

-- The choice of effector
function effects()
	level.add_pp_effector(tabl_pp_effectors[math_random(#tabl_pp_effectors)], 77777776, false)
end

-- The main Spawn Locations in the light
function horrorspawn(level_name)
	local ap = db.actor:position()
	local lv = db.actor:level_vertex_id()
	local gv = db.actor:game_vertex_id()
	local pos
	local level_info = tabl_horror_by_level[level_name]
	if level_info then
		for s,p in pairs(level_info["spawn"]["exact"]) do
			pos = vector():set(p[1],p[2],p[3])
			alife():create(s, pos, lv, gv)
		end
		for s,p in pairs(level_info["spawn"]["rand"]) do
			for i=1,p["count"] do
				pos = vector():set(ap.x + math_random(-p["d"],p["d"]), ap.y + p["y"], ap.z + math_random(-p["d"],p["d"]))
				alife():create(s, pos, lv, gv)
			end
		end
	end
end

-- Phantoms
function spawn_phantom()
	local a_pos = db.actor:position()
	local pos
	for i = 1, math_random(5,15) do
		pos = vector():set(math_random(-30, 30) + a_pos.x, a_pos.y + 2.5, math_random(-30, 30) + a_pos.z)
		phantom_manager.spawn_phantom(pos)
	end
end

-- cleaning of the remaining live monsters
function remove_horror_mutant()
	if remove_horror then
		local sim = alife()
		local horror_m
		for i=first_object,last_object do
			horror_m = sim:object(i)
			if horror_m and string_find(horror_m:name(), "_horror") and horror_m:alive() then
				sim:release(horror_m, true)
			end
		end
	end
end
