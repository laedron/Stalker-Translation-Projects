-- TB3D 1.0.9.9.1 chg actor to db.actor, dmx135, translate
function my_ver() return "1.0.9.9.1" end
--[[-----------------------------------------------------------------------------------------------
 File        : keylogger.script
 Description : Shortcuts use items
 Copyright   : kstn
 Author      : kstn
 Last edit   : Shadowman, V92, Ray, Shadows
--]]-----------------------------------------------------------------------------------------------

local t, vk, ini
local translate = game.translate_string

function getTbl()
	local ini = ini_file("keys.cfg")
	if ini and ini:section_exist("keys") then
		local t = {}
		local res, id, val = ini:r_line("keys", 0, "", "")
		for s in string.gfind(id, "([ %w_\\]+)%p*") do
			table.insert(t, tonumber(s))
		end
		return t
	end
end

function update()
--TB3D_Services.packet_alert("keylogger: update")
	if t == nil then t = this.getTbl() end
	ini = ini_file("buf.txt")
	if ini then
		for i,v in pairs(t) do
			if ini:section_exist(v) then
				if v ~= vk then
					vk = v
					if db.actor:alive() and not has_alife_info("ui_pda") then loadstring("keylogger.vk"..v.."()")() end
					TB3D_Services.packet_alert("keylogger: update loaded["..utils.to_str(v).."]")
					break
				end
			elseif v == vk then
				vk = nil
			end
		end
		ini = nil
	end
	--TB3D_Services.packet_alert("keylogger: update done")
end

function eat_item(item)
	local static = get_hud():AddCustomStatic("cant_walk", true)
	static:wnd():SetText("Used: "..translate(amk.get_inv_name(item:section())))
	static:wnd():SetTextY(80)
	db.actor:eat(item)
end

--[[ Conclusion cs message
function hud_msg(xml, txt)
	local hud = get_hud()
	hud:AddCustomStatic(xml, true)
	local wnd = hud:GetCustomStatic(xml):wnd()
	wnd:SetText(txt)
	wnd:SetTextY(80)
end]]

------------------------------------------------------------
-- Hud Medkits Call of Pripyat
----------dmx135--------------------------------------------
-- 'F1' - First Aid Kits
function vk112()
	local item = db.actor:object("medkit") or db.actor:object("medkit_army") or db.actor:object("medkit_scientic") or db.actor:object("medkit_elite")
	if item then
		eat_item(item)
	end
end

-- 'F2' - Antirad
function vk113()
	local item = db.actor:object("antirad")
	if item then
		eat_item(item)
	end
end

-- 'F3' - Bandages
function vk114()
	local item = db.actor:object("bandage") or db.actor:object("bandage_dmx")
	if item then
		eat_item(item)
	end
end

-- 'F4' - Varieties of vodka
function vk115()
	local item = db.actor:object("vodka") or db.actor:object("absolut_vodka") or db.actor:object("smirnoff_vodka") or db.actor:object("nemiroff_vodka")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 1' - Dried Rations
function vk97()
	local item = db.actor:object("irp-b") or db.actor:object("syh_pay_gde_3") or db.actor:object("syh_pay_spp5")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 2' - Flask, Mineral Water, Juice
function vk98()
	local item = db.actor:object("flaska") or db.actor:object("mineral_water") or db.actor:object("voda") or db.actor:object("sok")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 3' - Varieties of beer
function vk99()
	local item = db.actor:object("beer_a") or db.actor:object("pivo") or db.actor:object("pivo_baltika")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 4' - "Antipohmelin" Tablets, Serum
function vk100()
	local item = db.actor:object("tab") or db.actor:object("suvorotka")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 5' - Antizombin
function vk101()
	local item = db.actor:object("antizombie")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 6' - Tourniquet, Antiseptic dressings
function vk102()
	local item = db.actor:object("zhgut") or db.actor:object("antiseptic")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 7' - Amphetamine, Pervitin
function vk103()
	local item = db.actor:object("amfetamin") or db.actor:object("pervitin")
	if item then
		eat_item(item)
	end
end

-- 'NumPad 8' - All food
local food = {"sandwich", "sweetness", "conserva", "kolbasa", "bread", "tuchenka", "yantar", "sardina", "ogursi", "sholad", "kolbasadmx", "olives", "nuts"}
function vk104()
	local item
	for k, v in pairs(food) do
		item = db.actor:object(v)
		if item then
			eat_item(item)
			break
		end
	end
end

-- 'NumPad 9' - Energy
local energy_drinks = {"energy_drink", "energy_stalker", "energy_non_stop", "energy_ad_rush", "energy_red_bull"}
function vk105()
	local item
	for k, v in pairs(energy_drinks) do
		item = db.actor:object(v)
		if item then
			eat_item(item)
			break
		end
	end
end

-------------------------
-- Time management --
-------------------------

-- 'NumPad *' - Acceleration time
local factor = 0
function vk106()
	factor = factor + 200
	level.set_time_factor(factor)
	amk.send_tip("Time increased to "..factor, "Value of time excelleration")
end

-- 'NumPad /' - Time dilation
function vk111()
	factor = factor - 200
	if factor <= 0 then
		vk110()
	else
		level.set_time_factor(factor)
		amk.send_tip("Time decreased to "..factor, "Value of time excelleration")
	end
end

-- 'NumPad .' - Restore standard speed time
function vk110()
	factor = 0
	level.set_time_factor(system_ini():r_float("alife", "time_factor"))
	amk.send_tip("Standard time rate", "Value of time excelleration")
end

------------
-- cars --
------------

-- 'G' - Car signal
function vk71()
	dmx_cars.car_signal_sound()
end

-- 'J' - Turn on the radio in the car
function vk74()
	news_manager.send_tip(db.actor, "J key pressed", nil, nil, 16000)
end

-- 'N' - The inclusion of the NVD in helmets
function vk78()
	if hidden_slots.nightvision_sound then
		hidden_slots.helmets_nightvision(false)
	else
		hidden_slots.helmets_nightvision(true)
	end
end

-- 'NumPad 0' - Finding coordinates GG
function vk96()
	local pos = db.actor:position()
	local dir = db.actor:direction()
	amk.send_tip("X = "..pos.x.."\\nY = "..pos.y.."\\nZ = "..pos.z.."\\nDirX = "..dir.x.."\\nDirY = "..dir.y.."\\nDirZ = "..dir.z.."\\nlevel_vertex = "..db.actor:level_vertex_id().."\\ngame_vertex_id = "..db.actor:game_vertex_id(), "Position", nil, 15)
end
------------------------dmx135--------------------------------
