--TB3D 1.1.0.0.0.4 cleanup, data to db, new trade folder, trade_otshelnik
function my_ver() return "1.1.0.0.0.4" end
local string_find = string.find

function trade_init(npc, cfg)
	local cnfg = cfg
	local npc_id = npc:id()
	if TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] cfg["..utils.to_str(cnfg).."]") end
	if TB3D_Services.get_started() < 110004 then																--110004, fix old saves
		local changed = false
		if string_find(cnfg, "adrenalin_trader") then
			cnfg = "trade\\trade_adrenalin.ltx"
			changed = true
		elseif string_find(cnfg, "agro_mobil") then
			cnfg = "trade\\agro_trade1_mobil.ltx"
			changed = true
		elseif string_find(cnfg, "akim_trader") then
			cnfg = "trade\\trade_akim.ltx"
			changed = true
		elseif string_find(cnfg, "trade_artem") then
			cnfg = "trade\\trade_artem.ltx"
			changed = true
		elseif string_find(cnfg, "trade_voron") then
			cnfg = "trade\\trade_voron.ltx"
			changed = true
		elseif string_find(cnfg, "atp_mobil") then
			cnfg = "trade\\agro_trade1_mobil.ltx"
			changed = true
		elseif string_find(cnfg, "dmx_mod_trader") then
			cnfg = "trade\\trade_syslov.ltx"
			changed = true
		elseif string_find(cnfg, "trade_marsh_barman") then
			cnfg = "trade\\trade_marsh_barman.ltx"
			changed = true
		elseif string_find(cnfg, "trade_otshelnik") then			--110001
			cnfg = "trade\\trade_otshelnik.ltx"
			changed = true
		elseif string_find(cnfg, "trade_zahar") then
			cnfg = "trade\\trade_zahar.ltx"
			changed = true
		elseif string_find(cnfg, "^misc") then
			cnfg = "trade"..string.sub(cnfg,5,-1)
			changed = true
		end
		if changed and TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] changed["..utils.to_str(cfg).."] to["..utils.to_str(cnfg).."]!!!!") end
	end
	db.init_trade_mgr(npc_id, cnfg)
	local str = utils.cfg_get_string(db.trade[npc_id].config, "trader", "buy_condition", npc, true, "")
	if str == nil then
		if TB3D_Modders.use_abort_message then TB3D_Services.packet_alert("trade manager: Incorrect trader settings. Cannot find buy_condition!!!!") end
	else
		if TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] str["..str.."]") end
		db.set_buy_condition(npc_id, xr_logic.parse_condlist(npc, "trade_manager", "buy_condition", str))
	end
	str = utils.cfg_get_string(db.trade[npc_id].config, "trader", "sell_condition", npc, true, "")
	if str == nil then
		if TB3D_Modders.use_abort_message then TB3D_Services.packet_alert("trade manager: Incorrect trader settings. Cannot find sell_condition!!!!") end
	else
		if TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] str["..str.."]") end
		db.set_sell_condition(npc_id, xr_logic.parse_condlist(npc, "trade_manager", "sell_condition", str))
	end	
	str = utils.cfg_get_string(db.trade[npc_id].config, "trader", "buy_supplies", npc, false, "")
	if str ~= nil then
		if TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] str["..str.."]") end
		db.set_buy_supplies(npc_id, xr_logic.parse_condlist(npc, "trade_manager", "buy_supplies", str))
	end
	--TB3D_Services.packet_alert("trade manager: TRADE INIT["..npc:name().."] done")
end


function update(npc)
	local tt = db.trade[npc:id()]
	if tt == nil or (tt.update_time ~= nil and tt.update_time < time_global()) then
		return
	end
	tt.update_time = time_global() + 3600000
	local str = xr_logic.pick_section_from_condlist(db.actor, npc, tt.buy_condition)
	if str and tt.current_buy_condition ~= str then
		--printf("TRADE [%s]: buy condition = %s", npc:name(), str)
		npc:buy_condition(tt.config, str)
		tt.current_buy_condition = str
	end
	str = xr_logic.pick_section_from_condlist(db.actor, npc, tt.sell_condition)
	if str and tt.current_sell_condition ~= str then
		--printf("TRADE [%s]: sell condition = %s", npc:name(), str)
		npc:sell_condition(tt.config, str)
		tt.current_sell_condition = str
	end
	if tt.buy_supplies == nil then
		return
	end
	str = xr_logic.pick_section_from_condlist(db.actor, npc, tt.buy_supplies)
	--TB3D_Services.packet_alert("TRADE mgr: npc["..npc:name().."] buy_supplies["..str.."]")
	if str and tt.current_buy_supplies ~= str then
		if tt.resuply_time ~= nil and tt.resuply_time < time_global() then
			return
		end
		npc:buy_supplies(tt.config, str)
		tt.current_buy_supplies = str
		tt.resuply_time = time_global() + 24*3600000
		return true																--109981, for xr_motivator
	end	
end


function save(obj, packet)
	local tt = db.trade[obj:id()]
	if tt == nil then
		--printf("TRADE SAVE [%s]: ignored", obj:name())
		packet:w_bool(false)
		return
	else
		packet:w_bool(true)
	end
	packet:w_stringZ(tt.cfg_ltx)
	--printf("TRADE SAVE [%s]: current_buy_condition = %s", obj:name(), tostring(tt.current_buy_condition))
	if tt.current_buy_condition == nil then
		packet:w_stringZ("")
	else
		packet:w_stringZ(tt.current_buy_condition)
	end
	--printf("TRADE SAVE [%s]: current_sell_condition = %s", obj:name(), tostring(tt.current_sell_condition))
	if tt.current_sell_condition == nil then
		packet:w_stringZ("")
	else
		packet:w_stringZ(tt.current_sell_condition)
	end
	--printf("TRADE SAVE [%s]: current_buy_supplies = %s", obj:name(), tostring(tt.current_buy_supplies))
	if tt.current_buy_supplies == nil then
		packet:w_stringZ("")
	else
		packet:w_stringZ(tt.current_buy_supplies)
	end
	local cur_tm = time_global()
	if tt.update_time == nil then
		packet:w_s32(-1)
	else
	 	packet:w_s32(tt.update_time - cur_tm)
	end
	if tt.resuply_time == nil then
		packet:w_s32(-1)
	else
	 	packet:w_s32(tt.resuply_time - cur_tm)
	end
end

function load(obj, packet)
	local a = packet:r_bool()
	if a == false then
		--printf("TRADE LOAD [%s]: ignored", obj:name())
		return
	end
	local cnfg = packet:r_stringZ()
	if TB3D_Services.get_started() < 110000 then																--110000, fix old saves
		if string.find(cnfg, "^misc") then
			cnfg = "trade"..string.sub(cnfg,5,-1)
			if TB3D_Modders.use_abort_message then TB3D_Services.packet_alert("trade manager: TRADE INIT["..obj:name().."] changed config to["..utils.to_str(cnfg).."]!!!!") end
		end
		if TB3D_Modders.use_abort_message then TB3D_Services.packet_alert("TRADE LOAD FIX["..obj:name().."]: cfg_ltx["..tostring(cnfg).."] !!!!") end
		trade_init(obj,cnfg)
	else	
		if TB3D_Modders.use_trade_message then TB3D_Services.packet_alert("TRADE LOAD ["..obj:name().."]: cfg_ltx["..tostring(cnfg).."]") end
		db.init_trade_mgr(obj:id(),cnfg)
		local tt = db.trade[obj:id()]
		--tt.config = ini_file(tt.cfg_ltx)
		a = packet:r_stringZ()
		--printf("TRADE LOAD [%s]: current_buy_condition = %s", obj:name(), tostring(a))
		if a ~= "" then
			tt.current_buy_condition = a
			obj:buy_condition(tt.config, a)
		end
		a = packet:r_stringZ()
		--printf("TRADE LOAD [%s]: current_sell_condition = %s", obj:name(), tostring(a))
		if a ~= "" then
			tt.current_sell_condition = a
			obj:sell_condition(tt.config, a)
		end
		a = packet:r_stringZ()
		--printf("TRADE LOAD [%s]: current_buy_supplies = %s", obj:name(), tostring(a))
		if a ~= "" then
			tt.current_buy_supplies = a	
		end
		local cur_tm = time_global()
		a = packet:r_s32()
		if a ~= -1 then
			tt.update_time = cur_tm + a
		end
		a = packet:r_s32()
		if a ~= -1 then
			tt.resuply_time = cur_tm + a
		end
	end
end
