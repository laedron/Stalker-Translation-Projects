--TB3D 1.0.9.9.5.0 pleer, remove info, rewrite, zone underground,
--use info "u_6" to check if active, empty usb slot on change, active_station
function my_ver() return "1.0.9.9.5.0" end

--Vergas player
local math_random = math.random
local translate = game.translate_string
local mp_snd_obj = xr_sound.get_safe_sound_object([[soundtrack\escape_theme]])

local is_player_started = false

local lost_id = -1
local menu_show = false

--Table Slots
local slot_flash = {} 			--create usb table
for  i = 1,16 do
	table.insert(slot_flash,0)	-- 0 = empty, 1 = loaded
end

local play_flag 
local flash_id = -1
local spawn_flash
local fleshka

local sound_vol = {}
table.insert(sound_vol,0.1)
table.insert(sound_vol,0.25)
table.insert(sound_vol,0.5)
table.insert(sound_vol,0.75)
table.insert(sound_vol,1.0)
	
function used_item()								--called by xr_detector:update
	--Investigated with the player
	if play_flag == 1  then	
		play_flag = 0
		used_player()
	elseif (play_flag == 2) or (play_flag == nil)  then
		if lost_id > 0 then
			if not menu_show then
				if alife():object(lost_id)==nil then
					used_player()
				else
					s_stop()
				end
			end	
		end
	end
	if flash_id > 0 then							--Investigated with flash drive
		if alife():object(flash_id)==nil then
			amk.spawn_item_in_inv(spawn_flash)		--Stick "eaten" and restore it in the inventory
			flash_id = -1
		else
			local work_flash = work_flash_return()
			flash_id = -1			
			if work_flash ~= 0 then
				for i=1,16 do
					if work_flash == i then
						fleshka = "ogg_flash_"..i	
					end
				end
			end
			if spawn_flash == fleshka then	--thrown the stick in the working slot player
				amk.save_variable("nomer_flexi", nil)							-- in the working slot is nothing
				s_stop()					-- off playing the file
				work_trek_set(0)			-- no track does not play
				fleshka = nil
			end
		end
	end
end

function used_player()	-- Manufacturing production slots flash drives
	get_flash()
	set_menu_show(true)	--Opens the menu
	lost_id = -1
	local spwn=ui_cheat_player.cheat(get_hud())
	level.start_stop_menu(spwn,true)
	set_menu_show(false)
end

function lose_item(obj)					--called by bind_stalker:on_item_drop
	if not menu_show then				--loss of player
		if obj:section() == "player" then
			lost_id = obj:id()
		else
			lost_id = -1
		end
	end
	local flash							--Loss of USB Flash Drives
	for i=1, 16 do
		flash = "ogg_flash_"..i
		if obj:section() == flash then
			flash_id = obj:id()
			spawn_flash = flash
		end
	end
end

function set_menu_show(t)
	menu_show = t
end

function set_play_flag(t)
	play_flag = t
end

function get_flash()	--Checks for USB sticks in the bag
	local flag_flash
	for i = 1,16 do
		flag_flash=db.actor:object("ogg_flash_"..i)
		if flag_flash == nil then
			slot_flash[i] = 0			--not have usb
		else
			slot_flash[i] = 1			--has usb
		end
	end
	local work_flash = work_flash_return()						-- Checking the working slot
	if work_flash ~= nil then
		for i=1,16 do
			if work_flash == i then
				slot_flash[i] = 0				--empty as loaded in player
			end
		end
	end
end

function return_flash_slot(t)
	if t == 0 then
		return work_flash_return()				-- Working usb Slot
	end
	for i = 1,16 do
		if t == i then
			return slot_flash[i]
		end	
	end
end

function set_show_flash(n)						-- n - number of the stick. Closes icon flashes and stir stick in the working slot
	local work_flash = work_flash_return()
	if work_flash then
		if flash_id > 0 then							--Investigated with flash drive
			if alife():object(flash_id)==nil then
				amk.spawn_item_in_inv(spawn_flash)		--Stick "eaten" and restore it in the inventory
				flash_id = -1
			else
				flash_id = -1			
				if work_flash ~= 0 then
					for i=1,16 do
						if work_flash == i then
							fleshka = "ogg_flash_"..i	
						end
					end
				end
				if spawn_flash == fleshka then	--thrown the stick in the working slot player
					amk.save_variable("nomer_flexi", nil)							-- in the working slot is nothing
					s_stop()					-- off playing the file
					work_trek_set(0)			-- no track does not play
					fleshka = nil
				end
			end
		end
		work_flash = nil
	end
	if work_flash == nil then					-- working slot is empty. Move the stick in the working slot
		for i = 1,16 do
			if n ==i then				
				slot_flash[i] = 0				--empty as loaded in player
				amk.save_variable("nomer_flexi", n)
				work_trek_set(1)				-- start first track
			end
		end
	end
end

function active_station()
	local as_text = ""
	if has_alife_info("u_6") then
		if mp_snd_obj:playing()==true then
			local wrktrk = get_work_trek()
			if wrktrk == 19 then
				local cartrk = get_car_trek()
				if cartrk < 10 then
					as_text = "ZONE:0"..tostring(cartrk)
				else
					as_text = "ZONE:"..tostring(cartrk)
				end
			elseif wrktrk > 12 then
				as_text = translate("mp3_radio_"..tostring(wrktrk-12))
			else
				local wrkflsh = work_flash_return()
				if wrkflsh < 10 then
					as_text = "F:0"..tostring(wrkflsh)
				else
					as_text = "F:"..tostring(wrkflsh)
				end
				if wrktrk < 10 then
					as_text = as_text.." T:0"..tostring(wrktrk)
				else
					as_text = as_text.." T:"..tostring(wrktrk)
				end
			end
		end
	end
	return as_text
end

function work_flash_return()
	return amk.load_variable("nomer_flexi", nil)
end

function get_vol()
	return amk.load_variable("nomer_vol",1)
end

function sound_vol_set(n)
	if mp_snd_obj:playing()==true then 
		mp_snd_obj.volume = sound_vol[n]
	end
	amk.save_variable("nomer_vol", n)
end

function get_station()
	local work_trek = get_work_trek()
	if work_trek > 12 and work_trek < 20 then return work_trek-12 else return 0 end
end

function ring_return()
	return amk.load_variable("ring_val", 0)
end

function ring_set(n)
	amk.save_variable("ring_val", n)
end

function get_work_trek()
	return amk.load_variable("nomer_treka",0)
end

function work_trek_set(n)
	amk.save_variable("nomer_treka", n)
end

function get_car_trek()
	return amk.load_variable("car_track",0)
end

function car_trek_set(n)
	amk.save_variable("car_track", n)
end

function s_stop()
	TB3D_Services.remove_info("u_6")
	if mp_snd_obj:playing()==true then 
		mp_snd_obj:stop() 
	end
end

function s_play(trek)
	local track = tonumber(trek) or 0
	if track > 0 and track < 20 then
		local path
		if track < 13 then
			path = "ogg_player\\flash_"..utils.to_str(work_flash_return()).."\\sound_"..utils.to_str(track)
		elseif track == 13 then path = "ogg_player\\radio\\duty"
		elseif track == 14 then path = "ogg_player\\radio\\freedom"
		elseif track == 15 then path = "ogg_player\\radio\\stalkers"
		elseif track == 16 then path = "ogg_player\\radio\\military"
		elseif track == 17 then path = "ogg_player\\radio\\all"
		elseif track == 18 then path = "ogg_player\\radio\\monolith"
		elseif track == 19 then
			local car_track = get_car_trek()
			if car_track == 0 then											--first started
				if ring_return() == 1 then									--if repeat
					car_track = math_random(1,25)							--start randomly
				else
					car_track = 1
				end
				car_trek_set(car_track)
			end
			path = "car_music\\music_"..utils.to_str(car_track)
		end
		if path then
			if mp_snd_obj:playing()==true then mp_snd_obj:stop() end
			--TB3D_Services.packet_alert("player ogg: path["..path.."]")
			mp_snd_obj = xr_sound.get_safe_sound_object(path)
			if mp_snd_obj then
				TB3D_Services.give_info("u_6")
				work_trek_set(track)
				mp_snd_obj:play_at_pos(db.actor, vector():set(0, 0, 0), 0, sound_object.s2d)
				mp_snd_obj.volume = sound_vol[get_vol()]
				return true
			end
		end
	end
	TB3D_Services.remove_info("u_6")
	return false
end

function start_pleer_post_save()													--restart player if was in use
	if db.actor:object("player") then
		local work_flash = work_flash_return() 										-- Working slot: the number of the inserted stick. 	
		local work_track = get_work_trek()											-- Playing track number
		if work_track > 12 then														-- radio
			local car_track = get_car_trek() + 1									-- travelling takes time so start next set
			if work_track == 19 then												-- underground
				if car_track > 25 then												-- last set so check if repeat
					if ring_return() == 1 then
						car_track = math_random(1,25)								--next set randomly
					else
						car_trek_set(0)
						TB3D_Services.remove_info("u_6")							-- not repeat so end it
						return
					end
				end
				car_trek_set(car_track)
			end
			if s_play(work_track) == true then
				local station = "sms_station_"..utils.to_str(work_track-12)
				if work_track < 19 then
					news_manager.amk_send_tip(translate("sms_radio_playing")..translate(station),translate("sms_player"),1,25,"radio")
				else
					news_manager.amk_send_tip(translate(station)..utils.to_str(car_track).."]",translate("sms_player"),1,25,"radio")
				end
			end
		elseif work_flash ~= nil and work_flash ~= 0 then
			--TB3D_Services.packet_alert("player ogg: flash["..utils.to_str(work_flash).."]")
			if db.actor:object("ogg_flash_"..work_flash) then
				--TB3D_Services.packet_alert("player ogg: flash[ogg_flash_"..work_flash.."]")
				set_show_flash(work_flash)											-- sets active slot
				if work_track and work_track > 0 then
					--TB3D_Services.packet_alert("player ogg: flash["..work_track.."]")
					if s_play(work_track) == true then
						news_manager.amk_send_tip(translate("sms_track_playing")..utils.to_str(work_track).."]",translate("sms_player"),1,25,"radio")
					end
				end
			end
		end
	end
end

function update()					--called by bind_stalker:update
	if has_alife_info("u_6") then
			--TB3D_Services.packet_alert("player ogg: u6")
		if is_player_started then
			if mp_snd_obj:playing() == false then							-- if stopped and repeat than select next track/station
				local wrktrk = get_work_trek()
				--TB3D_Services.packet_alert("player ogg: update repeat["..utils.to_str(ring_return()).."] track["..utils.to_str(wrktrk).."]")
				if wrktrk == 19 then										--if zone underground
					local car_track = get_car_trek() + 1					--starts track 1 or next track
					if car_track > 25 then									--check if repeat
						if ring_return() == 1 then
							car_track = 1
						else
							car_trek_set(0)
							TB3D_Services.remove_info("u_6")				-- not repeat so end it
							return
						end
					end
					car_trek_set(car_track)
					if s_play(wrktrk) == true then
						work_trek_set(wrktrk)
						news_manager.amk_send_tip(translate("sms_station_7")..utils.to_str(car_track).."]",translate("sms_player"),1,25,"radio")
					end
				elseif ring_return() == 1 then 
					wrktrk = wrktrk + 1
					if wrktrk == 13 then										--usb 1-12
						wrktrk = 1
					elseif wrktrk == 19 then 									--radio 13-18
						wrktrk = 13
					end
					if s_play(wrktrk) == true then
						work_trek_set(wrktrk)
						if wrktrk < 13 then
							news_manager.amk_send_tip(translate("sms_track_playing")..utils.to_str(wrktrk).."]", translate("sms_player"),1,25,"radio")
						else
							local station = "sms_station_"..utils.to_str(wrktrk-12)
							news_manager.amk_send_tip(translate("sms_radio_playing")..translate(station), translate("sms_player"),1,25,"radio")
						end
					end
				else
					TB3D_Services.remove_info("u_6")
				end
			end
		else
			--TB3D_Services.packet_alert("player ogg: start player")
			start_pleer_post_save()
			is_player_started = true
		end
	end
end