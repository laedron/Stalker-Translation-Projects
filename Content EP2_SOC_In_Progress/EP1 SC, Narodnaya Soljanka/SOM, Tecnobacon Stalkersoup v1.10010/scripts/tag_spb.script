--TB3D 1.0.9.9.3.2  not in use due to CTDs 09/21/11, rostok level = 8, zombie team
function my_ver() return "1.0.9.9.3.2" end
--     TAG_SPB 
-- test.vyzov : bind_stalker - on_item_drop (obj)

-- combat challenge : amk_mod 
-- after the line 1001 : amk.del_variable("blowout")
-- add         : tag_spb.zombie_team()

-- amk.script --user area 
--  if select_string=="tag_trup_to_zombie" then
--       tag_spb.trup_to_zombie(params_string)
--  end
-------------- TAG ---------- 23.11.08

function zombie_team()
 --levels which do not work
 if not string.find("l01_escape,l03u_agr_underground,l04u_labx18,l08u_brainlab,l10u_bunker",level.name()) then 
   local trup, trup_name = nil,nil
   local zombie,zombie_c,zombie_max = nil,0,20 -- zombie count (3 max)
   local tag_trup_id = {}
   local i,j 
   local level_num = string.sub (level.name(),2,3)
   -- looking for suitable dead-level and write them in a plate
     for j,i in pairs (db.storage) do
        trup = level.object_by_id(j)
        if trup and IAmAStalker[trup:clsid()] and not trup:alive() then 
           trup_name = trup:name()
        else 
           trup_name = nil 
        end 
        if trup_name and zombie_c<zombie_max and
           string.find(trup_name,"respawn") and not string.find(trup_name,"zombie") and not string.find(trup_name,"ecolog") then

--           trup:position():distance_to(db.actor:position())<20 and db.actor:see(trup) then -- DEBUG
           zombie_c = zombie_c+1
                           -- 0.8,DEBUG : 10.8
           if math.random() < 0.8 then  table.insert (tag_trup_id,j) end           
        end  
        if zombie_c >= zombie_max then break end
     end --for

     zombie_c = math.random(1,2)
     for i,j in pairs (tag_trup_id) do -- c delay (farther - the worse) do zombi of trup.
          zombie_max = 0 -- math.random(0,1)
-- news_manager.amk_send_tip (level_num.." "..tostring(zombie_c).." "..tostring(j),nil,nil,3)    
          amk.g_start_timer("tag_trup_to_zombie",0,zombie_max,zombie_c,"A"..tostring(j))
          zombie_c = zombie_c + math.random(3,10)  
     end --for
     
 end --levels  
end

----------------------------------------------------------------------

function trup_to_zombie (s_param)

   local n_step = nil
   local trup_id = tonumber(string.sub(s_param,2,20))
   local trup = level.object_by_id(trup_id)

   if trup and trup:position():distance_to(db.actor:position())>2 and 
      trup:position():distance_to(db.actor:position())<140 then

     local e_pos = trup:bone_position("bip01_spine") 
     local l_v = trup:level_vertex_id()
     local g_v = trup:game_vertex_id()
     local level_num = string.sub (level.name(),2,3)

     if string.find(s_param,"A") then 
        amk_particle.amk_particle({particle="anomaly2\\emi_idle_00",pos=e_pos,sound="anomaly\\emi_blowout"})   
        n_step ="B"  

     elseif string.find(s_param,"B") then
        local t = string.find("010203040506",level_num)
        if t then
           if t>6 then t=12-t end  
           if math.random(0,12)<t then
               local skel = nil
               if math.random()< 0.4 then
                  skel = amk.spawn_item("breakable_object",e_pos,db.actor:game_vertex_id(),db.actor:level_vertex_id())  -- (c) AMK
               end   
               if skel then 
                  t = amk.get_breakable_data(skel)
                  t.visual ="physics\\dead_body\\skelet_"  
                  if math.random()<0.7 then  t.visual = t.visual.."torso"
                  else t.visual = t.visual.."combine_pose_0"..tostring(math.random(3,5)) end
                  t.mass = 1.0
                  t.physic_type = 3
                  t.skeleton_flags = 1
                  amk.set_breakable_data(t,skel)
               end 
               amk_particle.amk_particle({particle="amk\\zomb_explode",pos=e_pos,sound=[[anomaly\anomaly_body_tear_1]]})
               tag_drop_habar(level.object_by_id(trup_id)) -- Bird crumbles. nepovezlo guy
               return nil 
           end      
         end
        if level_num > "01" then -- and this will be "live"
           amk_particle.amk_particle({particle="anomaly2\\group_items\\tornado_flash_04",pos=e_pos,sound="anomaly\\emi_entrance"})
           n_step ="Z" 
        end

     else
        local zombie = nil   
        local new_pos = trup:position()
        new_pos.y = new_pos.y+0.5 -- above the late
        -- determine the level (the game)                                  
        local zombie_name = "rad_zombied_respawn_"
        if level_num > "08" then -- L06_rostok
           zombie_name = "yan_zombied_respawn_"
        end   
        -- determine the escarpment a dead NPC
        if trup:character_rank() > 600 then zombie_name = zombie_name.."3"
        elseif trup:character_rank() > 300 then zombie_name = zombie_name.."2"
        else zombie_name = zombie_name.."1" end

        local vis = tag_get_npc_armor(level.object_by_id(trup_id))

        zombie=alife():create(zombie_name,new_pos,l_v,g_v)

        if zombie then
			TB3D_Services.packet_alert("tag sqb: zombied stalker["..zombie_name.."] spawned")
           local z = amk.read_stalker_params(zombie)
           if z then
              z.charname = news_main.get_npc_name(trup)
              z.rank = trup:character_rank()
--              z.health = 0.1 -- as fake death
              if vis then z.visual = vis end
              amk.write_stalker_params(z,zombie,true)
           end    

           amk_particle.amk_particle({particle="anomaly2\\group_items\\electra2_flash",pos=e_pos,sound="anomaly\\teleport_work_2"})

           tag_drop_habar(level.object_by_id(trup_id))  -- banging carcass
           
           if not db.actor:see(trup) then  -- come up with some nonsense
              news_manager.amk_send_tip ("Sending login information .. Username:Password .. "..news_main.get_npc_name(trup).." ERROR message.. ","system access denied...",nil,7,"gen_info")
           end 
           -- fake death
        end 
     end     
     if n_step and trup then 
        amk.g_start_timer("tag_trup_to_zombie",0,0,1,n_step..string.sub(s_param,2,20))
     end
   end
end

-- mob_fake_death ?? test_zombie.script
-- state_mgr.set_state(npc, "walk")
--           zombie:script(true, script_name())
--           action(zombie, anim("fake_death_2_0"), cond(cond.anim_end))
--           action(zombie, anim("fake_death_2_1"), cond(cond.time_end, 5000))
-- ERR :_g.script:69: attempt to call method 'command' (a nil value)
--           mob_fake_death(zombie,z) err :attempt to call global 'mob_fake_death' (a table value)
-- alife():set_switch_online(zombie.id, false)
-- db.storage[zombie.id].mob_fake_death.enabled = true


-- fake_death
--           wait(2000)
--           reset_action(zombie, script_name())
--           while(zombie:action()) do wait() end    
--           zombie:script(false, script_name())

----------------------------------------------------------------------

function tag_get_npc_armor(trup)


  local vis = nil
  if trup then
     local n,z = "stalker_",nil
     local trup_type =trup:section()
     local trup_rank = trup:character_rank()
     local cur_outfit= nil    -- determined by who m / dress "bandit" "stalker" "neutral"

--     trup:get_current_outfit()  -- a corpse - is uncertain.. (nil)
--     amk.read_stalker_params(trup) --ERR : attempt to call method 'STATE_Write' (a nil value)

-- trying to find a model on the rank and grouping of "client" (spawn_sections.ltx)
--  types : stalker_zombie1-8, stalker_zombie_specnaz, zombie_exoskeleton, zombie_fresh_0-2

     if string.find(trup_type,"bandit")        then         -- bandit
        z="1" cur_outfit=2
     elseif string.find(trup_type,"dolg")      then         -- Debt
        if trup_rank < 600 then z="2"                       -- chern.komb.
        elseif trup_rank<900 then n="" z="_fresh_1"         -- chern.komb.2
        else n="" z="_exoskeleton"                          -- ekza 
        end   
     elseif string.find(trup_type,"freedom")   then         -- Freedom     
        if trup_rank < 300 then 
           z="3"                                            -- zel.komb.stalkera 
        elseif trup_rank < 600 then 
           n="" z="_fresh_2"                                -- zel.komb.s against. 
        else
           n="" z="_fresh_0"                                -- zel. blue combo. 
        end   
     elseif string.find(trup_type,"killer")    then         -- killer (4) the mask (5)
        if string.find(trup_type,"_respawn_2") then z="5" else z="4" end           
     elseif string.find(trup_type,"stalker") or             -- stalker
        string.find(trup_type,"neutral") then
        if trup_rank < 300 then     z="8" cur_outfit=1      -- New to bel.kurt.(8)
        elseif trup_rank < 600 then z="7" cur_outfit=2      -- stalker in zhel.kurt.(7)   
        else
           cur_outfit=2 
           if math.random()>0.2 then z="3" else z="6" end   -- zel.komb. (3) glasses (6)
        end
     elseif string.find(trup_type,"soldier") or 
            string.find(trup_type,"military") or
            string.find(trup_type,"specnaz") then           -- All Enemies - special forces .. bad 
        z="_specnaz"                                       
     elseif string.find(trup_type,"monolith")  then         -- monolith 
        n="" z="_exoskeleton"                               -- ekza
     end

     --trying to find a model for sod.ryukzaka (dressing)
     if cur_outfit then
        -- looking for this armor (7 entries)               
        local outfits_to_zombie = {"novice_outfit","stalker_outfit","killer_outfit",
                                   "stalker_guard_outfit","dolg_outfit","svoboda_heavy_outfit","exo"}
        local z_tab             = {"7","3","4",
                                   "_fresh_0","_fresh_1","_fresh_2","_exoskeleton" } 
         
        local i,j 
        trup:iterate_inventory(         
                   function(dummy,item)
                      if item:parent() then 
                         local i_section = item:section()
                         if string.find(i_section,"exoskelet") then cur_outfit=7 end 
                         if string.find(i_section,"outfit") then
                            for i,j in pairs(outfits_to_zombie) do
                              if i>=cur_outfit and j==i_section then cur_outfit=i end      
                            end 
                         end
                      end
                   end,trup) -- end function

        if cur_outfit>0 then z=z_tab[cur_outfit] end
        if cur_outfit> 3 then n="" end
     end
 
     if z then  
        vis = "actors\\stalker_zombi\\"..n.."zombie"..z 
-- news_manager.amk_send_tip(trup_type.." Skin="..vis,nil,nil,17)
     end             
  end
  return vis 
end

----------------------------------------------------------------------

function tag_drop_habar (trup)
   if trup and trup:id() then
		local i_section
      trup:iterate_inventory(         -- throw armor
                   function(dummy,item)
                      if item:parent() then 
                         i_section = item:section() 
                         if not string.find("device_torch,wpn_knife,bolt",i_section) and
                            item:parent() then trup:drop_item(item) 
                         end
                      end
                   end,trup) -- end function
      if trup:id() then amk.remove_item(trup) end
   end
end

-------------- TAG end ----------
