--TB3D 1.1.0.0.0.0 added my_ver, fixed thunder for guide, commented out line 1180, sherstyk ammo_pkm_box_1 ammunition on line: 185 aleks1970,
-- mil_Svoboda_trader_plan_check
function my_ver() return "1.1.0.0.0.0" end
-------------------------------------------------------------------------------------------------------
-- Syakovy Dialogues 
-------------------------------------------------------------------------------------------------------
local act = db.actor
local debug = false
local color_orange = TB3D_Services.get_text_color("system")
local color_green = TB3D_Services.get_text_color("money")
local color_yellow = TB3D_Services.get_text_color("tip")
function repair_box_not_have()
	--return amk_utils.inventory_search("repair_box_outfit",1) == false	--aleks1970
	return amk_utils.inventory_search("repair_kit",1) == false
end
function add_abakan(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan", "in")
end
function add_mp5(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_mp5", "in")
end
function give_10conserva(first_speaker, second_speaker)
	sak.out_item_namber("conserva",10)
end
function give_5kolbasa(first_speaker, second_speaker)
	sak.out_item_namber("kolbasa",5)
end
function give_2flaska(first_speaker, second_speaker)
	sak.out_item_namber("flaska",2)
end
function flaska2_have()
  	return amk_utils.inventory_search("flaska",2) ~= false 
end
function conserva10_have()
  	return amk_utils.inventory_search("conserva",10) ~= false 
end
function kolbasa5_have()
  	return amk_utils.inventory_search("kolbasa",5) ~= false 
end
function give_5sandwich(first_speaker, second_speaker)
	sak.out_item_namber("sandwich",5)
end
function give_2sweetness(first_speaker, second_speaker)
	sak.out_item_namber("sweetness",2)
end
function give_2drink(first_speaker, second_speaker)
	sak.out_item_namber("energy_drink",2)
end
function give_3beer_a(first_speaker, second_speaker)
	sak.out_item_namber("beer_a",3)
end
function give_5bread(first_speaker, second_speaker)
	sak.out_item_namber("bread",5)
end
function give_3cigara(first_speaker, second_speaker)
	sak.out_item_namber("cigara",3)
end
function sandwich5_have()
  	return amk_utils.inventory_search("sandwich",5) ~= false 
end
function sweetness2_have()
  	return amk_utils.inventory_search("sweetness",2) ~= false 
end
function drink2_have()
  	return amk_utils.inventory_search("energy_drink",2) ~= false 
end
function beer_a3_have()
  	return amk_utils.inventory_search("beer_a",3) ~= false 
end
function bread5_have()
  	return amk_utils.inventory_search("bread",5) ~= false 
end
function cigara3_have()
  	return amk_utils.inventory_search("cigara",3) ~= false 
end
function has_soldiers_bribe(actor, npc)
	return amk_utils.inventory_search("vodka",1) ~= false
end
function give_soldiers_bribe(actor, npc)
	sak.out_item_namber("vodka",1)
end
function have_krysyk_goods()
  	return amk_utils.inventory_search("af_electra_moonlight",3) ~= false and amk_utils.inventory_search("af_dummy_glassbeads",1) ~= false
end
function give_krysyk_goods()
	sak.out_item_namber("af_electra_moonlight",3)
	sak.out_item_namber("af_dummy_glassbeads",1)
end
function give_pda_krysyka()
	sak.out_item_namber("pda_krysyka",1)
end
function have_repair_box()
  	return amk_utils.inventory_search("repair_box_outfit",1) ~= false
end
function have_pda_krysyka()
  	return amk_utils.inventory_search("pda_krysyka",1) ~= false
end
function give_borov_11()
	sak.out_item_namber("scaintist_docs",1)
	sak.out_item_namber("inventory_sakbox_05",1)
end
function have_borov_11()
  	return amk_utils.inventory_search("scaintist_docs",1) ~= false and amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end
function add_wpn_svd(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_svd", "in")
end
function add_wpn_sig(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig_m2", "in")
end
function add_wpn_svu(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_svu", "in")
end
function add_wpn_vintorez(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_vintorez", "in")
end
function add_dolg_scientific_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit", "in")
end
function add_militaryspec_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit", "in")
end
function add_dolg_black_exoskeleton(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton", "in")
end
function add_4ammo_vog_25s(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_vog-25",3)
	dialogs.relocate_item_section(first_speaker, "ammo_vog-25", "in")
end
function add_3ammo_vog_25p(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_vog-25p",2)
	dialogs.relocate_item_section(first_speaker, "ammo_vog-25p", "in")
end
function add_2ammo_762x54_7h1(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x54_7h1",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h1", "in")
end
function add_2ammo_762x54_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x54_ap",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in")
end
function add_1ammo_762x54_7h14(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
end
function add_3ammo_7_62_fmj(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x39_fmj",2)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_fmj", "in")
end
function add_2ammo_762x39_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x39_ap",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in")
end
function add_5antirad(first_speaker, second_speaker)
	sak.create_items(db.actor,"antirad",4)
	dialogs.relocate_item_section(first_speaker, "antirad", "in")
end
function add_repair_box(first_speaker, second_speaker)
	local act = db.actor
	local okit = act:object("repair_box_outfit")	-- new aleks1970
	if okit then
		local repiout =amk.load_variable("repair_item_outfit", 0)
		local repiweap =amk.load_variable("repair_item_weapon", 0)
		if (repiout and repiout~=0) or (repiweap and repiweap~=0) then
			if repiout and repiout~=0 then
				local revampout = repiout
				amk.save_variable("spare_armor", revampout)
				amk.del_variable("repair_item_outfit")
			end
			if repiweap and repiweap~=0 then
				local repiweaps = 4	--repiweap /2
				local repiweapb = repiweap --/2
				amk.save_variable("spare_pistol", repiweaps)
				amk.save_variable("spare_rifle", repiweapb)
				amk.del_variable("repair_item_weapon")
			end
		end
		local obj = alife():object(okit:id())
		if obj then
			alife():release(obj, true)
		end
	end
	dialogs.relocate_item_section(first_speaker, "repair_kit", "in")	-- repair_box_outfit
end
function add_4medkit_scientic(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit_scientic",3)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in")
end
function add_3medkit_scientic(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit_scientic",2)
	dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in")
end
function add_3medkit_army(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit_army",2)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in")
end
function add_2medkit_army(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit_army",1)
	dialogs.relocate_item_section(first_speaker, "medkit_army", "in")
end
function add_ammo_f1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in")
end
function add_ammo_f2(first_speaker, second_speaker)
	sak.create_items(db.actor,"grenade_f1",1)
	dialogs.relocate_item_section(first_speaker, "grenade_f1", "in")
end
function add_ammo_rgd1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "grenade_rgd5", "in")
end
function add_ammo_9x19_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_9x19_pbp", "in")
end
function add_ammo_762x54r(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54r", "in")
end
function add_ammo_pkm_box_1(first_speaker, second_speaker) -- aleks1970
	dialogs.relocate_item_section(first_speaker, "ammo_pkm_box_1", "in")
end
function add_ammo_pkm_box_2(first_speaker, second_speaker) -- aleks1970
	dialogs.relocate_item_section(first_speaker, "ammo_pkm_box_2", "in")
end
function add_ammo_762x54r2(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x54r",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54r", "in")
end
function add_ammo_5_7x28_ss1904(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.7x28_ss190",3)
	dialogs.relocate_item_section(first_speaker, "ammo_5.7x28_ss190", "in")
end
function add_military_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit", "in")
end
-- --------------new - militaryspec - outfit - aleks1970---------------
function add_military_spec_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit_goodplus", "in")
end
-- --------------------------------------------------------------------
function add_wpn_abakan_m1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan_m1", "in")
end
function add_wpn_abakan(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan", "in")
end
function add_wpn_pkm(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_pkm", "in")
end
function add_wpn_gauss(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_gauss", "in")
end
function add_wpn_spas12(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_spas12", "in")
end
function add_p90(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_p90", "in")
end
function add_fn2000(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_fn2000", "in")
end
function add_2ammo_12x76_zhekan(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x76_zhekan",1)
	dialogs.relocate_item_section(first_speaker, "ammo_12x76_zhekan", "in")
end
function add_3ammo_12x76_dart(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x76_dart",2)
	dialogs.relocate_item_section(first_speaker, "ammo_12x76_dart", "in")
end
function add_5ammo_12x70_buck(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x70_buck",4)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in")
end
function add_protection_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit", "in")
end
function add_ammo_super_gauss(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_super_gauss",2)
	dialogs.relocate_item_section(first_speaker, "ammo_super_gauss", "in")
end
function add_ammo_gauss(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_gauss", "in")
end
function take_fox_spot()
	sak.add_spot_of_docent(5)
end
function take_shustryi_spot()
	sak.add_spot_of_docent(4)
end
function take_wolf_spot()
	sak.add_spot_of_docent(6)
end
function take_provodnik_spot()
	sak.add_spot_of_docent(92)
end
function take_yrik_spot() 
	sak.add_spot_of_docent(104)
end
function take_bes_spot() 
	sak.add_spot_of_docent(107)
end
function take_krot_spot() 
	sak.add_spot_of_docent(302)
end
function take_krisyk_spot() 
	sak.add_spot_of_docent(9508)
end
function give_docent_5pda(first_speaker, second_speaker)
	sak.out_item_namber("device_pda_npc",5)
end
function give_2mica(first_speaker, second_speaker)
	sak.out_item_namber("af_ameba_mica",2)
end
function give_3mica(first_speaker, second_speaker)
	sak.out_item_namber("af_ameba_mica",3)
end
function docent_5pda_have()
  	return amk_utils.inventory_search("device_pda_npc",5) ~= false
end
-- ------------------redesigned functions for the new minimap spot - aleks1970-----------------
function give_docent_hand_kontroler(first_speaker, second_speaker)
	sak.out_item_namber("mutant_hand_kontroler",1)
	sak.out_item_namber("device_pda_npc",30)
end
function docent_hand_kontroler_have()
  	return amk_utils.inventory_search("mutant_hand_kontroler",1) ~= false and amk_utils.inventory_search("device_pda_npc",30) ~= false
end
function give_docent_psevdogigant_hand(first_speaker, second_speaker)
	sak.out_item_namber("mutant_psevdogigant_hand",2)
	sak.out_item_namber("device_pda_npc",15)
end
function docent_psevdogigant_hand_have()
  	return amk_utils.inventory_search("mutant_psevdogigant_hand",2) ~= false and amk_utils.inventory_search("device_pda_npc",15) ~= false
end
function give_docent_krovosos_jaw(first_speaker, second_speaker)
	sak.out_item_namber("mutant_krovosos_jaw",2)
	sak.out_item_namber("device_pda_npc",20)
end
function docent_krovosos_jaw_have()
  	return amk_utils.inventory_search("mutant_krovosos_jaw",2) ~= false and amk_utils.inventory_search("device_pda_npc",20) ~= false
end
function give_docent_wolf_paw(first_speaker, second_speaker)
	sak.out_item_namber("mutant_werewolf_kogot",3)	--new part is needed - aleks1970
	sak.out_item_namber("device_pda_npc",20)
end
function docent_wolf_paw_have()
  	return amk_utils.inventory_search("mutant_werewolf_kogot",3) ~= false and amk_utils.inventory_search("device_pda_npc",20) ~= false
end
function give_docent_chimera_claw(first_speaker, second_speaker)
	sak.out_item_namber("mutant_chimera_kogot",4)	--new part is needed - aleks1970
	sak.out_item_namber("device_pda_npc",40)
end
function docent_chimera_claw_have()
  	return amk_utils.inventory_search("mutant_chimera_kogot",4) ~= false and amk_utils.inventory_search("device_pda_npc",40) ~= false
end
function give_docent_burer_hand(first_speaker, second_speaker)
	sak.out_item_namber("mutant_burer_hand",4)
	sak.out_item_namber("device_pda_npc",15)
end
function docent_burer_hand_have()
  	return amk_utils.inventory_search("mutant_burer_hand",4) ~= false and amk_utils.inventory_search("device_pda_npc",15) ~= false
end
function give_docent_biblio_hand(first_speaker, second_speaker)
	sak.out_item_namber("part_digitis_biblio",1)
	sak.out_item_namber("device_pda_npc",30)
end
function docent_biblio_hand_have()
  	return amk_utils.inventory_search("part_digitis_biblio",1) ~= false and amk_utils.inventory_search("device_pda_npc",30) ~= false
end
function docent_have_mutant_task()
local m_num = amk.load_variable("m_count", 0)
	if m_num == nil then m_num = 0 end
	if (db.actor:has_info("docent_detector1_done")) and (db.actor:has_info("docent_detector2_done")) and (db.actor:has_info("docent_detector3_done")) and (db.actor:has_info("docent_detector4_done")) and (db.actor:has_info("docent_detector5_done")) and (db.actor:has_info("docent_detector6_done")) and (db.actor:has_info("docent_detector7_done")) then
		m_num = 7
		amk.save_variable("m_count", m_num)
	else
		m_num = m_num + 1
		amk.save_variable("m_count", m_num)
	end
end
function docent_have_done()
--	if (db.actor:has_info("docent_detector1_done")) and (db.actor:has_info("docent_detector2_done")) and (db.actor:has_info("docent_detector3_done")) and (db.actor:has_info("docent_detector4_done")) and (db.actor:has_info("docent_detector5_done")) and (db.actor:has_info("docent_detector6_done")) and (db.actor:has_info("docent_detector7_done")) then
--		return false
--	else
--		return true
--	end 
	local m_num = amk.load_variable("m_count", 0)
	if m_num == nil then return end
	if m_num == 7 then	--hide the text dialog on condition 7 - aleks1970
		return false
	else
		return true
	end
end
-- ------------------redesigned functions for the new minimap spot -END- aleks1970-----------------
function docent_have_have()
	if db.actor:has_info("sak_gold_fish_have") or db.actor:has_info("sak_find_seif_have") or db.actor:has_info("sak_repair_box_have") or db.actor:has_info("sak_reward_outfit_have") then
  	return true
	else
	return false
	end 
end
function give_medkit_scientic(first_speaker, second_speaker)
	sak.out_item_namber("medkit_scientic", 1)
end
function medkit_scientic_have()
	return amk_utils.inventory_search("medkit_scientic",1) ~= false
end
function give_medkit_army(first_speaker, second_speaker)
	sak.out_item_namber("medkit_army", 1)
end
function medkit_army_have()
	return amk_utils.inventory_search("medkit_army",1) ~= false
end
function give_2medkit(first_speaker, second_speaker)
	sak.out_item_namber("medkit",2)
end
function medkit2_have()
	return amk_utils.inventory_search("medkit",2) ~= false
end
function medkit_have()
	return amk_utils.inventory_search("medkit",1) ~= false
end
function give_antirad(first_speaker, second_speaker)
	sak.out_item_namber("antirad", 1)
end
function antirad_have()
	return amk_utils.inventory_search("antirad",1) ~= false
end
function give_fuzz_kolobok(first_speaker, second_speaker)
	sak.out_item_namber("af_fuzz_kolobok", 1)
end
function fuzz_kolobok_have()
	return amk_utils.inventory_search("af_fuzz_kolobok",1) ~= false
end
function give_dummy_3glassbeads(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_glassbeads",3)
end
function dummy_3glassbeads_have()
	return amk_utils.inventory_search("af_dummy_glassbeads",3) ~= false
end
function give_dummy_pellicle(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_pellicle", 1)
end
function dummy_pellicle_have()
	return amk_utils.inventory_search("af_dummy_pellicle",1) ~= false
end
function give_dummy_battery(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_battery", 1)
end
function dummy_battery_have()
	return amk_utils.inventory_search("af_dummy_battery",1) ~= false
end
function give_dummy_dummy(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_dummy", 1)
end
function dummy_dummy_have()
	return amk_utils.inventory_search("af_dummy_dummy",1) ~= false
end
function give_dummy_spring(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_spring", 1)
end
function dummy_spring_have()
	return amk_utils.inventory_search("af_dummy_spring",1) ~= false
end
function give_3rusty_sea_urchin(first_speaker, second_speaker)
	sak.out_item_namber("af_rusty_sea_urchin", 3)
end
function rusty_sea_urchin_3have()
	return amk_utils.inventory_search("af_rusty_sea_urchin",3) ~= false
end
function give_rusty_sea_urchin(first_speaker, second_speaker)
	sak.out_item_namber("af_rusty_sea_urchin", 1)
end
function rusty_sea_urchin_have()
	return amk_utils.inventory_search("af_rusty_sea_urchin",1) ~= false
end
function give_rusty_kristall(first_speaker, second_speaker)
	sak.out_item_namber("af_rusty_kristall", 1)
end
function rusty_kristall_have()
	return amk_utils.inventory_search("af_rusty_kristall",1) ~= false
end
function give_rusty_thorn(first_speaker, second_speaker)
	sak.out_item_namber("af_rusty_thorn", 1)
end
function rusty_thorn_have()
	return amk_utils.inventory_search("af_rusty_thorn",1) ~= false
end
function give_ameba_slug(first_speaker, second_speaker)
	sak.out_item_namber("af_ameba_slug", 1)
end
function ameba_slug_have()
	return amk_utils.inventory_search("af_ameba_slug",1) ~= false
end
function give_ameba_slime(first_speaker, second_speaker)
	sak.out_item_namber("af_ameba_slime", 1)
end
function ameba_slime_have()
	return amk_utils.inventory_search("af_ameba_slime",1) ~= false
end
function give_2fireball(first_speaker, second_speaker)
	sak.out_item_namber("af_fireball",2) 
end
function fireball2_have()
	return amk_utils.inventory_search("af_fireball",2) ~= false
end
function give_fireball(first_speaker, second_speaker)
	sak.out_item_namber("af_fireball", 1)
end
function fireball_have()
	return amk_utils.inventory_search("af_fireball",1) ~= false
end
function give_night_star(first_speaker, second_speaker)
	sak.out_item_namber("af_night_star", 1)
end
function night_star_have()
	return amk_utils.inventory_search("af_night_star",1) ~= false
end
function give_electra_sparkler(first_speaker, second_speaker)
	sak.out_item_namber("af_electra_sparkler", 1)
end
function electra_sparkler_have()
	return amk_utils.inventory_search("af_electra_sparkler",1) ~= false
end 
function fox_pay_money(actor, npc)
	treasure_manager.get_treasure_manager():give_treasure("esc_secret_truck_goods")
end
function give_vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 2	--added 2 points of credit to the player - aleks1970
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka", 1)
end
function give_2vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 3	--added 3 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",2)
end
function give_3vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 4	--added 4 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",3)
end
function give_5vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 6	--added 6 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",5)
end
function give_6vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 7	--added 7 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",6)
end
function give_7vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 8	--added 8 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",7)
end
function give_8vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 9	--added 9 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",8)
end
function give_10vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 9	--added 9 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",10)
end
function give_12vodka()	-- vodka for 250 ammo box - aleks1970
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 10	--added 10 credit points
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",12)
end
function give_15vodka()
local credit = amk.load_variable("sh_credit", 0)
	credit = credit + 12	--added 12 points of credit to player
	amk.save_variable("sh_credit", credit)
	sak.out_item_namber("vodka",15)
end
function give_20vodka()
	sak.out_item_namber("vodka",20)
end
function give_25vodka()
	sak.out_item_namber("vodka",25)
end
function give_40vodka()
	sak.out_item_namber("vodka",40)
end
function have_vodka()
	return amk_utils.inventory_search("vodka",1) ~= false
end
function have_2vodka()
	return amk_utils.inventory_search("vodka",2) ~= false
end
function have_3vodka()
	return amk_utils.inventory_search("vodka",3) ~= false
end
function have_5vodka()
	return amk_utils.inventory_search("vodka",5) ~= false
end
function have_6vodka()
	return amk_utils.inventory_search("vodka",6) ~= false
end
function have_7vodka()
	return amk_utils.inventory_search("vodka",7) ~= false
end
function have_8vodka()
	return amk_utils.inventory_search("vodka",8) ~= false
end
function have_10vodka()
	return amk_utils.inventory_search("vodka",10) ~= false
end
function have_12vodka()	-- new for the 250 ammo box - aleks1970
	return amk_utils.inventory_search("vodka",12) ~= false
end
function have_15vodka()
	return amk_utils.inventory_search("vodka",15) ~= false
end
function have_20vodka()
	return amk_utils.inventory_search("vodka",20) ~= false
end
function have_25vodka()
	return amk_utils.inventory_search("vodka",25) ~= false
end
function have_40vodka()
	return amk_utils.inventory_search("vodka",40) ~= false
end
-- ------------------new - sherstyk credits - aleks1970--------------------
function on_update()
	local dis_txt = amk.load_variable("m_count", 0)
	local credit = amk.load_variable("sh_credit", 0)
	local text = color_green..("credit status: - "..color_yellow.."[".." - "..utils.to_str(credit).." - ".."]").."\\n"..color_green..("mutant scaneer task done: - "..color_orange.."[".." - "..utils.to_str(dis_txt).." - ".."]")
	news_manager.send_tip_txt(act,text,1,"default",7000)
end

function reset_sherstyk_credit()
	local credit = amk.load_variable("sh_credit", 0)
	if credit ~= nil and credit >= 40 then	-- leave some small credits for later use - aleks1970
		credit = 20
		amk.save_variable("sh_credit", credit)
	elseif credit ~= nil and credit >= 33 then	-- leave some small credits for later use - aleks1970
		credit = 16
		amk.save_variable("sh_credit", credit)
	else
		credit = 0
		amk.save_variable("sh_credit", credit)
	end
end

function have_sherstyk40_credit()
	local credit = amk.load_variable("sh_credit", 0)
	if credit ~= nil and credit >= 40 then
		return true	-- enable and sell the SKAT-10 armor and reset credit points
	else
		return false	-- not sell SKAT-10 armor
	end
end
function have_sherstyk33_credit()
	local credit = amk.load_variable("sh_credit", 0)
	if credit ~= nil and credit >= 33 then
		return true	-- enable and sell the PKM and reset credit points
	else
		return false	-- not sell PKM
	end
end

function not_have_sherstyk40_credit()
	local credit = amk.load_variable("sh_credit", 0)
	if credit ~= nil and credit < 40 then
		return true	-- not enough credit to sell SKAT-10 armor
	else
		return false
	end
end
function not_have_sherstyk33_credit()
	local credit = amk.load_variable("sh_credit", 0)
	if credit ~= nil and credit < 33 then
		return true	-- not enough credit to sell PKM
	else
		return false
	end
end
-- ------------------------------------------------------------------------
function give_drops(first_speaker, second_speaker)
	sak.out_item_namber("af_drops", 1)
end
function drops_have()
	return amk_utils.inventory_search("af_drops",1) ~= false
end
function give_blood(first_speaker, second_speaker)
	sak.out_item_namber("af_blood", 1)
end
function blood_have()
	return amk_utils.inventory_search("af_blood",1) ~= false
end
function give_electra_flash(first_speaker, second_speaker)
	sak.out_item_namber("af_electra_flash", 1)
end
function electra_flash_have()
	return amk_utils.inventory_search("af_electra_flash",1) ~= false
end
function give_mincer_meat(first_speaker, second_speaker)
	sak.out_item_namber("af_mincer_meat", 1)
end
function mincer_meat_have()
	return amk_utils.inventory_search("af_mincer_meat",1) ~= false
end
function give_vyvert(first_speaker, second_speaker)
	sak.out_item_namber("af_vyvert", 1)
end
function vyvert_have()
	return amk_utils.inventory_search("af_vyvert",1) ~= false
end
function give_cristall_flower(first_speaker, second_speaker)
	sak.out_item_namber("af_cristall_flower", 1)
end
function cristall_flower_have()
	return amk_utils.inventory_search("af_cristall_flower",1) ~= false
end
function give_medusa(first_speaker, second_speaker)
	sak.out_item_namber("af_medusa", 1)
end
function medusa_have()
	return amk_utils.inventory_search("af_medusa",1) ~= false
end
function give_10medusa(first_speaker, second_speaker)
	sak.out_item_namber("af_medusa", 10)
end
function medusa10_have()
	return amk_utils.inventory_search("af_medusa",10) ~= false
end
function give_7medusa(first_speaker, second_speaker)
	sak.out_item_namber("af_medusa", 7)
end
function medusa7_have()
	return amk_utils.inventory_search("af_medusa",7) ~= false
end
function give_gravi(first_speaker, second_speaker)
	sak.out_item_namber("af_gravi", 1)
end
function gravi_have()
	return amk_utils.inventory_search("af_gravi",1) ~= false
end
function add_5vodka(first_speaker, second_speaker)
	sak.create_items(db.actor,"vodka",3)
	dialogs.relocate_item_section(first_speaker, "vodka", "in")
end
function add_vodka(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "vodka", "in")
end
function add_medkit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "medkit", "in")
end
function add_5medkit(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit",4)
	dialogs.relocate_item_section(first_speaker, "medkit", "in")
end
function add_10medkit(first_speaker, second_speaker)
	sak.create_items(db.actor,"medkit",7)
	dialogs.relocate_item_section(first_speaker, "medkit", "in")
end
function add_saiga(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_saiga12c", "in")
end
function add_groza(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_groza", "in")
end
function add_val(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_val", "in")
end
function add_wpn_ak47(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_ak47", "in")
end
function add_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_toz34", "in")
end
function add_5ammo_9x39_pab9(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_pab9",4)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_pab9", "in")
end
function add_4ammo_9x39_sp5(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_sp5",3)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_sp5", "in")
end
function add_3ammo_9x39_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_9x39_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
end
function add_5ammo_556x45_ss190(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.56x45_ss190",4)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190", "in")
end
function add_3ammo_556x45_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.56x45_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap", "in")
end
function add_3ammo_545x39_ap(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.45x39_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
end
function add_5ammo_5_45_fmj(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.45x39_fmj",4)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in")
end
function add_ammo_5_45_fmj(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in")
end
function add_ammo_5_45_fmj2(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_5.45x39_fmj",1)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in")
end
function add_ammo_7_62_fmj2(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x39_fmj",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_fmj", "in")
end
function add_ammo_7_62_ap3(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x39_ap",2)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in")
end
function add_ammo_7_62_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in")
end
function add_ammo_7_62_ap2(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_7.62x54_ap",1)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_ap", "in")
end
function add_ammo_rgd2(first_speaker, second_speaker)
	sak.create_items(db.actor,"grenade_rgd5",1)
	dialogs.relocate_item_section(first_speaker, "grenade_rgd5", "in")
end
function add_ammo_rgd3(first_speaker, second_speaker)
	sak.create_items(db.actor,"grenade_rgd5",2)
	dialogs.relocate_item_section(first_speaker, "grenade_rgd5", "in")
end
function add_ammo_rgd5(first_speaker, second_speaker)
	sak.create_items(db.actor,"grenade_rgd5",4)
	dialogs.relocate_item_section(first_speaker, "grenade_rgd5", "in")
end
function add_ammo_12x70_buck3(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x70_buck",2)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in")
end
function add_ammo_12x70_buck5(first_speaker, second_speaker)
	sak.create_items(db.actor,"ammo_12x70_buck",4)
	dialogs.relocate_item_section(first_speaker, "ammo_12x70_buck", "in")
end
function give_strelok_pda(first_speaker, second_speaker) 
	sak.out_item_namber("strelok_pda",1) 
end
function strelok_pda_have()
	return amk_utils.inventory_search("strelok_pda",1) ~= false
end
function give_rad_kontainer(first_speaker, second_speaker) 
	sak.out_item_namber("inventory_sakbox_05",1) 
end
function rad_kontainer_have()
	return amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end
function scintist_pda_have()
	return amk_utils.inventory_search("scaintist_pda",1) ~= false
end
function give_scintist_pda(first_speaker, second_speaker) 
	sak.out_item_namber("scaintist_pda",1) 
end
function give_bar_ivancov_playboy(first_speaker, second_speaker) 
	sak.out_item_namber("playboy10",1) 
end
function bar_ivancov_playboy_have()
	return amk_utils.inventory_search("playboy10",1) ~= false
end
function strelok_pda2_have()
	return amk_utils.inventory_search("af_medusa_green",1) ~= false
end
function give_strelok_pda2(first_speaker, second_speaker) 
	sak.out_item_namber("af_medusa_green",1) 
end
function give_chimera_kogot(first_speaker, second_speaker) 
	sak.out_item_namber("mutant_chimera_kogot",7) 
end
function chimera_kogot_have()
	return amk_utils.inventory_search("mutant_chimera_kogot",7) ~= false
end
function give_five_teil(first_speaker, second_speaker) 
	sak.out_item_namber("mutant_dog_tail",5) 
end
function five_teil_have()
	return amk_utils.inventory_search("mutant_dog_tail",5) ~= false
end
function escape_lager_volk_document_have()
	return amk_utils.inventory_search("sak_document2",1) ~= false
end
function give_sescape_lager_volk_document(first_speaker, second_speaker)
	sak.out_item_namber("sak_document2", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function take_agr_saiga(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_ppsh41_sk2","in")		----!!!!TB3D
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_ps","in")
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_ps","in")
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_p","in")
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_p","in")
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_p","in")
     dialogs.relocate_item_section(first_speaker, "ammo_7.62x25_p","in")
     --dialogs.relocate_item_section(first_speaker, "wpn_rk95","in")
     --dialogs.relocate_item_section(first_speaker, "wpn_addon_scope_sako","in")
     --dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190","in")
     --dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ss190","in")
     --dialogs.relocate_item_section(first_speaker, "ammo_5.56x45_ap","in")    
end
function give_yan_scientist_teleport_01(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "sak_resiver_yantar", "in")
end
function mil_volk_resiver_have()
	return amk_utils.inventory_search("sak_resiver",1) ~= false
end
function give_mil_volk_resiver(first_speaker, second_speaker)
	sak.out_item_namber("sak_resiver", 1)
end
function notebook_have()
	return amk_utils.inventory_search("notebook",1) ~= false
end
function give_notebook(first_speaker, second_speaker)
	sak.out_item_namber("notebook", 1)
end
function give_doktor_book(first_speaker, second_speaker)
	sak.out_item_namber("sak_book4", 1)
end
function dummy_battery_red_have()
	return amk_utils.inventory_search("af_dummy_battery_red",1) ~= false
end
function dummy_battery_red_have_info()
	return has_alife_info("doktor_teleport_11_have")
end
function give_dummy_battery_red(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_battery_red", 1)
end
function dummy_pellicle_red_have()
	--TB3D_Services.packet_alert("sak dialog: dummy_pellicle_red_have")
	return amk_utils.inventory_search("af_dummy_pellicle_red",1) ~= false
end
function dummy_pellicle_red_have_info()
	return has_alife_info("doktor_teleport_12_have")
end
function give_dummy_pellicle_red(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_pellicle_red", 1)
end
function simbiont_have()
	return amk_utils.inventory_search("af_simbion",1) ~= false
end
function give_simbiont(first_speaker, second_speaker)
	sak.out_item_namber("af_simbion", 1)
end
function dummy_spring_red_have()
	return amk_utils.inventory_search("af_dummy_spring_red",1) ~= false
end
function give_dummy_spring_red(first_speaker, second_speaker)
	sak.out_item_namber("af_dummy_spring_red", 1)
end
function take_dummy_spring_red(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_dummy_spring_red", "in")
end
function take_soul(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_soul", "in")
end
function diplomat_have()
	return amk_utils.inventory_search("diplomat",1) ~= false
end
function give_diplomat(first_speaker, second_speaker)
	sak.out_item_namber("diplomat", 1)
end
function take_mica(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_ameba_mica", "in")
end
function computer_have()
	return amk_utils.inventory_search("computer",1) ~= false
end
function give_computer(first_speaker, second_speaker)
	sak.out_item_namber("computer", 1)
end
function take_moonlight(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "af_electra_moonlight", "in")
end
function take_sescape_lager_volk_ak(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_ak74u", "in")
end
function esc_petruha_toz_have()
	return amk_utils.inventory_search("wpn_toz34",1) ~= false
end
function give_esc_petruha_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_toz34", "out")
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function give_yan_kruglov_green_art(first_speaker, second_speaker)
	sak.out_item_namber("af_blood_green", 1)
end
function take_new_decoder(first_speaker, second_speaker)					--!!!!TB3D
	dialogs.relocate_item_section(first_speaker, "det_artefact_super", "in")
end
function take_playboy(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "playboy", "in")
end
function yan_kruglov_green_art_have()
	return amk_utils.inventory_search("af_blood_green",1)
end
function give_playboy(first_speaker, second_speaker)
	sak.out_item_namber("playboy", 1)
end
function give_esc_shustryi_medusa(first_speaker, second_speaker)
	sak.out_item_namber("af_medusa", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function esc_shustryi_medusa_have()
	return amk_utils.inventory_search("af_medusa",1) ~= false
end
function gar_dram_novice_mp5_m1_have()
	return amk_utils.inventory_search("wpn_mp5_m1",1) ~= false
end
function give_gar_dram_novice_mp5_m1(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_mp5_m1", "out")
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function gar_dram_novice_burer_hand_have()
	return amk_utils.inventory_search("mutant_burer_hand",1) ~= false
end
function give_gar_dram_novice_burer_hand(first_speaker, second_speaker)
	sak.out_item_namber("mutant_burer_hand", 1)
end
function gar_hellcar_outfit_have()
	return amk_utils.inventory_search("stalker_outfit_m3",1) ~= false
end
function give_gar_hellcar_outfit(first_speaker, second_speaker)
	sak.out_item_namber("stalker_outfit_m3", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function agr_krot_PDA_have()
	return amk_utils.inventory_search("agroprom_pda",1) ~= false
end
function give_agr_krot_PDA(first_speaker, second_speaker)
	sak.out_item_namber("agroprom_pda", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_dolg_flesh_eye_have()
	return amk_utils.inventory_search("mutant_flesh_eye",4) ~= false
end

function give_gar_dolg_flesh_eye(first_speaker, second_speaker)
	sak.out_item_namber("mutant_flesh_eye",4)
	dialogs.relocate_item_section(first_speaker, "wpn_m1891_30_scope", "in")
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_dolg_krovosos_jaw_have()
	return amk_utils.inventory_search("mutant_krovosos_jaw",3) ~= false
end

function give_gar_dolg_krovosos_jaw(first_speaker, second_speaker)
	sak.out_item_namber("mutant_krovosos_jaw",3)
end

function gar_dolg_psevdodog_tail_have()
	return amk_utils.inventory_search("mutant_psevdodog_tail",5) ~= false
end

function give_gar_dolg_psevdodog_tail(first_speaker, second_speaker)
	sak.out_item_namber("mutant_psevdodog_tail",5)
	dialogs.relocate_item_section(first_speaker, "af_babka_3", "in")
end

function bar_dolg_base_guard_art_have()
	return amk_utils.inventory_search("af_vyvert_green",1) ~= false
end

function give_bar_dolg_base_guard_art(first_speaker, second_speaker)
	sak.out_item_namber("af_vyvert_green",1)
	dialogs.relocate_item_section(first_speaker, "af_spirit_4", "in")
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function esc_bridge_vodka_have()
	return amk_utils.inventory_search("vodka",10) ~= false
end

function give_esc_bridge_vodka(first_speaker, second_speaker)
	sak.out_item_namber("vodka",10)
end
function give_esc_bridge_ammo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
	sak.create_items(db.actor,"ammo_5.45x39_ap",2)
end
function esc_fox_medkit_have()
	return amk_utils.inventory_search("medkit",10) ~= false
end
function give_esc_fox_medkit(first_speaker, second_speaker)
	sak.out_item_namber("medkit",10)
end
----------------------------**********************************43
function take_mil_Svoboda_trader_ammo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end

function give_esc_trader_ammo(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_05", 1)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_01", "in")
end

function give_mil_Svoboda_trader_ammo(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_01", 1)
end

function esc_trader_ammo_have()
  	return amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end

function mil_Svoboda_trader_ammo_have()
  	return amk_utils.inventory_search("inventory_sakbox_01",1) ~= false
end
----------------------------**********************************45
function give_ratcatcher_food(first_speaker, second_speaker)
	sak.out_item_namber("bread",20)
	sak.out_item_namber("conserva",20)
	sak.out_item_namber("kolbasa",20)
	sak.out_item_namber("vodka",5)
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function give_mil_Svoboda_trader_plan(first_speaker, second_speaker)
	sak.out_item_namber("sak_plan", 1)
end

function ratcatcher_food_have_check()
  	if amk_utils.inventory_search("bread",20) ~= false
	and amk_utils.inventory_search("conserva",20) ~= false
	and amk_utils.inventory_search("vodka",5) ~= false
	and amk_utils.inventory_search("kolbasa",20) ~= false then
		return true			--109991
	end
	return false
end
function ratcatcher_food_have()
	return has_alife_info("mil_Svoboda_trader_plan_check")
end

function tushkano_have()
  	return amk_utils.inventory_search("mutant_face_tushkano",10) ~= false and amk_utils.inventory_search("vodka",10) ~= false
end
function give_tushkano(first_speaker, second_speaker)
	sak.out_item_namber("mutant_face_tushkano",10)
	sak.out_item_namber("vodka",10)
end
function mil_Svoboda_trader_plan_have()
  	return amk_utils.inventory_search("sak_plan",1) ~= false
end
--------------------**********************************************41
function mil_Svoboda_trader_outfit_have()
	return amk_utils.inventory_search("soldier_outfit",2) ~= false
end

function give_mil_Svoboda_trader_outfit(first_speaker, second_speaker)
	sak.out_item_namber("soldier_outfit", 1)
end
-------------------**********************************************42
function take_val_pula_ammo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_01", "in")
end

function give_gar_hellcar_ammo(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_01", 1)
end

function val_pula_ammo_have()
  	return amk_utils.inventory_search("inventory_sakbox_01",1) ~= false
end

-------------------**********************************************83
function give_val_pula_boar_leg(first_speaker, second_speaker)
	sak.out_item_namber("mutant_boar_leg",8)
	sak.out_item_namber("vodka",8)
	dialogs.relocate_item_section(first_speaker, "af_dummy_pellicle_red", "in")
end

function val_pula_boar_leg_have()
  	return amk_utils.inventory_search("mutant_boar_leg",8) ~= false and amk_utils.inventory_search("vodka",8) ~= false
end

-------------------**********************************************84
function give_ratcatcher_order(first_speaker, second_speaker)
--TB3D_Services.info_alert("sak dialog: ratcatcher order")
	sak.out_item_namber("rad_document7",1)
	dialogs.relocate_item_section(first_speaker, "af_dummy_battery_red", "in")
--TB3D_Services.info_alert("sak dialog: ratcatcher order done")
end

function ratcatcher_order_have()
  	return amk_utils.inventory_search("rad_document7",1) ~= false
end
-------------------**********************************************46

function val_escort_PDA_have()
	return amk_utils.inventory_search("und_pda",1) ~= false
end

function give_val_escort_PDA(first_speaker, second_speaker)
	sak.out_item_namber("und_pda",1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
-------------------**********************************************35

function bar_dolg_petrenko_gaussgan_have()
	return amk_utils.inventory_search("wpn_gungauss",1) ~= false
end

function give_bar_dolg_petrenko_gaussgan(first_speaker, second_speaker)
	sak.out_item_namber("wpn_gungauss",1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
-------------------**********************************************55
function bar_dolg_petrenko_electra_flash_have()
	return amk_utils.inventory_search("af_electra_flash",1) ~= false
end

function give_bar_dolg_petrenko_electra_flash(first_speaker, second_speaker)
	sak.out_item_namber("af_electra_flash",1)
end
----------------------------**********************************66
function take_bar_dolg_petrenko_exo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end

function give_yan_scientist_exo(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_05", 1)
	dialogs.relocate_item_section(first_speaker, "exo_outfit", "in")
	dialogs.relocate_item_section(first_speaker, "exo_outfit", "in")
end

function give_bar_dolg_petrenko_exo(first_speaker, second_speaker)
	sak.out_item_namber("exo_outfit",2)--
end

function yan_scientist_exo_have()
  	return amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end

function bar_dolg_petrenko_exo_have()
  	return amk_utils.inventory_search("exo_outfit",2) ~= false
end
----------------------------**********************************52
function take_sak_repair_box(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end

function give_esc_trader_sak_repair(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_05", 1)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_02", "in")
end

function give_sak_repair_box(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_02", 1)
	dialogs.relocate_item_section(first_speaker, "strelok_outfit", "in")
end

function esc_trader_repair_box_have()
  	return amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end

function sak_repair_box_have()
  	return amk_utils.inventory_search("inventory_sakbox_02",1) ~= false
end
-------------------**********************************************63
function sak_find_seif_have()
	return amk_utils.inventory_search("inventory_sakbox_03",1) ~= false
end

function give_sak_find_seif(first_speaker, second_speaker)
	sak.give_seif("inventory_sakbox_03")
end
-------------------**********************************************56
function sak_gold_fish_have()
	return amk_utils.inventory_search("af_gold_fish",1) ~= false
end

function give_sak_gold_fish(first_speaker, second_speaker)
	sak.out_item_namber("af_gold_fish", 1)
end
-------------------**********************************************65

function take_sak_reward_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "quest_manycase_01", "in")
end

function give_mil_trader_sak_reward_outfit(first_speaker, second_speaker)
	sak.out_item_namber("quest_manycase_01", 1)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit", "in")
end
function give_sak_reward_outfit(first_speaker, second_speaker)
	sak.out_item_namber("militaryspec_outfit", 1)
end
function mil_trader_sak_reward_outfit_have()
  	return amk_utils.inventory_search("quest_manycase_01",1) ~= false
end
function sak_reward_outfit_have()
  	return amk_utils.inventory_search("militaryspec_outfit",1) ~= false
end
function sak_have_start()
	if db.actor:has_info("sak_gold_fish_start") or db.actor:has_info("sak_find_seif_start") or db.actor:has_info("sak_repair_box_start") or db.actor:has_info("sak_reward_outfit_start") then
  	return true
	else
	return false
	end 
end
function sak_have_have()
	if db.actor:has_info("sak_gold_fish_have") or db.actor:has_info("sak_find_seif_have") or db.actor:has_info("sak_repair_box_have") or db.actor:has_info("sak_reward_outfit_have") then
  	return true
	else
	return false
	end 
end
function yan_scientist_books_have()
	return amk_utils.inventory_search("sak_book1",1) ~= false and amk_utils.inventory_search("sak_book2",1) ~= false and amk_utils.inventory_search("sak_book3",1) ~= false
end
function give_yan_scientist_books(first_speaker, second_speaker)
	sak.out_item_namber("sak_book1",1)
	sak.out_item_namber("sak_book2",1)
	sak.out_item_namber("sak_book3",1)
end
function yan_kruglov_decoder_have()
	return amk_utils.inventory_search("decoder1",1) ~= false
end
function give_yan_kruglov_decoder(first_speaker, second_speaker)
	sak.out_item_namber("decoder1",1)
end
function take_yan_kruglov_art(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end
function give_esc_trader_yan_kruglov_art(first_speaker, second_speaker)
	sak.out_item_namber("inventory_sakbox_05", 1)
	dialogs.relocate_item_section(first_speaker, "quest_manycase_01", "in")
end
function give_yan_kruglov_art(first_speaker, second_speaker)
	sak.out_item_namber("quest_manycase_01", 1)
end
function esc_trader_yan_kruglov_art_have()
  	return amk_utils.inventory_search("inventory_sakbox_05",1) ~= false
end
function yan_kruglov_art_have()
  	return amk_utils.inventory_search("quest_manycase_01",1) ~= false
end
function take_bar_ivancov_rg6(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_rg-6", "in")
end
function give_mil_trader_bar_ivancov_rg6(first_speaker, second_speaker)
	sak.out_item_namber("wpn_rg-6", 1)
	dialogs.relocate_item_section(first_speaker, "quest_manycase_01", "in")
end
function give_bar_ivancov_rg6(first_speaker, second_speaker)
	sak.out_item_namber("quest_manycase_01", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function mil_trader_bar_ivancov_rg6_have()
  	return amk_utils.inventory_search("wpn_rg-6",1) ~= false
end
function bar_ivancov_rg6_have()
  	return amk_utils.inventory_search("quest_manycase_01",1) ~= false
end
function take_blockpost_case(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "quest_case_01", "in")
end
function give_blockpost_case(first_speaker, second_speaker)
	sak.out_item_namber("quest_case_01", 1)
end
function blockpost_case_have()
  	return amk_utils.inventory_search("quest_case_01",1) ~= false
end
function esc_find_groza_have()
--TB3D_Services.info_alert("Have Groza?")
  	return amk_utils.inventory_search("wpn_groza",1) ~= false
end
function give_find_groza(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_groza", "out")
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function give_find_af_dummy_glassbeads(first_speaker, second_speaker)
  if TB3D_Modders.use_lc_message then TB3D_Services.info_alert("SAK DIALOG: glassbeads give") end
	sak.out_item_namber("af_babka_3", 1)
end
function yan_scientist_find_af_dummy_glassbeads_have()
  if TB3D_Modders.use_lc_message then TB3D_Services.info_alert("SAK DIALOG: glassbeads have") end
  	return amk_utils.inventory_search("af_babka_3",1) ~= false
end
function give_find_dinamit(first_speaker, second_speaker)
	sak.out_item_namber("dynamite", 1)	
end
function mil_lukash_find_dinamit_have()
  	return amk_utils.inventory_search("dynamite",1) ~= false
end
function give_find_case(first_speaker, second_speaker)
	sak.out_item_namber("quest_case_06", 1)	
end
function yan_scientist_find_case_have()
	local reslt = amk_utils.inventory_search("quest_case_06",1) ~= false
	--TB3D_Services.info_alert("SAK DIALOG: yan_scientist_find_case_have ["..utils.to_str(reslt).."]")
  	return reslt
end
function give_find_2case(first_speaker, second_speaker)
	sak.out_item_namber("quest_case_05", 1)	
end
function bar_dolg_leader_find_case_have()
  	return amk_utils.inventory_search("quest_case_05",1) ~= false
end
local armor_profit_margin = 5
function sak_repair_precond(trader, actor)
	local item_in_slot_6 = db.actor:item_in_slot(6)
	if item_in_slot_6 ~= nil and 1 > item_in_slot_6:condition() + 0.01 then 
		 return true
	else return false
	end	 
end
function sak_check_money_s6(trader, actor)
	local item_in_slot = db.actor:item_in_slot(6)
	if item_in_slot ~= nil then 
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		if item_repair_cost > 0 and db.actor:money() >= item_repair_cost and 1 > item_in_slot:condition() then
			return true
		end 
	end
	return false
end
function sak_repiar_armor_s6(trader, actor)
	local item_in_slot = db.actor:item_in_slot(6)
	if item_in_slot ~= nil then
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		amk_mod.repair_armor(1)
		dialogs.relocate_money(actor, item_repair_cost, 1)
	end	
end
function repair_costs(first_speaker, second_speaker)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	local item_name_and_price = ""
	local item_repair_cost = 0
	if db.actor ~= nil then 
		local item_in_slot_6 = db.actor:item_in_slot(6)
		if item_in_slot_6 ~= nil then
			item_repair_cost = math.floor( (1-item_in_slot_6:condition()) * item_in_slot_6:cost() * armor_profit_margin )
			if item_repair_cost > 0 then
				item_name_and_price = game.translate_string("list_trader_repair_2").." %c[255,238,155,23]"..item_repair_cost.." RU%c[default]"
				news_manager.give_talk_message(item_name_and_price, task_texture, task_rect, "iconed_trade_info")
			end
		end
	end
end

function actor_has_money_30000()
  return db.actor:money()>=30000
end

function actor_has_money_40000()
  return db.actor:money()>=50000
end

function actor_has_money_100000()
  return db.actor:money()>=100000
end
function actor_has_money_150000()
  return db.actor:money()>=150000
end
function actor_has_money_400000()
  return db.actor:money()>=400000
end
function give_money_100000(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,100000,1)
end

function give_money_150000(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,150000,1)
end

function give_money_400000(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,400000,1)
end

function give_money_30000(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,30000,1)
end

function give_money_40000(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,50000,1)
end

function relocate_money(victim, num, type)
	if db.actor and victim then
		if type == "in" then
			db.actor:give_money(num)
			if TB3D_Modders.log_game_stats == true then game_stats.money_quest_update(num) end
		elseif type == 1 then
			db.actor:give_money(-num)
			if TB3D_Modders.log_game_stats == true then game_stats.money_quest_update(-num) end
		end
		news_manager.relocate_money(db.actor, type, num)
	end
end

function soul_have()
	return amk_utils.inventory_search("af_soul",1) ~= false
end
function soul3_have()
	return amk_utils.inventory_search("af_soul",3) ~= false
end
function kristall_have()
	return amk_utils.inventory_search("af_cristall",1) ~= false
end
function moonlight_have()
	return amk_utils.inventory_search("af_electra_moonlight",1) ~= false
end
function mica2_have()
	return amk_utils.inventory_search("af_ameba_mica",2) ~= false
end
function mica3_have()
	return amk_utils.inventory_search("af_ameba_mica",3) ~= false
end
function mica_have()
	return amk_utils.inventory_search("af_ameba_mica",1) ~= false
end
function actor_2500_have()
  return db.actor:money()>=2500
end
function actor_9000_have()
  return db.actor:money()>=9000
end
function actor_20000_have()
  return db.actor:money()>=20000
end
function actor_5000_have()
  return db.actor:money()>=5000
end
function actor_15000_have()
  return db.actor:money()>=15000
end
function actor_10000_have()
  return db.actor:money()>=10000
end
function actor_30000_have()
  return db.actor:money()>=30000
end
function give_soul(first_speaker, second_speaker)
	sak.out_item_namber("af_soul", 1)
end
function give_3soul(first_speaker, second_speaker)
	sak.out_item_namber("af_soul", 3)
end
function give_kristall(first_speaker, second_speaker)
	sak.out_item_namber("af_cristall", 1)
end
function give_moonlight(first_speaker, second_speaker)
	sak.out_item_namber("af_electra_moonlight", 1)
end
function give_mica(first_speaker, second_speaker)
	sak.out_item_namber("af_ameba_mica", 1)
end
function give_2500_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,2500,1)
end
function give_10000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,10000,1)
end
function give_15000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,15000,1)
end
function give_5000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,5000,1)
end
function give_20000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,20000,1)
end
function give_9000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,9000,1)
end
function give_30000_money(t1,t2) 
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,30000,1)
end

function spawn_playboys()
	if amk.load_variable("first_started", 0) > 109931 then						--were pre-spawned prior to 109932
		amk.spawn_item("playboy3",vector():set(-212.99,-22.51,-126.06),59,40605) 
		amk.spawn_item("playboy2",vector():set(112.87,-1.94,1.6),117,413895)
		amk.spawn_item("playboy1",vector():set(138.57,-3.5,22.0),1237,37466)
		amk.spawn_item("playboy4",vector():set(-156.23,1.44,-162.05),669,82783)
		amk.spawn_item("playboy5",vector():set(-19.52,-3.22,-19.91),1593,287481)
		amk.spawn_item("playboy6",vector():set(-52.11,-10.52,35.31),1608,257284)
		amk.spawn_item("playboy7",vector():set(41.4,5.45,-84.15),1100,226116)
		amk.spawn_item("playboy8",vector():set(-135.57,1.29,-523.72),832,22097)
		amk.spawn_item("playboy9",vector():set(-6.19,-4.21,201.42),2195,94368)
		amk.spawn_item("playboy10",vector():set(306.45,-38.06,-23.05),1930,69058)
		amk.spawn_item("playboy11",vector():set(30.92,-2.46,-41.34),1997,20510)
	end
end