--TB3D 1.1.0.0.1.0 use dyn spawns
function my_ver() return "1.1.0.0.1.0" end
--[[ embrions
  idea by andrew53
  algorithm & optimization by Monnoroch
  realization by Shadowman  
  special thanks to Malandrinus for manual on object_binder
]]
local force_obinder = TB3D_Modders.use_obj_obinder				--110010, calls into game binder (alife)
if force_binder == nil then force_binder = true end

local mut_sec =  {
    ["zone_krovosos"]="tb3dm_bloodsucker_strong",		--"bloodsucker_weak",
    ["zone_burer"]="tb3dm_burer_normal",				--"burer_weak",
    ["zone_zombie"]="tb3dm_zombie_strong",				--"zombie_weak",
    ["zone_snork"]="tb3dm_snork_jumper",				--"snork_weak",
    ["zone_flesh"]="tb3dm_flesh_weak",					--"flesh_weak",
    ["zone_gigant"]="tb3dm_gigant",						--"gigant_normal",
    ["zone_poltergeist"]="tb3dm_poltergeist_normal_tele",--"m_poltergeist_normal_tele",
    ["zone_psevdodog"]="tb3dm_pseudodog_weak",			--"pseudodog_weak",
    ["zone_controller"]="tb3dm_controller_normal",		--"m_controller_normal",
    ["zone_chimera"]="tb3dm_chimera_strong",			--"chimera_weak",
    ["zone_boar"]="tb3dm_boar",							--"boar_weak",
    ["zone_tushkano"]="tb3dm_tushkano",					--"tushkano_normal",
    ["zone_psydog"]="tb3dm_psy_dog",					--"psy_dog",
    ["zone_cat"]="tb3dm_cat_strong",					--"cat_weak",
    ["zone_dog"]="tb3dm_dog_habaruch",					--"dog_normal"
}

-- number of monsters from one coocon
local bonus = {
	["tb3dm_boar"]=2,
	["tb3dm_tushkano"]=4,
	["tb3dm_cat_strong"]=2,
	["tb3dm_dog_habaruch"]=3,
	["tb3dm_bloodsucker_strong"]=1,
    ["tb3dm_burer_normal"]=1,
    ["tb3dm_zombie_strong"]=1,
    ["tb3dm_snork_jumper"]=1,
    ["tb3dm_flesh_weak"]=1,
    ["tb3dm_gigant"]=1,
    ["tb3dm_poltergeist_normal_tele"]=1,
    ["tb3dm_pseudodog_weak"]=1,
    ["tb3dm_controller_normal"]=1,
    ["tb3dm_chimera_strong"]=1,
    ["tb3dm_psy_dog"]=1
}

function init(obj)
    local new_binder = embr_binder(obj)
    obj:bind_object(new_binder)
end

class "embr_binder" (object_binder)
function embr_binder:__init(obj) super(obj)
end 

function embr_binder:reload(section)
    if force_obinder then object_binder.reload(self, section) end			--110010
end

function embr_binder:reinit()
    if force_obinder then object_binder.reinit(self) end			--110010
end

function embr_binder:net_spawn(data)
	if TB3D_Modders.use_info_message then TB3D_Services.packet_alert("embrion binder: net spawn["..utils.to_str(self.object:name()).."] section["..self.object:section().."]") end
    local mutant_section = mut_sec[self.object:name()]
    for i = 1, bonus[mutant_section] do
        alife():create(mutant_section,self.object:position(),self.object:level_vertex_id(),self.object:game_vertex_id())
    end
    alife():release(self.object)
	if force_obinder then
		return object_binder.net_spawn(self, data)			--110010
	else
		return true
	end
end

function embr_binder:net_destroy()
	--TB3D_Services.packet_alert("embrion binder: net destroy")
	if TB3D_Modders.use_destroy_message then TB3D_Services.packet_alert("embrion binder: net destroy["..utils.to_str(self.object:name()).."] section["..self.object:section().."]") end
    if force_obinder then object_binder.net_destroy(self) end			--110010
	if TB3D_Modders.use_destroy_message then TB3D_Services.packet_alert("embrion binder: net destroy["..utils.to_str(self.object:name()).."] done") end
	--TB3D_Services.packet_alert("embrion binder: net destroy done")
end
