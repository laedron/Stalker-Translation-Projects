--TB3D 1.0.9.9.7.5
function my_ver() return "1.0.9.9.7.5" end
--Vergas Clock-timer
class "cheat" (CUIScriptWnd)

local hh = 0      		-- Hours before the release at the installation
local mm = 0      		-- number of minutes to release during the installation
local volume_wnd_3 = nil
local volume_wnd_1 = nil
local flag_set_timer  	-- flag is set the timer
local flag_set_sek		-- flag set timing
local timer_mode		-- Flag of the established regime (1 - Timer 2 - stopwatch)

function cheat:__init(owner) super()
	self.owner = owner
	self:InitControls()
	self:InitCallBacks()
end

function cheat:InitControls()
	
	-- The position and size of the window
	self:Init(676,0,347,658)
	self:SetAutoDelete(true)		--109975
	
	-- file-descriptor elements
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_cheat_timer.xml")
	
	xml:InitStatic("background", self)   --Actually watch
	xml:InitStatic("background_2", self) --Background for the inscription 
	xml:InitStatic("static_1", self)  --inscription TIMER SETTING
	xml:InitStatic("static_2", self)  --inscription USE instruction which
	--xml:InitStatic("static_3", self)  --sign the statement text string 1
	--xml:InitStatic("static_4", self)  --sign the statement text string 2
	
	self:Register(xml:Init3tButton("btn_sbros", self),"btn_sbros")	-- RESET button
	self:Register(xml:Init3tButton("btn_ok", self),"btn_ok")	    -- OK button
	self:Register(xml:Init3tButton("btn_quit", self),"btn_quit")	-- STOP button
	self:Register(xml:Init3tButton("btn_hh", self),"btn_hh")	    -- Button HH
	self:Register(xml:Init3tButton("btn_mm", self),"btn_mm")	    -- Button MM
	self:Register(xml:Init3tButton("btn_change", self),"btn_change")	-- MODE button
	
	-- Output the instructions
	-- first line
	local inst = "MODE : Timer/Stopwatch"	
	volume_wnd_i_1 = CUIStatic()
	volume_wnd_i_1:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_1)
	volume_wnd_i_1:SetWndRect(-340, 367, 200,20)    --337, 200)       
	volume_wnd_i_1:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_1:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_1:SetText(inst)
	
	-- second row
	local inst = "OK : Start"
	volume_wnd_i_2 = CUIStatic()
	volume_wnd_i_2:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_2)
	volume_wnd_i_2:SetWndRect(-340, 377, 200,20)    --337, 200)       
	volume_wnd_i_2:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_2:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_2:SetText(inst)
	
	-- third row
	local inst = "QUIT : Switch Off"
	volume_wnd_i_3 = CUIStatic()
	volume_wnd_i_3:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_3)
	volume_wnd_i_3:SetWndRect(-340, 387, 200,20)    --337, 200)       
	volume_wnd_i_3:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_3:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_3:SetText(inst)
	
	-- fourth line
	local inst = "CLEAR : Reset"
	volume_wnd_i_4 = CUIStatic()
	volume_wnd_i_4:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_4)
	volume_wnd_i_4:SetWndRect(-340, 397, 200,20)    --337, 200)       
	volume_wnd_i_4:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_4:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_4:SetText(inst)

	-- fifth line
	local inst = "MANAGE TIMER : Timer Settings"
	volume_wnd_i_5 = CUIStatic()
	volume_wnd_i_5:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_5)
	volume_wnd_i_5:SetWndRect(-340, 407, 200,20)    --337, 200)       
	volume_wnd_i_5:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_5:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_5:SetText(inst)
	
	-- sixth line
	local inst = "MANAGE WATCH : Stopwatch Settings"
	volume_wnd_i_6 = CUIStatic()
	volume_wnd_i_6:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_6)
	volume_wnd_i_6:SetWndRect(-340, 417, 200,20)    --337, 200)       
	volume_wnd_i_6:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_6:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_6:SetText(inst)

	-- seventh line
	local inst = "GREEN Indicator : Chosen Mode Input"
	volume_wnd_i_7 = CUIStatic()
	volume_wnd_i_7:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_7)
	volume_wnd_i_7:SetWndRect(-340, 427, 200,20)    --337, 200)       
	volume_wnd_i_7:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_7:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_7:SetText(inst)
	
	-- Eighth row
	local inst = "RED Indicator : Chosen Mode Started"
	volume_wnd_i_8 = CUIStatic()
	volume_wnd_i_8:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_8)
	volume_wnd_i_8:SetWndRect(-340, 437, 200,20)    --337, 200)       
	volume_wnd_i_8:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_8:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_8:SetText(inst)
	
	-- ninth entry
	local inst = "Lifetime Guarantee!!!"
	volume_wnd_i_9 = CUIStatic()
	volume_wnd_i_9:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_9)
	volume_wnd_i_9:SetWndRect(-340, 447, 200,20)    --337, 200)       
	volume_wnd_i_9:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_9:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_9:SetText(inst)
	
	-- tenth line
	local inst = "PLEASE ENJOY!!"
	volume_wnd_i_10 = CUIStatic()
	volume_wnd_i_10:SetAutoDelete(true)
	self:AttachChild(volume_wnd_i_10)
	volume_wnd_i_10:SetWndRect(-270, 467, 200,20)    --337, 200)       
	volume_wnd_i_10:SetFont(GetFontLetterica16Russian())
	volume_wnd_i_10:SetTextColor(255, 255, 255, 255)
	volume_wnd_i_10:SetText(inst)

	-- Output the time
	local time_h = level.get_time_hours() 
	local time_m = level.get_time_minutes() 
	local str_t = timer_v.timer_str(time_m, time_h)
	--simulate a second
	local str_sek = timer_v.imitation_sek(time_h,time_m)
	
	str_t = "Time  "..str_t..str_sek
	
	volume_wnd_1 = CUIStatic()
	volume_wnd_1:SetAutoDelete(true)
	self:AttachChild(volume_wnd_1)
	volume_wnd_1:SetWndRect(118, 240, 100, 15)       
	volume_wnd_1:SetFont(GetFontLetterica18Russian())
	volume_wnd_1:SetTextColor(100, 154, 205, 50)
	volume_wnd_1:SetText(str_t)
	
	--Output the days in the Zone
	local time_d = amk.game_days()
	if (time_d >= 10)  and (time_d < 10 ) then
		str_d = string.format(" %d", time_d)
	elseif time_d >= 100 then
		str_d = string.format("%d", time_d)
	elseif time_d < 10 then
		str_d = string.format("  %d", time_d)
	end
	
	
	local volume_wnd_2 = nil
	volume_wnd_2 = CUIStatic()
	volume_wnd_2:SetAutoDelete(true)
	self:AttachChild(volume_wnd_2)
	volume_wnd_2:SetWndRect(85,260, 100, 15)
	volume_wnd_2:SetFont(GetFontLetterica18Russian())
	volume_wnd_2:SetTextColor(100, 154, 205, 50)
	volume_wnd_2:SetText("Days in the Zone:"..str_d)
	
	--Output the testimony of a timer and stopwatch
	volume_wnd_3 = CUIStatic()
	volume_wnd_3:SetAutoDelete(true)
	self:AttachChild(volume_wnd_3)
	volume_wnd_3:SetWndRect(116,150, 100, 15)
	volume_wnd_3:SetFont(GetFontLetterica18Russian())
	
	-- affect the 
	if timer_mode == nil then  --mode is undefined.
		flag_set_timer = timer_v.timer_flag_in_cheat(1)
		flag_set_sek = timer_v.timer_flag_in_cheat(2)
		
		if flag_set_timer == 1 then
			timer_mode = 1
		elseif flag_set_sek == 1 then
			timer_mode = 2
		end
		if timer_mode == nil then  --mode is undefined.
			--just in case, reset the flags of the timer and stopwatch
			flag_set_timer = 0
			flag_set_sek = 0
			hh = 0
			mm = 0
			timer_v.set_timer_flag(1,flag_set_timer,hh,mm)
			timer_v.set_timer_flag(2,flag_set_sek,hh,mm)
			timer_mode = 1		   -- Forcibly put the timer mode
		end
	end
	
	-- Timer Mode
	if timer_mode ==1 then
		flag_set_timer = timer_v.timer_flag_in_cheat(1)
		if (flag_set_timer == 0) or (flag_set_timer == nil) then
			hh = 0
			mm = 0
		end
		local str_t = timer_v.timer_str(mm, hh)
		if flag_set_timer == 1 then
			volume_wnd_3:SetTextColor(255, 178, 34, 34)		--red output
			str_t = timer_v.h_m_from_mm()
		else
			volume_wnd_3:SetTextColor(100, 154, 205, 50)	--green output
		end
		volume_wnd_3:SetText("Next Emission "..str_t)
	end
	
	--Stopwatch Mode
	if timer_mode == 2 then
		flag_set_sek = timer_v.timer_flag_in_cheat(2)
		if (flag_set_sek == 0) or (flag_set_sek == nil) then
			hh = 0
			mm = 0
		end
		local str_t = timer_v.timer_str(mm, hh)
		if flag_set_sek == 1 then
			volume_wnd_3:SetTextColor(255, 178, 34, 34)		--red output
			str_t = timer_v.h_m_from_mm()
		else
			volume_wnd_3:SetTextColor(100, 154, 205, 50)	--green output
		end
		volume_wnd_3:SetText("Stop Watch "..str_t)
	end
end

function cheat:InitCallBacks()
	self:AddCallback("btn_sbros", ui_events.BUTTON_CLICKED, self.btn_sbros, self)   	-- RESET button
	self:AddCallback("btn_ok", ui_events.BUTTON_CLICKED, self.btn_ok, self)         	-- OK button
	self:AddCallback("btn_quit", ui_events.BUTTON_CLICKED, self.btn_quit, self)     	-- Calling it Quits
	self:AddCallback("btn_hh", ui_events.BUTTON_CLICKED, self.btn_hh, self)         	-- Button HH
	self:AddCallback("btn_mm", ui_events.BUTTON_CLICKED, self.btn_mm, self)         	-- Button MM
	self:AddCallback("btn_change", ui_events.BUTTON_CLICKED, self.btn_change, self)     -- MODE button
end

function cheat:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		-- на выход повесим Esc
		if dik == DIK_keys.DIK_ESCAPE then
			self:on_quit()
		-- reaction 1
		elseif dik == DIK_keys.DIK_1 then
			
		end
	end
	return true
end

function cheat:on_quit()
--amk.spawn_item_in_inv("timer")
	self:GetHolder():start_stop_menu (self,true)
end

function cheat:btn_sbros()					-- RESET button
	hh = 0
	mm = 0
	local str_t = timer_v.timer_str(mm, hh)
	volume_wnd_3:SetTextColor(100, 154, 205, 50)
	if timer_mode == 1 then
		volume_wnd_3:SetText("Next Emission "..str_t)
		flag_set_timer = 0   -- timer is reset the clock
		timer_v.set_timer_flag(1,flag_set_timer,hh,mm) --timer is reset to Hood
	else
		volume_wnd_3:SetText("Stop Watch "..str_t)
		flag_set_sek = 0   -- stopwatch reset the clock
		timer_v.set_timer_flag(2,flag_set_sek,hh,mm) --timer is reset at Hood
	end
end

function cheat:btn_ok()					    -- OK button
	-- take off the current time
	local time_h = level.get_time_hours() 
	local time_m = level.get_time_minutes() 
	local str_t = timer_v.timer_str(time_m, time_h)
	--simulate a second
	local str_sek = timer_v.imitation_sek(time_h,time_m)
	str_t = "Time  "..str_t..str_sek
	--output the time
	volume_wnd_1:SetText(str_t)
	
	--check and see if the uzho Khoi-thread mode?
	if (flag_set_timer == 1) or (flag_set_sek == 1) then
		return  --button press can not, not yet dropped a set mode
	end
	
	--the timer on the clock
	if timer_mode == 1 then
		if (hh ~= 0) or (mm ~= 0) then
			flag_set_timer = 1  --timer is set on the clock
			--output the inscription in red
			str_t = timer_v.timer_str(mm, hh)
			volume_wnd_3:SetTextColor(255, 178, 34, 34)
			volume_wnd_3:SetText("Next Emission "..str_t)
			timer_v.set_timer_flag(1,flag_set_timer,hh,mm) --passed flags and data to set the timer on the Hood
		end
	end
	
	--turn on the stopwatch to clock
	if timer_mode == 2 then
		flag_set_sek = 1  --stopwatch mounted on the clock
		--output the inscription in red
		str_t = timer_v.timer_str(mm, hh)
		volume_wnd_3:SetTextColor(255, 178, 34, 34)
		volume_wnd_3:SetText("Stop Watch "..str_t)
		timer_v.set_timer_flag(2,flag_set_sek,hh,mm) --passed flags and data to set the stopwatch on the Hood
	end
end

function cheat:btn_quit()					-- Calling it Quits
		self:on_quit()
end

function cheat:btn_hh()					    -- Button HH
	-- check to see whether it is possible to reap?
	if timer_mode == 1 then
		if flag_set_timer == 0 then
			-- I rely
			hh = hh + 1
			if hh == 24 then
				mm = 0
			elseif hh == 25 then
				hh = 0
			end
			-- output the
			local str_t = timer_v.timer_str(mm, hh)
			volume_wnd_3:SetText("Next Emission "..str_t)
		end
	end
end

function cheat:btn_mm()					    -- Button MM
	-- check to see whether it is possible to reap?
	if timer_mode == 1 then
		if flag_set_timer == 0 then
			-- I rely
			if mm < 59 then
				mm = mm + 1
			else
				mm = 0
				if hh < 24 then
					hh = hh+1
				end
			end
			if hh == 24 then
				mm = 0
			end
			-- output the
			local str_t = timer_v.timer_str(mm, hh)
			volume_wnd_3:SetText("Next Emission "..str_t)
		end
	end
end

function cheat:btn_change()					    -- MODE button 
	--check to see whether it is possible to reap?
	if (flag_set_timer == 1) or (flag_set_sek == 1) then
		return      -- harvesting can not: one mode is active and is not reset
	end
	
	--change the mode
	if timer_mode ==1 then
		timer_mode = 2
	else
		timer_mode = 1
	end
	
	-- Change the lean hours
	mm = 0
	hh = 0
	local str_t = timer_v.timer_str(mm, hh)
	if timer_mode == 1 then
		volume_wnd_3:SetText("Next Emission "..str_t)
	else
		volume_wnd_3:SetText("Stop Watch "..str_t)
	end
end

