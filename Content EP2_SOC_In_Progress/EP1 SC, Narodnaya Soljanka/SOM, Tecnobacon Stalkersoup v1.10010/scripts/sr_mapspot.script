--TB3D 1.0.9.9.2 new 10/15/12
function my_ver() return "1.0.9.9.2" end
----------------------------------------------------------------------------------------------------
-- Подсвечивает себя при входе актёра
----------------------------------------------------------------------------------------------------

class "action_mapspot"

function action_mapspot:__init(obj, storage)
	self.object = obj
	self.st = storage
end

function action_mapspot:reset_scheme()
	--TB3D_Services.packet_alert("sr mapspot: action_mapspot:reset_scheme["..self.object:name().."]")
	self.st.mapspots_sended = false
end

function action_mapspot:update(delta)
	--TB3D_Services.packet_alert("sr mapspot: update["..self.object:name().."]")
	if db.actor then
		if level.map_has_object_spot(self.object:id(), self.st.location) == 0 and self.object:inside(db.actor:position()) then
			level.map_add_object_spot(self.object:id(), self.st.location, self.st.hint)
		end
		--if 
		xr_logic.try_switch_to_another_section(self.object, self.st, db.actor) --then
			--return
		--end
	end
end

---------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, storage)
	--TB3D_Services.packet_alert("sr mapspot: add_to_binder["..npc:name().."] scheme["..scheme.."] section["..section.."]")
	local new_action = action_mapspot(npc, storage)
	xr_logic.subscribe_action_for_events(npc, storage, new_action)
end

function set_scheme(obj, ini, scheme, section, gulag_name)
	--TB3D_Services.packet_alert("sr mapspot: add_to_binder["..gulag_name.."] scheme["..scheme.."] section["..section.."]")
	local st = xr_logic.assign_storage_and_bind(obj, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, obj)
	st.hint     = utils.cfg_get_string(ini, section, "hint",     obj, true,  "", "")
	st.location = utils.cfg_get_string(ini, section, "location", obj, false, "", "crlc_small")
end
